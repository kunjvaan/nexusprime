/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LendingPoolNovel,
  LendingPoolNovelInterface,
} from "../../../contracts/LendingPoolNovel.sol/LendingPoolNovel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_baseRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slope1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_kink",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_collateralFactorBps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidationThresholdBps",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesMinted",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralSeized",
        type: "uint256",
      },
    ],
    name: "Liquidation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesBurned",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralFactorBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collatAmount",
        type: "uint256",
      },
    ],
    name: "getCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationThresholdBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiptToken",
    outputs: [
      {
        internalType: "contract ReceiptToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiptToken",
        type: "address",
      },
    ],
    name: "setReceiptToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slope1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastInterestBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022cd380380620022cd833981810160405281019062000037919062000314565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603620000a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a09062000428565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036200011b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000112906200049a565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a2600160028190555086600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600381905550836005819055508260068190555081600a8190555080600b8190555050505050505050620004bc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002a18262000274565b9050919050565b620002b38162000294565b8114620002bf57600080fd5b50565b600081519050620002d381620002a8565b92915050565b6000819050919050565b620002ee81620002d9565b8114620002fa57600080fd5b50565b6000815190506200030e81620002e3565b92915050565b600080600080600080600060e0888a0312156200033657620003356200026f565b5b6000620003468a828b01620002c2565b9750506020620003598a828b01620002c2565b96505060406200036c8a828b01620002fd565b95505060606200037f8a828b01620002fd565b9450506080620003928a828b01620002fd565b93505060a0620003a58a828b01620002fd565b92505060c0620003b88a828b01620002fd565b91505092959891949750929550565b600082825260208201905092915050565b7f496e76616c696420636f6c6c61746572616c20746f6b656e0000000000000000600082015250565b600062000410601883620003c7565b91506200041d82620003d8565b602082019050919050565b60006020820190508181036000830152620004438162000401565b9050919050565b7f496e76616c6964206f7261636c65000000000000000000000000000000000000600082015250565b600062000482600e83620003c7565b91506200048f826200044a565b602082019050919050565b60006020820190508181036000830152620004b58162000473565b9050919050565b611e0180620004cc6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806375b238fc116100b8578063b2016bd41161007c578063b2016bd414610308578063b6b55f2514610326578063c5ebeaec14610342578063e48647311461035e578063ec78e8321461037c578063fd2da3391461039a57610137565b806375b238fc146102745780637f5007ed1461029257806382fee08f146102b05780638456cb59146102e0578063a62b75a8146102ea57610137565b8063429b62e5116100ff578063429b62e5146101ba5780634d99f714146101ea5780635c975abb14610206578063613cf420146102245780636c321c8a1461025657610137565b80631f68f20a1461013c5780632630c12f1461015a5780632e1a7d4d14610178578063371fd8e6146101945780633f4ba83a146101b0575b600080fd5b6101446103b8565b6040516101519190611464565b60405180910390f35b6101626103be565b60405161016f91906114fe565b60405180910390f35b610192600480360381019061018d919061154a565b6103e4565b005b6101ae60048036038101906101a9919061154a565b6107d1565b005b6101b8610a2a565b005b6101d460048036038101906101cf91906115b5565b610b09565b6040516101e191906115fd565b60405180910390f35b61020460048036038101906101ff91906115b5565b610b29565b005b61020e610c89565b60405161021b91906115fd565b60405180910390f35b61023e600480360381019061023991906115b5565b610c9c565b60405161024d93929190611618565b60405180910390f35b61025e610cc6565b60405161026b9190611464565b60405180910390f35b61027c610ccc565b6040516102899190611668565b60405180910390f35b61029a610cf0565b6040516102a79190611464565b60405180910390f35b6102ca60048036038101906102c5919061154a565b610cf6565b6040516102d79190611464565b60405180910390f35b6102e8610dcd565b005b6102f2610eab565b6040516102ff9190611464565b60405180910390f35b610310610eb1565b60405161031d91906116a4565b60405180910390f35b610340600480360381019061033b919061154a565b610ed7565b005b61035c6004803603810190610357919061154a565b6111a1565b005b610366611419565b6040516103739190611464565b60405180910390f35b61038461141f565b60405161039191906116e0565b60405180910390f35b6103a2611445565b6040516103af9190611464565b60405180910390f35b60035481565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1615610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90611758565b60405180910390fd5b6002805403610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f906117c4565b60405180910390fd5b60028081905550600081116104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990611830565b60405180910390fd5b80600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161051e919061185f565b602060405180830381865afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f919061188f565b10156105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059790611908565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b81526004016105fd929190611928565b600060405180830381600087803b15801561061757600080fd5b505af115801561062b573d6000803e3d6000fd5b505050506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081816000015410156106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b09061199d565b60405180910390fd5b818160000160008282546106cd91906119ec565b92505081905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610731929190611928565b6020604051808303816000875af1158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190611a4c565b503373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56883846040516107bd929190611a79565b60405180910390a250600160028190555050565b600160149054906101000a900460ff1615610821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081890611758565b60405180910390fd5b6002805403610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085c906117c4565b60405180910390fd5b600280819055506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160010154116108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611aee565b60405180910390fd5b600081600101548311610909578261090f565b81600101545b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161097093929190611b0e565b6020604051808303816000875af115801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b39190611a4c565b50808260010160008282546109c891906119ec565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5c16de4f8b59bd9caf0f49a545f25819a895ed223294290b408242e72a59423182604051610a159190611464565b60405180910390a25050600160028190555050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac90611b91565b60405180910390fd5b6000600160146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051610aff919061185f565b60405180910390a1565b60006020528060005260406000206000915054906101000a900460ff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90611b91565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3c90611bfd565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160149054906101000a900460ff1681565b60096020528060005260406000206000915090508060000154908060010154908060020154905083565b60045481565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b600a5481565b600080600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3596f07600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610d76919061185f565b602060405180830381865afa158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db7919061188f565b90508083610dc59190611c1d565b915050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4f90611b91565b60405180910390fd5b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610ea1919061185f565b60405180910390a1565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1615610f27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1e90611758565b60405180910390fd5b6002805403610f6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f62906117c4565b60405180910390fd5b6002808190555060008111610fb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fac90611cab565b60405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161101493929190611b0e565b6020604051808303816000875af1158015611033573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110579190611a4c565b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016110b5929190611928565b600060405180830381600087803b1580156110cf57600080fd5b505af11580156110e3573d6000803e3d6000fd5b505050506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508181600001600082825461113e9190611ccb565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15838460405161118d929190611a79565b60405180910390a250600160028190555050565b600160149054906101000a900460ff16156111f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e890611758565b60405180910390fd5b6002805403611235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122c906117c4565b60405180910390fd5b600280819055506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061128e8260000154610cf6565b90506000612710600a54836112a39190611c1d565b6112ad9190611d2e565b9050808484600101546112c09190611ccb565b1115611301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f890611dab565b60405180910390fd5b838360010160008282546113159190611ccb565b92505081905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401611379929190611928565b6020604051808303816000875af1158015611398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bc9190611a4c565b503373ffffffffffffffffffffffffffffffffffffffff167fcbc04eca7e9da35cb1393a6135a199ca52e450d5e9251cbd99f7847d33a36750856040516114039190611464565b60405180910390a2505050600160028190555050565b600b5481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b6000819050919050565b61145e8161144b565b82525050565b60006020820190506114796000830184611455565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114c46114bf6114ba8461147f565b61149f565b61147f565b9050919050565b60006114d6826114a9565b9050919050565b60006114e8826114cb565b9050919050565b6114f8816114dd565b82525050565b600060208201905061151360008301846114ef565b92915050565b600080fd5b6115278161144b565b811461153257600080fd5b50565b6000813590506115448161151e565b92915050565b6000602082840312156115605761155f611519565b5b600061156e84828501611535565b91505092915050565b60006115828261147f565b9050919050565b61159281611577565b811461159d57600080fd5b50565b6000813590506115af81611589565b92915050565b6000602082840312156115cb576115ca611519565b5b60006115d9848285016115a0565b91505092915050565b60008115159050919050565b6115f7816115e2565b82525050565b600060208201905061161260008301846115ee565b92915050565b600060608201905061162d6000830186611455565b61163a6020830185611455565b6116476040830184611455565b949350505050565b6000819050919050565b6116628161164f565b82525050565b600060208201905061167d6000830184611659565b92915050565b600061168e826114cb565b9050919050565b61169e81611683565b82525050565b60006020820190506116b96000830184611695565b92915050565b60006116ca826114cb565b9050919050565b6116da816116bf565b82525050565b60006020820190506116f560008301846116d1565b92915050565b600082825260208201905092915050565b7f5061757365640000000000000000000000000000000000000000000000000000600082015250565b60006117426006836116fb565b915061174d8261170c565b602082019050919050565b6000602082019050818103600083015261177181611735565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006117ae601f836116fb565b91506117b982611778565b602082019050919050565b600060208201905081810360008301526117dd816117a1565b9050919050565b7f496e76616c696420736861726520616d6f756e74000000000000000000000000600082015250565b600061181a6014836116fb565b9150611825826117e4565b602082019050919050565b600060208201905081810360008301526118498161180d565b9050919050565b61185981611577565b82525050565b60006020820190506118746000830184611850565b92915050565b6000815190506118898161151e565b92915050565b6000602082840312156118a5576118a4611519565b5b60006118b38482850161187a565b91505092915050565b7f496e73756666696369656e742073686172657300000000000000000000000000600082015250565b60006118f26013836116fb565b91506118fd826118bc565b602082019050919050565b60006020820190508181036000830152611921816118e5565b9050919050565b600060408201905061193d6000830185611850565b61194a6020830184611455565b9392505050565b7f4e6f7420656e6f75676820636f6c6c61746572616c0000000000000000000000600082015250565b60006119876015836116fb565b915061199282611951565b602082019050919050565b600060208201905081810360008301526119b68161197a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119f78261144b565b9150611a028361144b565b9250828203905081811115611a1a57611a196119bd565b5b92915050565b611a29816115e2565b8114611a3457600080fd5b50565b600081519050611a4681611a20565b92915050565b600060208284031215611a6257611a61611519565b5b6000611a7084828501611a37565b91505092915050565b6000604082019050611a8e6000830185611455565b611a9b6020830184611455565b9392505050565b7f4e6f206465627400000000000000000000000000000000000000000000000000600082015250565b6000611ad86007836116fb565b9150611ae382611aa2565b602082019050919050565b60006020820190508181036000830152611b0781611acb565b9050919050565b6000606082019050611b236000830186611850565b611b306020830185611850565b611b3d6040830184611455565b949350505050565b7f4e6f7420616e2061646d696e0000000000000000000000000000000000000000600082015250565b6000611b7b600c836116fb565b9150611b8682611b45565b602082019050919050565b60006020820190508181036000830152611baa81611b6e565b9050919050565b7f52656365697074546f6b656e20616c7265616479207365740000000000000000600082015250565b6000611be76018836116fb565b9150611bf282611bb1565b602082019050919050565b60006020820190508181036000830152611c1681611bda565b9050919050565b6000611c288261144b565b9150611c338361144b565b9250828202611c418161144b565b91508282048414831517611c5857611c576119bd565b5b5092915050565b7f43616e6e6f74206465706f736974203000000000000000000000000000000000600082015250565b6000611c956010836116fb565b9150611ca082611c5f565b602082019050919050565b60006020820190508181036000830152611cc481611c88565b9050919050565b6000611cd68261144b565b9150611ce18361144b565b9250828201905080821115611cf957611cf86119bd565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611d398261144b565b9150611d448361144b565b925082611d5457611d53611cff565b5b828204905092915050565b7f4578636565647320626f72726f77206c696d6974000000000000000000000000600082015250565b6000611d956014836116fb565b9150611da082611d5f565b602082019050919050565b60006020820190508181036000830152611dc481611d88565b905091905056fea26469706673582212204c70d64546dc0faef95470599816731bad6f3974df2026028419038d9ca42c1764736f6c63430008140033";

type LendingPoolNovelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolNovelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendingPoolNovel__factory extends ContractFactory {
  constructor(...args: LendingPoolNovelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _collateralToken: AddressLike,
    _priceOracle: AddressLike,
    _baseRate: BigNumberish,
    _slope1: BigNumberish,
    _kink: BigNumberish,
    _collateralFactorBps: BigNumberish,
    _liquidationThresholdBps: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _collateralToken,
      _priceOracle,
      _baseRate,
      _slope1,
      _kink,
      _collateralFactorBps,
      _liquidationThresholdBps,
      overrides || {}
    );
  }
  override deploy(
    _collateralToken: AddressLike,
    _priceOracle: AddressLike,
    _baseRate: BigNumberish,
    _slope1: BigNumberish,
    _kink: BigNumberish,
    _collateralFactorBps: BigNumberish,
    _liquidationThresholdBps: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _collateralToken,
      _priceOracle,
      _baseRate,
      _slope1,
      _kink,
      _collateralFactorBps,
      _liquidationThresholdBps,
      overrides || {}
    ) as Promise<
      LendingPoolNovel & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LendingPoolNovel__factory {
    return super.connect(runner) as LendingPoolNovel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolNovelInterface {
    return new Interface(_abi) as LendingPoolNovelInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LendingPoolNovel {
    return new Contract(address, _abi, runner) as unknown as LendingPoolNovel;
  }
}
