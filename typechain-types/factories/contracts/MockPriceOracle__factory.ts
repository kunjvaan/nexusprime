/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockPriceOracle,
  MockPriceOracleInterface,
} from "../../contracts/MockPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getAssetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806391b7f5ed1461003b578063b3596f0714610057575b600080fd5b610055600480360381019061005091906100d7565b610087565b005b610071600480360381019061006c9190610162565b610091565b60405161007e919061019e565b60405180910390f35b8060008190555050565b600080549050919050565b600080fd5b6000819050919050565b6100b4816100a1565b81146100bf57600080fd5b50565b6000813590506100d1816100ab565b92915050565b6000602082840312156100ed576100ec61009c565b5b60006100fb848285016100c2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061012f82610104565b9050919050565b61013f81610124565b811461014a57600080fd5b50565b60008135905061015c81610136565b92915050565b6000602082840312156101785761017761009c565b5b60006101868482850161014d565b91505092915050565b610198816100a1565b82525050565b60006020820190506101b3600083018461018f565b9291505056fea2646970667358221220aab3f87966e8e8767589ac8fe8d0a3611515517a6e6b866e86710145b3751d6664736f6c63430008140033";

type MockPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPriceOracle__factory extends ContractFactory {
  constructor(...args: MockPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockPriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockPriceOracle__factory {
    return super.connect(runner) as MockPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceOracleInterface {
    return new Interface(_abi) as MockPriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockPriceOracle {
    return new Contract(address, _abi, runner) as unknown as MockPriceOracle;
  }
}
