{"id":"aa374aac58b8bd2f8234110cb26939c7","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"contracts/IPriceOracle.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\n/**\r\n * @title IPriceOracle\r\n * @notice Minimal interface for a price oracle contract\r\n */\r\ninterface IPriceOracle {\r\n    /**\r\n     * @notice Get the price of an asset\r\n     * @param asset The address of the asset\r\n     * @return The price of the asset (e.g., in USD, scaled by 1e18)\r\n     */\r\n    function getAssetPrice(address asset) external view returns (uint256);\r\n}\r\n"},"contracts/ITimelockController.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\n/**\r\n * @title ITimelockController\r\n * @notice Minimal interface for a timelock/ governance contract\r\n */\r\ninterface ITimelockController {\r\n    /**\r\n     * @notice Schedule a transaction for execution after a certain delay\r\n     * @param target The contract to call\r\n     * @param value Ether value to send (usually 0 unless you need to send ETH)\r\n     * @param data The encoded function call data\r\n     * @param predecessor A dependency for another scheduled operation, or bytes32(0) if none\r\n     * @param salt A unique salt to create an operation identifier\r\n     * @param delay The time to wait before execution is allowed\r\n     */\r\n    function schedule(\r\n        address target,\r\n        uint256 value,\r\n        bytes calldata data,\r\n        bytes32 predecessor,\r\n        bytes32 salt,\r\n        uint256 delay\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Execute a scheduled transaction once the delay has passed\r\n     * @param target The contract to call\r\n     * @param value Ether value to send\r\n     * @param data The encoded function call data\r\n     * @param predecessor Must match the previously scheduled operation if any\r\n     * @param salt The same salt used in schedule\r\n     */\r\n    function execute(\r\n        address target,\r\n        uint256 value,\r\n        bytes calldata data,\r\n        bytes32 predecessor,\r\n        bytes32 salt\r\n    ) external payable;\r\n}\r\n"},"contracts/LendingPoolNovel.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/*  \r\n    ================\r\n    OpenZeppelin Imports\r\n    ================\r\n*/\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"./ITimelockController.sol\";\r\nimport \"./IPriceOracle.sol\";\r\n\r\n/*\r\n    ================\r\n    Internal Imports\r\n    ================\r\n*/\r\nimport \"./ReceiptToken.sol\"; // Import our separate ReceiptToken\r\nimport \"./IPriceOracle.sol\";  // Example price oracle interface\r\nimport \"./ITimelockController.sol\"; // Example timelock interface (optional)\r\n\r\n/**\r\n * @title LendingPoolNovel\r\n * @notice A simplified lending pool that can deposit, withdraw, borrow, and repay,\r\n *         using a single collateral token and a single receipt token.\r\n */\r\ncontract LendingPoolNovel {\r\n    using Math for uint256;\r\n\r\n    // --------------------\r\n    // 1. Role & Admin Management\r\n    // --------------------\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n    mapping(address => bool) public admins;\r\n\r\n    // Optional: multi-sig / timelock (not fully implemented)\r\n    ITimelockController internal _timelock;\r\n\r\n    // --------------------\r\n    // 2. Pause Functionality\r\n    // --------------------\r\n    bool public paused;\r\n\r\n    // --------------------\r\n    // 3. Reentrancy Guard\r\n    // --------------------\r\n    uint256 private constant NOT_ENTERED = 1;\r\n    uint256 private constant ENTERED = 2;\r\n    uint256 private _status;\r\n\r\n    // --------------------\r\n    // 4. Core Lending Mechanics\r\n    // --------------------\r\n\r\n    // Simplified interest rate model parameters\r\n    uint256 public baseRate;\r\n    uint256 public utilizationRate;\r\n    uint256 public slope1;\r\n    uint256 public kink;\r\n\r\n    // Collateral & Borrow logic (single token example)\r\n    IERC20 public collateralToken;\r\n    // The separate ReceiptToken contract. We link it later via setReceiptToken().\r\n    ReceiptToken public receiptToken;\r\n\r\n    // Each user's deposit & borrow data\r\n    struct UserPosition {\r\n        uint256 collateralAmount;\r\n        uint256 borrowedAmount;\r\n        uint256 lastInterestBlock;\r\n    }\r\n\r\n    mapping(address => UserPosition) public userPositions;\r\n\r\n    // Collateral factor and liquidation threshold (basis points)\r\n    uint256 public collateralFactorBps;\r\n    uint256 public liquidationThresholdBps;\r\n\r\n    // --------------------\r\n    // 5. Oracle Integration\r\n    // --------------------\r\n    IPriceOracle public priceOracle;\r\n\r\n    // --------------------\r\n    // 6. Events\r\n    // --------------------\r\n    event Deposit(address indexed user, uint256 amount, uint256 sharesMinted);\r\n    event Withdraw(address indexed user, uint256 amount, uint256 sharesBurned);\r\n    event Borrow(address indexed user, uint256 amount);\r\n    event Repay(address indexed user, uint256 amount);\r\n    event Liquidation(\r\n        address indexed liquidator,\r\n        address indexed user,\r\n        uint256 collateralSeized\r\n    );\r\n    event Paused(address account);\r\n    event Unpaused(address account);\r\n    event AdminAdded(address indexed account);\r\n    event AdminRemoved(address indexed account);\r\n\r\n    // --------------------\r\n    // 7. Modifiers\r\n    // --------------------\r\n    modifier onlyAdmin() {\r\n        require(admins[msg.sender], \"Not an admin\");\r\n        _;\r\n    }\r\n\r\n    modifier nonReentrant() {\r\n        require(_status != ENTERED, \"ReentrancyGuard: reentrant call\");\r\n        _status = ENTERED;\r\n        _;\r\n        _status = NOT_ENTERED;\r\n    }\r\n\r\n    modifier whenNotPaused() {\r\n        require(!paused, \"Paused\");\r\n        _;\r\n    }\r\n\r\n    /*\r\n        --------------------\r\n        Constructor\r\n        --------------------\r\n        We do NOT deploy the ReceiptToken here. Instead, we will \r\n        deploy it externally and link via setReceiptToken(...).\r\n    */\r\n    constructor(\r\n        address _collateralToken,\r\n        address _priceOracle,\r\n        uint256 _baseRate,\r\n        uint256 _slope1,\r\n        uint256 _kink,\r\n        uint256 _collateralFactorBps,\r\n        uint256 _liquidationThresholdBps\r\n    ) {\r\n        require(_collateralToken != address(0), \"Invalid collateral token\");\r\n        require(_priceOracle != address(0), \"Invalid oracle\");\r\n\r\n        admins[msg.sender] = true;\r\n        emit AdminAdded(msg.sender);\r\n\r\n        _status = NOT_ENTERED;\r\n\r\n        collateralToken = IERC20(_collateralToken);\r\n        priceOracle = IPriceOracle(_priceOracle);\r\n\r\n        baseRate = _baseRate;\r\n        slope1 = _slope1;\r\n        kink = _kink;\r\n        collateralFactorBps = _collateralFactorBps;\r\n        liquidationThresholdBps = _liquidationThresholdBps;\r\n    }\r\n\r\n    // ------------------------------------------------------\r\n    // Option B: Link a separately deployed ReceiptToken\r\n    // ------------------------------------------------------\r\n    function setReceiptToken(address _receiptToken) external onlyAdmin {\r\n        require(address(receiptToken) == address(0), \"ReceiptToken already set\");\r\n        receiptToken = ReceiptToken(_receiptToken);\r\n    }\r\n\r\n    /*\r\n        ==================================\r\n        Deposit, Withdraw, Borrow, and Repay\r\n        ==================================\r\n    */\r\n\r\n    /// @notice Deposit collateral and receive 1:1 receipt tokens\r\n    function deposit(uint256 amount) external whenNotPaused nonReentrant {\r\n        require(amount > 0, \"Cannot deposit 0\");\r\n\r\n        // 1. Transfer collateral from user -> this contract\r\n        collateralToken.transferFrom(msg.sender, address(this), amount);\r\n\r\n        // 2. Mint the same amount of receipt tokens to the user\r\n        //    The LendingPool must have MINTER_ROLE on the ReceiptToken for this to work!\r\n        receiptToken.mint(msg.sender, amount);\r\n\r\n        // 3. Update user position\r\n        UserPosition storage position = userPositions[msg.sender];\r\n        position.collateralAmount += amount;\r\n\r\n        emit Deposit(msg.sender, amount, amount);\r\n    }\r\n\r\n    /// @notice Withdraw collateral by burning receipt tokens\r\n    function withdraw(uint256 shares) external whenNotPaused nonReentrant {\r\n        require(shares > 0, \"Invalid share amount\");\r\n        // The user must have enough receipt tokens to burn\r\n        require(receiptToken.balanceOf(msg.sender) >= shares, \"Insufficient shares\");\r\n\r\n        // 1. Burn the user's receipt tokens\r\n        //    The LendingPool must have BURNER_ROLE on the ReceiptToken for this to work!\r\n        receiptToken.burn(msg.sender, shares);\r\n\r\n        // 2. Update the user's position (reduce collateral)\r\n        UserPosition storage position = userPositions[msg.sender];\r\n        require(position.collateralAmount >= shares, \"Not enough collateral\");\r\n        position.collateralAmount -= shares;\r\n\r\n        // 3. Transfer collateral from contract -> user\r\n        collateralToken.transfer(msg.sender, shares);\r\n\r\n        emit Withdraw(msg.sender, shares, shares);\r\n    }\r\n\r\n    /// @notice Borrow up to the user's collateral limit\r\n    function borrow(uint256 borrowAmount) external whenNotPaused nonReentrant {\r\n        UserPosition storage position = userPositions[msg.sender];\r\n        uint256 collateralValue = getCollateralValue(position.collateralAmount);\r\n\r\n        // The user can borrow up to collateralFactorBps (e.g. 80%) of their collateralValue\r\n        uint256 maxBorrow = (collateralValue * collateralFactorBps) / 10000;\r\n        require(position.borrowedAmount + borrowAmount <= maxBorrow, \"Exceeds borrow limit\");\r\n\r\n        // Increase borrowed amount\r\n        position.borrowedAmount += borrowAmount;\r\n\r\n        // Transfer borrowed tokens from the pool to the user\r\n        collateralToken.transfer(msg.sender, borrowAmount);\r\n\r\n        emit Borrow(msg.sender, borrowAmount);\r\n    }\r\n\r\n    /// @notice Repay borrowed tokens\r\n    function repay(uint256 repayAmount) external whenNotPaused nonReentrant {\r\n        UserPosition storage position = userPositions[msg.sender];\r\n        require(position.borrowedAmount > 0, \"No debt\");\r\n\r\n        uint256 actualRepay = repayAmount > position.borrowedAmount\r\n            ? position.borrowedAmount\r\n            : repayAmount;\r\n\r\n        // Transfer tokens from user to contract\r\n        collateralToken.transferFrom(msg.sender, address(this), actualRepay);\r\n\r\n        // Reduce user's borrowed amount\r\n        position.borrowedAmount -= actualRepay;\r\n\r\n        emit Repay(msg.sender, actualRepay);\r\n    }\r\n\r\n    /*\r\n        ==================================\r\n        Helper and Admin Functions\r\n        ==================================\r\n    */\r\n\r\n    function getCollateralValue(uint256 collatAmount) public view returns (uint256) {\r\n        // Example: price is returned in \"USD\" terms, \r\n        // so collatAmount * price = total value\r\n        uint256 price = priceOracle.getAssetPrice(address(collateralToken));\r\n        // For a real system, you'd likely scale or use decimals carefully.\r\n        return collatAmount * price;\r\n    }\r\n\r\n    function pause() external onlyAdmin {\r\n        paused = true;\r\n        emit Paused(msg.sender);\r\n    }\r\n\r\n    function unpause() external onlyAdmin {\r\n        paused = false;\r\n        emit Unpaused(msg.sender);\r\n    }\r\n}"},"contracts/ReceiptToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n/**\r\n * @title ReceiptToken\r\n * @notice An ERC20 representing user deposits in a lending pool.\r\n *         Uses AccessControl for role-based mint/burn permissions.\r\n */\r\ncontract ReceiptToken is ERC20, AccessControl {\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\r\n\r\n    constructor() ERC20(\"Receipt Token\", \"rTKN\") {\r\n        // Instead of _setupRole, use _grantRole here:\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @notice Mint tokens to `to`. Only addresses with MINTER_ROLE can call.\r\n     */\r\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Burn tokens from `from`. Only addresses with BURNER_ROLE can call.\r\n     */\r\n    function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {\r\n        _burn(from, amount);\r\n    }\r\n}\r\n"},"contracts/TimeLockController.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\nimport \"./ITimelockController.sol\";\r\n\r\n/**\r\n * @title TimelockController (Minimal Example)\r\n * @notice A simple timelock that schedules and executes calls after a delay.\r\n *         For a real system, consider using OpenZeppelin’s TimelockController instead.\r\n */\r\ncontract TimelockController is ITimelockController {\r\n    // Operation info keyed by keccak256(abi.encode(...)) of the call details\r\n    mapping(bytes32 => uint256) public timestamps;\r\n\r\n    // Minimum delay enforced by this timelock\r\n    uint256 public minDelay;\r\n\r\n    /**\r\n     * @param _minDelay The minimum number of seconds to wait before execution\r\n     */\r\n    constructor(uint256 _minDelay) {\r\n        minDelay = _minDelay;\r\n    }\r\n\r\n    /**\r\n     * @notice Schedule a function call after the given delay.\r\n     */\r\n    function schedule(\r\n        address target,\r\n        uint256 value,\r\n        bytes calldata data,\r\n        bytes32 predecessor,\r\n        bytes32 salt,\r\n        uint256 delay\r\n    ) external override {\r\n        require(delay >= minDelay, \"TimelockController: insufficient delay\");\r\n\r\n        // Compute a unique operation ID using the function call details + salt\r\n        bytes32 id = keccak256(abi.encode(target, value, data, predecessor, salt));\r\n        require(timestamps[id] == 0, \"TimelockController: already scheduled\");\r\n\r\n        // Set timestamp for when this call can be executed\r\n        timestamps[id] = block.timestamp + delay;\r\n    }\r\n\r\n    /**\r\n     * @notice Execute a previously scheduled call after its delay has elapsed.\r\n     */\r\n    function execute(\r\n        address target,\r\n        uint256 value,\r\n        bytes calldata data,\r\n        bytes32 predecessor,\r\n        bytes32 salt\r\n    ) external payable override {\r\n        // Recompute the same operation ID\r\n        bytes32 id = keccak256(abi.encode(target, value, data, predecessor, salt));\r\n        uint256 timestamp = timestamps[id];\r\n\r\n        require(timestamp != 0, \"TimelockController: not scheduled\");\r\n        require(block.timestamp >= timestamp, \"TimelockController: not ready\");\r\n\r\n        // Clear so it can't be re-executed\r\n        timestamps[id] = 0;\r\n\r\n        // Perform the call\r\n        (bool success, ) = target.call{value: value}(data);\r\n        require(success, \"TimelockController: call failed\");\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[1164],"ERC165":[1240],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1165,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1241,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1240,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,1240,1252,378,1164],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1239],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[515],"IERC20Errors":[420],"IERC721Errors":[468]},"id":516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":420,"linearizedBaseContracts":[420],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":390,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":390,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":390,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":390,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":395,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":395,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":400,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":400,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":409,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":409,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":409,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":409,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":414,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":414,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":419,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":419,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":516,"src":"280:1764:2","usedErrors":[390,395,400,409,414,419],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":468,"linearizedBaseContracts":[468],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":426,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":426,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":431,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":431,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":440,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":440,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":440,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":440,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":445,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":445,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":450,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":450,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":457,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":457,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":457,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":462,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":462,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":467,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":467,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":516,"src":"2190:2092:2","usedErrors":[426,431,440,445,450,457,462,467],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":515,"linearizedBaseContracts":[515],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":480,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":480,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":480,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":480,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":480,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":485,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":485,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":490,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":490,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":497,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":497,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":497,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":502,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":502,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":507,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":507,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":514,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":514,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":514,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":516,"src":"4430:2107:2","usedErrors":[480,485,490,497,502,507,514],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1164],"ERC20":[1030],"IERC20":[1108],"IERC20Errors":[420],"IERC20Metadata":[1134]},"id":1031,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":517,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1031,"sourceUnit":1109,"src":"131:36:3","symbolAliases":[{"foreign":{"id":518,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1031,"sourceUnit":1135,"src":"168:63:3","symbolAliases":[{"foreign":{"id":520,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":523,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1031,"sourceUnit":1165,"src":"232:48:3","symbolAliases":[{"foreign":{"id":522,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1031,"sourceUnit":516,"src":"281:65:3","symbolAliases":[{"foreign":{"id":524,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":527,"name":"Context","nameLocations":["1133:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"1133:7:3"},"id":528,"nodeType":"InheritanceSpecifier","src":"1133:7:3"},{"baseName":{"id":529,"name":"IERC20","nameLocations":["1142:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":1108,"src":"1142:6:3"},"id":530,"nodeType":"InheritanceSpecifier","src":"1142:6:3"},{"baseName":{"id":531,"name":"IERC20Metadata","nameLocations":["1150:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1134,"src":"1150:14:3"},"id":532,"nodeType":"InheritanceSpecifier","src":"1150:14:3"},{"baseName":{"id":533,"name":"IERC20Errors","nameLocations":["1166:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":420,"src":"1166:12:3"},"id":534,"nodeType":"InheritanceSpecifier","src":"1166:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"348:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1030,"linearizedBaseContracts":[1030,420,1134,1108,1164],"name":"ERC20","nameLocation":"1124:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":538,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:3","nodeType":"VariableDeclaration","scope":1030,"src":"1185:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":537,"keyName":"account","keyNameLocation":"1201:7:3","keyType":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":544,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:3","nodeType":"VariableDeclaration","scope":1030,"src":"1245:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":543,"keyName":"account","keyNameLocation":"1261:7:3","keyType":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":542,"keyName":"spender","keyNameLocation":"1288:7:3","keyType":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":546,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:3","nodeType":"VariableDeclaration","scope":1030,"src":"1335:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":548,"mutability":"mutable","name":"_name","nameLocation":"1385:5:3","nodeType":"VariableDeclaration","scope":1030,"src":"1370:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":547,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":550,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:3","nodeType":"VariableDeclaration","scope":1030,"src":"1396:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":549,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":566,"nodeType":"Block","src":"1657:57:3","statements":[{"expression":{"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":558,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1667:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":559,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"1675:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":561,"nodeType":"ExpressionStatement","src":"1667:13:3"},{"expression":{"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":562,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"1690:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":563,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"1700:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":565,"nodeType":"ExpressionStatement","src":"1690:17:3"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"1425:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":567,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"name_","nameLocation":"1627:5:3","nodeType":"VariableDeclaration","scope":567,"src":"1613:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":552,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:3","nodeType":"VariableDeclaration","scope":567,"src":"1634:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":554,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:3"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"1657:0:3"},"scope":1030,"src":"1601:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1121],"body":{"id":575,"nodeType":"Block","src":"1839:29:3","statements":[{"expression":{"id":573,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1856:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":572,"id":574,"nodeType":"Return","src":"1849:12:3"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"1720:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":576,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:3","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"1792:2:3"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"1824:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":570,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:3"},"scope":1030,"src":"1779:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1127],"body":{"id":584,"nodeType":"Block","src":"2043:31:3","statements":[{"expression":{"id":582,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2060:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":581,"id":583,"nodeType":"Return","src":"2053:14:3"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"1874:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":585,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:3","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"1996:2:3"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"2028:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":579,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:3"},"scope":1030,"src":"1981:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1133],"body":{"id":593,"nodeType":"Block","src":"2763:26:3","statements":[{"expression":{"hexValue":"3138","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":590,"id":592,"nodeType":"Return","src":"2773:9:3"}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"2080:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":594,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:3","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"2724:2:3"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"2756:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":588,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:3"},"scope":1030,"src":"2707:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1057],"body":{"id":602,"nodeType":"Block","src":"2910:36:3","statements":[{"expression":{"id":600,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2927:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":599,"id":601,"nodeType":"Return","src":"2920:19:3"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"2795:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":603,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:3","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"2869:2:3"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":603,"src":"2901:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:3"},"scope":1030,"src":"2849:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1065],"body":{"id":615,"nodeType":"Block","src":"3078:42:3","statements":[{"expression":{"baseExpression":{"id":611,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"3095:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":613,"indexExpression":{"id":612,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3105:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":610,"id":614,"nodeType":"Return","src":"3088:25:3"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"2952:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":616,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:3","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"account","nameLocation":"3031:7:3","nodeType":"VariableDeclaration","scope":616,"src":"3023:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:3"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":616,"src":"3069:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:3"},"scope":1030,"src":"3004:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1075],"body":{"id":639,"nodeType":"Block","src":"3390:103:3","statements":[{"assignments":[627],"declarations":[{"constant":false,"id":627,"mutability":"mutable","name":"owner","nameLocation":"3408:5:3","nodeType":"VariableDeclaration","scope":639,"src":"3400:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":630,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":628,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3416:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:3"},{"expression":{"arguments":[{"id":632,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"3448:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"3455:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"3459:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3438:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"3438:27:3"},{"expression":{"hexValue":"74727565","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":625,"id":638,"nodeType":"Return","src":"3475:11:3"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"3126:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":640,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:3","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"to","nameLocation":"3341:2:3","nodeType":"VariableDeclaration","scope":640,"src":"3333:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"value","nameLocation":"3353:5:3","nodeType":"VariableDeclaration","scope":640,"src":"3345:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:3"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":640,"src":"3384:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":623,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:3"},"scope":1030,"src":"3315:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1085],"body":{"id":656,"nodeType":"Block","src":"3640:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":650,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3657:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":652,"indexExpression":{"id":651,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"3669:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":654,"indexExpression":{"id":653,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"3676:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":649,"id":655,"nodeType":"Return","src":"3650:34:3"}]},"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"3499:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":657,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:3","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"owner","nameLocation":"3578:5:3","nodeType":"VariableDeclaration","scope":657,"src":"3570:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"spender","nameLocation":"3593:7:3","nodeType":"VariableDeclaration","scope":657,"src":"3585:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:3"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"3631:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:3"},"scope":1030,"src":"3551:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1095],"body":{"id":680,"nodeType":"Block","src":"4077:107:3","statements":[{"assignments":[668],"declarations":[{"constant":false,"id":668,"mutability":"mutable","name":"owner","nameLocation":"4095:5:3","nodeType":"VariableDeclaration","scope":680,"src":"4087:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":671,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":669,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"4103:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:3"},{"expression":{"arguments":[{"id":673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4134:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4141:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"4150:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[921,981],"referencedDeclaration":921,"src":"4125:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"4125:31:3"},{"expression":{"hexValue":"74727565","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":666,"id":679,"nodeType":"Return","src":"4166:11:3"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"3697:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":681,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:3","nodeType":"FunctionDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"spender","nameLocation":"4023:7:3","nodeType":"VariableDeclaration","scope":681,"src":"4015:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"value","nameLocation":"4040:5:3","nodeType":"VariableDeclaration","scope":681,"src":"4032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:3"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"4071:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":664,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:3"},"scope":1030,"src":"3998:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1107],"body":{"id":712,"nodeType":"Block","src":"4869:151:3","statements":[{"assignments":[694],"declarations":[{"constant":false,"id":694,"mutability":"mutable","name":"spender","nameLocation":"4887:7:3","nodeType":"VariableDeclaration","scope":712,"src":"4879:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":697,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":695,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"4897:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:3"},{"expression":{"arguments":[{"id":699,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"4935:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"4941:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"4950:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":698,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"4919:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"4919:37:3"},{"expression":{"arguments":[{"id":705,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"4976:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"4982:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"4986:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":704,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"4966:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"4966:26:3"},{"expression":{"hexValue":"74727565","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":692,"id":711,"nodeType":"Return","src":"5002:11:3"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"4190:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":713,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:3","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"from","nameLocation":"4806:4:3","nodeType":"VariableDeclaration","scope":713,"src":"4798:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"to","nameLocation":"4820:2:3","nodeType":"VariableDeclaration","scope":713,"src":"4812:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"value","nameLocation":"4832:5:3","nodeType":"VariableDeclaration","scope":713,"src":"4824:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:3"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"4863:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":690,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:3"},"scope":1030,"src":"4776:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":759,"nodeType":"Block","src":"5462:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":723,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5476:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:3","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":737,"nodeType":"IfStatement","src":"5472:86:3","trueBody":{"id":736,"nodeType":"Block","src":"5496:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:3","typeDescriptions":{}}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":729,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"5517:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"RevertStatement","src":"5510:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":738,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"5571:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:3","typeDescriptions":{}}},"id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":752,"nodeType":"IfStatement","src":"5567:86:3","trueBody":{"id":751,"nodeType":"Block","src":"5589:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:3","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":744,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5610:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"RevertStatement","src":"5603:39:3"}]}},{"expression":{"arguments":[{"id":754,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5670:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"5676:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"5680:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"5662:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"5662:24:3"}]},"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"5026:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:3","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"from","nameLocation":"5420:4:3","nodeType":"VariableDeclaration","scope":760,"src":"5412:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"to","nameLocation":"5434:2:3","nodeType":"VariableDeclaration","scope":760,"src":"5426:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"value","nameLocation":"5446:5:3","nodeType":"VariableDeclaration","scope":760,"src":"5438:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:3"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"5462:0:3"},"scope":1030,"src":"5393:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":836,"nodeType":"Block","src":"6083:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6097:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:3","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":807,"nodeType":"Block","src":"6271:362:3","statements":[{"assignments":[782],"declarations":[{"constant":false,"id":782,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:3","nodeType":"VariableDeclaration","scope":807,"src":"6285:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":786,"initialValue":{"baseExpression":{"id":783,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6307:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":785,"indexExpression":{"id":784,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6317:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":787,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6340:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6354:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":797,"nodeType":"IfStatement","src":"6336:115:3","trueBody":{"id":796,"nodeType":"Block","src":"6361:90:3","statements":[{"errorCall":{"arguments":[{"id":791,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6411:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":792,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6417:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6430:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":790,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"6386:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":795,"nodeType":"RevertStatement","src":"6379:57:3"}]}},{"id":806,"nodeType":"UncheckedBlock","src":"6464:159:3","statements":[{"expression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":798,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6571:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6581:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":801,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6589:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6603:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"nodeType":"ExpressionStatement","src":"6571:37:3"}]}]},"id":808,"nodeType":"IfStatement","src":"6093:540:3","trueBody":{"id":780,"nodeType":"Block","src":"6117:148:3","statements":[{"expression":{"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":776,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"6233:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6249:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":779,"nodeType":"ExpressionStatement","src":"6233:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":809,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"6647:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:3","typeDescriptions":{}}},"id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":828,"nodeType":"Block","src":"6862:206:3","statements":[{"id":827,"nodeType":"UncheckedBlock","src":"6876:182:3","statements":[{"expression":{"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":821,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7021:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":823,"indexExpression":{"id":822,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"7031:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"7038:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":826,"nodeType":"ExpressionStatement","src":"7021:22:3"}]}]},"id":829,"nodeType":"IfStatement","src":"6643:425:3","trueBody":{"id":820,"nodeType":"Block","src":"6665:191:3","statements":[{"id":819,"nodeType":"UncheckedBlock","src":"6679:167:3","statements":[{"expression":{"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":815,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"6810:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6826:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":818,"nodeType":"ExpressionStatement","src":"6810:21:3"}]}]}},{"eventCall":{"arguments":[{"id":831,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7092:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":832,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"7098:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"7102:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":830,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"7083:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"EmitStatement","src":"7078:30:3"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"5699:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":837,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:3","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"from","nameLocation":"6033:4:3","nodeType":"VariableDeclaration","scope":837,"src":"6025:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"to","nameLocation":"6047:2:3","nodeType":"VariableDeclaration","scope":837,"src":"6039:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"value","nameLocation":"6059:5:3","nodeType":"VariableDeclaration","scope":837,"src":"6051:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:3"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"6083:0:3"},"scope":1030,"src":"6008:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":869,"nodeType":"Block","src":"7514:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":845,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7528:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:3","typeDescriptions":{}}},"id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":859,"nodeType":"IfStatement","src":"7524:91:3","trueBody":{"id":858,"nodeType":"Block","src":"7551:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:3","typeDescriptions":{}}},"id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":851,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"7572:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"RevertStatement","src":"7565:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:3","typeDescriptions":{}}},"id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7644:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"7653:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":860,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"7624:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"7624:35:3"}]},"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"7121:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:3","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"account","nameLocation":"7481:7:3","nodeType":"VariableDeclaration","scope":870,"src":"7473:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"value","nameLocation":"7498:5:3","nodeType":"VariableDeclaration","scope":870,"src":"7490:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:3"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"7514:0:3"},"scope":1030,"src":"7458:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":902,"nodeType":"Block","src":"8040:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"8054:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:3","typeDescriptions":{}}},"id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":892,"nodeType":"IfStatement","src":"8050:89:3","trueBody":{"id":891,"nodeType":"Block","src":"8077:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:3","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":884,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"8098:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"RevertStatement","src":"8091:37:3"}]}},{"expression":{"arguments":[{"id":894,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"8156:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:3","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"8177:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":893,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8148:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"ExpressionStatement","src":"8148:35:3"}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"7672:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:3","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"account","nameLocation":"8007:7:3","nodeType":"VariableDeclaration","scope":903,"src":"7999:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"value","nameLocation":"8024:5:3","nodeType":"VariableDeclaration","scope":903,"src":"8016:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:3"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"8040:0:3"},"scope":1030,"src":"7984:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":920,"nodeType":"Block","src":"8800:54:3","statements":[{"expression":{"arguments":[{"id":914,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"8819:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"8826:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"8835:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":913,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[921,981],"referencedDeclaration":981,"src":"8810:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"8810:37:3"}]},"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"8196:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":921,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:3","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"owner","nameLocation":"8752:5:3","nodeType":"VariableDeclaration","scope":921,"src":"8744:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"spender","nameLocation":"8767:7:3","nodeType":"VariableDeclaration","scope":921,"src":"8759:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"value","nameLocation":"8784:5:3","nodeType":"VariableDeclaration","scope":921,"src":"8776:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:3"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"8800:0:3"},"scope":1030,"src":"8726:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"9799:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":933,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9813:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:3","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":947,"nodeType":"IfStatement","src":"9809:89:3","trueBody":{"id":946,"nodeType":"Block","src":"9834:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:3","typeDescriptions":{}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":939,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"9855:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"RevertStatement","src":"9848:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"9911:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:3","typeDescriptions":{}}},"id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":962,"nodeType":"IfStatement","src":"9907:90:3","trueBody":{"id":961,"nodeType":"Block","src":"9934:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:3","typeDescriptions":{}}},"id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":954,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"9955:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"RevertStatement","src":"9948:38:3"}]}},{"expression":{"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":963,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"10006:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":966,"indexExpression":{"id":964,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"10018:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":967,"indexExpression":{"id":965,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"10025:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"10036:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":970,"nodeType":"ExpressionStatement","src":"10006:35:3"},{"condition":{"id":971,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"10055:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":979,"nodeType":"IfStatement","src":"10051:76:3","trueBody":{"id":978,"nodeType":"Block","src":"10066:61:3","statements":[{"eventCall":{"arguments":[{"id":973,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"10094:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"10101:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"10110:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"10085:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"EmitStatement","src":"10080:36:3"}]}}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"8860:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:3","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"owner","nameLocation":"9727:5:3","nodeType":"VariableDeclaration","scope":981,"src":"9719:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"spender","nameLocation":"9742:7:3","nodeType":"VariableDeclaration","scope":981,"src":"9734:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"value","nameLocation":"9759:5:3","nodeType":"VariableDeclaration","scope":981,"src":"9751:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:3","nodeType":"VariableDeclaration","scope":981,"src":"9766:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:3"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"9799:0:3"},"scope":1030,"src":"9701:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1028,"nodeType":"Block","src":"10504:388:3","statements":[{"assignments":[992],"declarations":[{"constant":false,"id":992,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:3","nodeType":"VariableDeclaration","scope":1028,"src":"10514:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":997,"initialValue":{"arguments":[{"id":994,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10551:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"10558:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":993,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10541:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10580:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":999,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10600:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:3","memberName":"max","nodeType":"MemberAccess","src":"10600:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1027,"nodeType":"IfStatement","src":"10576:310:3","trueBody":{"id":1026,"nodeType":"Block","src":"10619:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1005,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10637:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"10656:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1015,"nodeType":"IfStatement","src":"10633:130:3","trueBody":{"id":1014,"nodeType":"Block","src":"10663:100:3","statements":[{"errorCall":{"arguments":[{"id":1009,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"10715:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1010,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10724:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"10742:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1008,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"10688:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1013,"nodeType":"RevertStatement","src":"10681:67:3"}]}},{"id":1025,"nodeType":"UncheckedBlock","src":"10776:100:3","statements":[{"expression":{"arguments":[{"id":1017,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10813:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1018,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"10820:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1019,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10829:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"10848:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1016,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[921,981],"referencedDeclaration":981,"src":"10804:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"ExpressionStatement","src":"10804:57:3"}]}]}}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"10139:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1029,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:3","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"owner","nameLocation":"10448:5:3","nodeType":"VariableDeclaration","scope":1029,"src":"10440:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"spender","nameLocation":"10463:7:3","nodeType":"VariableDeclaration","scope":1029,"src":"10455:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"value","nameLocation":"10480:5:3","nodeType":"VariableDeclaration","scope":1029,"src":"10472:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:3"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"10504:0:3"},"scope":1030,"src":"10415:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1031,"src":"1106:9788:3","usedErrors":[390,395,400,409,414,419],"usedEvents":[1042,1051]}],"src":"105:10790:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1108]},"id":1109,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1032,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1108,"linearizedBaseContracts":[1108],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1042,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":1042,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":1042,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":1042,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1051,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":1051,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":1051,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":1051,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1057,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1057,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":1108,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1065,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":1065,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1065,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":1108,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1075,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":1075,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":1075,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1075,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1072,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":1108,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1085,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":1085,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":1085,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":1108,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1095,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":1095,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":1095,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1095,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1092,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":1108,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1107,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":1107,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":1107,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":1107,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1107,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1104,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":1108,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1109,"src":"204:2575:4","usedErrors":[],"usedEvents":[1042,1051]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1108],"IERC20Metadata":[1134]},"id":1135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1110,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1135,"sourceUnit":1109,"src":"151:37:5","symbolAliases":[{"foreign":{"id":1111,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"159:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1114,"name":"IERC20","nameLocations":["306:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1108,"src":"306:6:5"},"id":1115,"nodeType":"InheritanceSpecifier","src":"306:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"190:87:5","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1134,"linearizedBaseContracts":[1134,1108],"name":"IERC20Metadata","nameLocation":"288:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"319:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1121,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:5","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"391:2:5"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"417:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1118,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:5"},"scope":1134,"src":"378:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"438:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1127,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:5","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[],"src":"514:2:5"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"540:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1124,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:5"},"scope":1134,"src":"499:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"561:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1133,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:5","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[],"src":"648:2:5"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"674:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1130,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:5"},"scope":1134,"src":"631:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1135,"src":"278:405:5","usedErrors":[],"usedEvents":[1042,1051]}],"src":"125:559:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1164]},"id":1165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1136,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"127:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1164,"linearizedBaseContracts":[1164],"name":"Context","nameLocation":"642:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1145,"nodeType":"Block","src":"718:34:6","statements":[{"expression":{"expression":{"id":1142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:6","memberName":"sender","nodeType":"MemberAccess","src":"735:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1141,"id":1144,"nodeType":"Return","src":"728:17:6"}]},"id":1146,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:6","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[],"src":"675:2:6"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1146,"src":"709:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:6"},"scope":1164,"src":"656:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1154,"nodeType":"Block","src":"825:32:6","statements":[{"expression":{"expression":{"id":1151,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:6","memberName":"data","nodeType":"MemberAccess","src":"842:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1150,"id":1153,"nodeType":"Return","src":"835:15:6"}]},"id":1155,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:6","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[],"src":"775:2:6"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1155,"src":"809:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1148,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:6"},"scope":1164,"src":"758:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1162,"nodeType":"Block","src":"935:25:6","statements":[{"expression":{"hexValue":"30","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1159,"id":1161,"nodeType":"Return","src":"945:8:6"}]},"id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:6","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"892:2:6"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"926:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:6"},"scope":1164,"src":"863:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1165,"src":"624:338:6","usedErrors":[],"usedEvents":[]}],"src":"101:862:6"},"id":6},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1216]},"id":1217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1166,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"125:489:7","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1216,"linearizedBaseContracts":[1216],"name":"Panic","nameLocation":"665:5:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"677:36:7","text":"@dev generic / unspecified error"},"id":1171,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:7","nodeType":"VariableDeclaration","scope":1216,"src":"718:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"764:37:7","text":"@dev used by the assert() builtin"},"id":1175,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:7","nodeType":"VariableDeclaration","scope":1216,"src":"806:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"851:41:7","text":"@dev arithmetic underflow or overflow"},"id":1179,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:7","nodeType":"VariableDeclaration","scope":1216,"src":"897:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:7","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1180,"nodeType":"StructuredDocumentation","src":"950:35:7","text":"@dev division or modulo by zero"},"id":1183,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:7","nodeType":"VariableDeclaration","scope":1216,"src":"990:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"1045:30:7","text":"@dev enum conversion error"},"id":1187,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:7","nodeType":"VariableDeclaration","scope":1216,"src":"1080:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:7","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"1140:36:7","text":"@dev invalid encoding in storage"},"id":1191,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:7","nodeType":"VariableDeclaration","scope":1216,"src":"1181:55:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"1242:24:7","text":"@dev empty array pop"},"id":1195,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:7","nodeType":"VariableDeclaration","scope":1216,"src":"1271:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"1325:35:7","text":"@dev array out of bounds access"},"id":1199,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:7","nodeType":"VariableDeclaration","scope":1216,"src":"1365:52:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"1423:65:7","text":"@dev resource error (too large allocation or too large array)"},"id":1203,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:7","nodeType":"VariableDeclaration","scope":1216,"src":"1493:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:7","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"1546:42:7","text":"@dev calling invalid internal function"},"id":1207,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:7","nodeType":"VariableDeclaration","scope":1216,"src":"1593:58:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:7","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"1819:151:7","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:7","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:7"},"nodeType":"YulFunctionCall","src":"1868:24:7"},"nodeType":"YulExpressionStatement","src":"1868:24:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:7","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:7"},"nodeType":"YulFunctionCall","src":"1905:18:7"},"nodeType":"YulExpressionStatement","src":"1905:18:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:7","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:7"},"nodeType":"YulFunctionCall","src":"1936:18:7"},"nodeType":"YulExpressionStatement","src":"1936:18:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1210,"isOffset":false,"isSlot":false,"src":"1918:4:7","valueSize":1}],"flags":["memory-safe"],"id":1213,"nodeType":"InlineAssembly","src":"1829:135:7"}]},"documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"1658:113:7","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:7","nodeType":"FunctionDefinition","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"code","nameLocation":"1799:4:7","nodeType":"VariableDeclaration","scope":1215,"src":"1791:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:7"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[],"src":"1819:0:7"},"scope":1216,"src":"1776:194:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1217,"src":"657:1315:7","usedErrors":[],"usedEvents":[]}],"src":"99:1874:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1240],"IERC165":[1252]},"id":1241,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1218,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1241,"sourceUnit":1253,"src":"140:38:8","symbolAliases":[{"foreign":{"id":1219,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1222,"name":"IERC165","nameLocations":["688:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1252,"src":"688:7:8"},"id":1223,"nodeType":"InheritanceSpecifier","src":"688:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"180:479:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1240,"linearizedBaseContracts":[1240,1252],"name":"ERC165","nameLocation":"678:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1251],"body":{"id":1238,"nodeType":"Block","src":"845:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1231,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"862:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1233,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"882:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1252_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1252_$","typeString":"type(contract IERC165)"}],"id":1232,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1252","typeString":"type(contract IERC165)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1230,"id":1237,"nodeType":"Return","src":"855:47:8"}]},"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"702:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1239,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:8","nodeType":"FunctionDefinition","parameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:8","nodeType":"VariableDeclaration","scope":1239,"src":"790:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1225,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:8"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1239,"src":"839:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1228,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:8"},"scope":1240,"src":"763:146:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1241,"src":"660:251:8","usedErrors":[],"usedEvents":[]}],"src":"114:798:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1252]},"id":1253,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1242,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"141:280:9","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1252,"linearizedBaseContracts":[1252],"name":"IERC165","nameLocation":"432:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"446:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1251,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:9","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:9","nodeType":"VariableDeclaration","scope":1251,"src":"818:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1245,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:9"},"returnParameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1251,"src":"861:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1248,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:9"},"scope":1252,"src":"791:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1253,"src":"422:447:9","usedErrors":[],"usedEvents":[]}],"src":"115:755:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2858],"Panic":[1216],"SafeCast":[4623]},"id":2859,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1254,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":1256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2859,"sourceUnit":1217,"src":"129:35:10","symbolAliases":[{"foreign":{"id":1255,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"137:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":1258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2859,"sourceUnit":4624,"src":"165:40:10","symbolAliases":[{"foreign":{"id":1257,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"173:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"207:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2858,"linearizedBaseContracts":[2858],"name":"Math","nameLocation":"289:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1264,"members":[{"id":1260,"name":"Floor","nameLocation":"324:5:10","nodeType":"EnumValue","src":"324:5:10"},{"id":1261,"name":"Ceil","nameLocation":"367:4:10","nodeType":"EnumValue","src":"367:4:10"},{"id":1262,"name":"Trunc","nameLocation":"409:5:10","nodeType":"EnumValue","src":"409:5:10"},{"id":1263,"name":"Expand","nameLocation":"439:6:10","nodeType":"EnumValue","src":"439:6:10"}],"name":"Rounding","nameLocation":"305:8:10","nodeType":"EnumDefinition","src":"300:169:10"},{"body":{"id":1295,"nodeType":"Block","src":"677:140:10","statements":[{"id":1294,"nodeType":"UncheckedBlock","src":"687:124:10","statements":[{"assignments":[1277],"declarations":[{"constant":false,"id":1277,"mutability":"mutable","name":"c","nameLocation":"719:1:10","nodeType":"VariableDeclaration","scope":1294,"src":"711:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1281,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"723:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1279,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"727:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1282,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"746:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1283,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"750:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1289,"nodeType":"IfStatement","src":"742:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1275,"id":1288,"nodeType":"Return","src":"753:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1291,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"798:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1275,"id":1293,"nodeType":"Return","src":"784:16:10"}]}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"475:106:10","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":1296,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:10","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"a","nameLocation":"610:1:10","nodeType":"VariableDeclaration","scope":1296,"src":"602:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"b","nameLocation":"621:1:10","nodeType":"VariableDeclaration","scope":1296,"src":"613:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:10"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"success","nameLocation":"652:7:10","nodeType":"VariableDeclaration","scope":1296,"src":"647:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1271,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"result","nameLocation":"669:6:10","nodeType":"VariableDeclaration","scope":1296,"src":"661:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:10"},"scope":2858,"src":"586:231:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1323,"nodeType":"Block","src":"1028:113:10","statements":[{"id":1322,"nodeType":"UncheckedBlock","src":"1038:97:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"1066:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"1070:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1315,"nodeType":"IfStatement","src":"1062:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1307,"id":1314,"nodeType":"Return","src":"1073:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"1118:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"1122:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1307,"id":1321,"nodeType":"Return","src":"1104:20:10"}]}]},"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"823:109:10","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:10","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"a","nameLocation":"961:1:10","nodeType":"VariableDeclaration","scope":1324,"src":"953:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"b","nameLocation":"972:1:10","nodeType":"VariableDeclaration","scope":1324,"src":"964:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:10"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"success","nameLocation":"1003:7:10","nodeType":"VariableDeclaration","scope":1324,"src":"998:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1303,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1306,"mutability":"mutable","name":"result","nameLocation":"1020:6:10","nodeType":"VariableDeclaration","scope":1324,"src":"1012:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:10"},"scope":2858,"src":"937:204:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1365,"nodeType":"Block","src":"1355:417:10","statements":[{"id":1364,"nodeType":"UncheckedBlock","src":"1365:401:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"1623:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1343,"nodeType":"IfStatement","src":"1619:28:10","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1335,"id":1342,"nodeType":"Return","src":"1631:16:10"}},{"assignments":[1345],"declarations":[{"constant":false,"id":1345,"mutability":"mutable","name":"c","nameLocation":"1669:1:10","nodeType":"VariableDeclaration","scope":1364,"src":"1661:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1349,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"1673:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1347,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1677:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1350,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"1696:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"1700:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1353,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1705:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1359,"nodeType":"IfStatement","src":"1692:33:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1335,"id":1358,"nodeType":"Return","src":"1708:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1361,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"1753:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1335,"id":1363,"nodeType":"Return","src":"1739:16:10"}]}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"1147:112:10","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":1366,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:10","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"a","nameLocation":"1288:1:10","nodeType":"VariableDeclaration","scope":1366,"src":"1280:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"b","nameLocation":"1299:1:10","nodeType":"VariableDeclaration","scope":1366,"src":"1291:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:10"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"success","nameLocation":"1330:7:10","nodeType":"VariableDeclaration","scope":1366,"src":"1325:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1331,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"result","nameLocation":"1347:6:10","nodeType":"VariableDeclaration","scope":1366,"src":"1339:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:10"},"scope":2858,"src":"1264:508:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"1987:114:10","statements":[{"id":1392,"nodeType":"UncheckedBlock","src":"1997:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"2025:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1385,"nodeType":"IfStatement","src":"2021:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1377,"id":1384,"nodeType":"Return","src":"2033:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"2078:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"2082:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1377,"id":1391,"nodeType":"Return","src":"2064:20:10"}]}]},"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"1778:113:10","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:10","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"a","nameLocation":"1920:1:10","nodeType":"VariableDeclaration","scope":1394,"src":"1912:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"b","nameLocation":"1931:1:10","nodeType":"VariableDeclaration","scope":1394,"src":"1923:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:10"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"success","nameLocation":"1962:7:10","nodeType":"VariableDeclaration","scope":1394,"src":"1957:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1373,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"result","nameLocation":"1979:6:10","nodeType":"VariableDeclaration","scope":1394,"src":"1971:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:10"},"scope":2858,"src":"1896:205:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1421,"nodeType":"Block","src":"2326:114:10","statements":[{"id":1420,"nodeType":"UncheckedBlock","src":"2336:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2364:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"2360:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1405,"id":1412,"nodeType":"Return","src":"2372:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"2417:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2421:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1405,"id":1419,"nodeType":"Return","src":"2403:20:10"}]}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"2107:123:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1422,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:10","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"a","nameLocation":"2259:1:10","nodeType":"VariableDeclaration","scope":1422,"src":"2251:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"b","nameLocation":"2270:1:10","nodeType":"VariableDeclaration","scope":1422,"src":"2262:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:10"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"success","nameLocation":"2301:7:10","nodeType":"VariableDeclaration","scope":1422,"src":"2296:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1401,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"result","nameLocation":"2318:6:10","nodeType":"VariableDeclaration","scope":1422,"src":"2310:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:10"},"scope":2858,"src":"2235:205:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1448,"nodeType":"Block","src":"2912:207:10","statements":[{"id":1447,"nodeType":"UncheckedBlock","src":"2922:191:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"3060:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"3066:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"3070:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1441,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"3091:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1439,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"3075:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"3075:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1433,"id":1446,"nodeType":"Return","src":"3053:49:10"}]}]},"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"2446:374:10","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1449,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:10","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"condition","nameLocation":"2847:9:10","nodeType":"VariableDeclaration","scope":1449,"src":"2842:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1424,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"a","nameLocation":"2866:1:10","nodeType":"VariableDeclaration","scope":1449,"src":"2858:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"b","nameLocation":"2877:1:10","nodeType":"VariableDeclaration","scope":1449,"src":"2869:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:10"},"returnParameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1449,"src":"2903:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:10"},"scope":2858,"src":"2825:294:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1467,"nodeType":"Block","src":"3256:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3281:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"3285:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3288:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"3291:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1459,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"3273:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1458,"id":1466,"nodeType":"Return","src":"3266:27:10"}]},"documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"3125:59:10","text":" @dev Returns the largest of two numbers."},"id":1468,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:10","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"a","nameLocation":"3210:1:10","nodeType":"VariableDeclaration","scope":1468,"src":"3202:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"b","nameLocation":"3221:1:10","nodeType":"VariableDeclaration","scope":1468,"src":"3213:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:10"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1468,"src":"3247:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:10"},"scope":2858,"src":"3189:111:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1486,"nodeType":"Block","src":"3438:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"3463:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"3467:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"3470:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"3473:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1478,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"3455:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1477,"id":1485,"nodeType":"Return","src":"3448:27:10"}]},"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"3306:60:10","text":" @dev Returns the smallest of two numbers."},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:10","nodeType":"FunctionDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"a","nameLocation":"3392:1:10","nodeType":"VariableDeclaration","scope":1487,"src":"3384:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1473,"mutability":"mutable","name":"b","nameLocation":"3403:1:10","nodeType":"VariableDeclaration","scope":1487,"src":"3395:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:10"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"3429:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:10"},"scope":2858,"src":"3371:111:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1509,"nodeType":"Block","src":"3666:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"3721:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1498,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"3725:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1501,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"3731:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"3735:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1496,"id":1508,"nodeType":"Return","src":"3713:28:10"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"3488:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:10","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"a","nameLocation":"3620:1:10","nodeType":"VariableDeclaration","scope":1510,"src":"3612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"b","nameLocation":"3631:1:10","nodeType":"VariableDeclaration","scope":1510,"src":"3623:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:10"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"3657:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:10"},"scope":2858,"src":"3595:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1550,"nodeType":"Block","src":"4040:633:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1520,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"4054:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1531,"nodeType":"IfStatement","src":"4050:150:10","trueBody":{"id":1530,"nodeType":"Block","src":"4062:138:10","statements":[{"expression":{"arguments":[{"expression":{"id":1526,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"4166:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1216_$","typeString":"type(library Panic)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1183,"src":"4166:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1523,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"4154:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1216_$","typeString":"type(library Panic)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"4154:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"ExpressionStatement","src":"4154:35:10"}]}},{"id":1549,"nodeType":"UncheckedBlock","src":"4583:84:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"4630:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1532,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"4614:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"4614:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"4641:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1542,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"4650:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1519,"id":1548,"nodeType":"Return","src":"4607:49:10"}]}]},"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"3754:210:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1551,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:10","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"a","nameLocation":"3994:1:10","nodeType":"VariableDeclaration","scope":1551,"src":"3986:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"b","nameLocation":"4005:1:10","nodeType":"VariableDeclaration","scope":1551,"src":"3997:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:10"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1551,"src":"4031:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:10"},"scope":2858,"src":"3969:704:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1687,"nodeType":"Block","src":"5094:4128:10","statements":[{"id":1686,"nodeType":"UncheckedBlock","src":"5104:4112:10","statements":[{"assignments":[1564],"declarations":[{"constant":false,"id":1564,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:10","nodeType":"VariableDeclaration","scope":1686,"src":"5433:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1568,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"5449:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1566,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"5453:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:10"},{"assignments":[1570],"declarations":[{"constant":false,"id":1570,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:10","nodeType":"VariableDeclaration","scope":1686,"src":"5513:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1571,"nodeType":"VariableDeclarationStatement","src":"5513:13:10"},{"AST":{"nodeType":"YulBlock","src":"5593:122:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:10"},"nodeType":"YulFunctionCall","src":"5634:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:10"},"nodeType":"YulFunctionCall","src":"5621:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:10","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:10"},"nodeType":"YulFunctionCall","src":"5671:14:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:10"},"nodeType":"YulFunctionCall","src":"5687:13:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:10"},"nodeType":"YulFunctionCall","src":"5667:34:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1564,"isOffset":false,"isSlot":false,"src":"5679:5:10","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"5694:5:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"5658:5:10","valueSize":1},{"declaration":1554,"isOffset":false,"isSlot":false,"src":"5628:1:10","valueSize":1},{"declaration":1556,"isOffset":false,"isSlot":false,"src":"5631:1:10","valueSize":1}],"id":1572,"nodeType":"InlineAssembly","src":"5584:131:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1573,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"5796:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1581,"nodeType":"IfStatement","src":"5792:368:10","trueBody":{"id":1580,"nodeType":"Block","src":"5808:352:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"6126:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1577,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"6134:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1562,"id":1579,"nodeType":"Return","src":"6119:26:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1582,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"6270:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1583,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"6285:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"6266:143:10","trueBody":{"id":1599,"nodeType":"Block","src":"6292:117:10","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1589,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"6330:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1592,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"6348:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1216_$","typeString":"type(library Panic)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1183,"src":"6348:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1594,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"6372:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1216_$","typeString":"type(library Panic)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:10","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1179,"src":"6372:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1588,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"6322:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1585,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"6310:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1216_$","typeString":"type(library Panic)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"6310:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"6310:84:10"}]}},{"assignments":[1602],"declarations":[{"constant":false,"id":1602,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:10","nodeType":"VariableDeclaration","scope":1686,"src":"6664:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1603,"nodeType":"VariableDeclarationStatement","src":"6664:17:10"},{"AST":{"nodeType":"YulBlock","src":"6704:291:10","statements":[{"nodeType":"YulAssignment","src":"6773:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:10"},"nodeType":"YulFunctionCall","src":"6786:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:10"}]},{"nodeType":"YulAssignment","src":"6893:41:10","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:10"},"nodeType":"YulFunctionCall","src":"6913:20:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:10"},"nodeType":"YulFunctionCall","src":"6902:32:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:10"}]},{"nodeType":"YulAssignment","src":"6951:30:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:10"},"nodeType":"YulFunctionCall","src":"6960:21:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1558,"isOffset":false,"isSlot":false,"src":"6799:11:10","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"6927:5:10","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"6951:5:10","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"6964:5:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"6893:5:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"6906:5:10","valueSize":1},{"declaration":1602,"isOffset":false,"isSlot":false,"src":"6773:9:10","valueSize":1},{"declaration":1602,"isOffset":false,"isSlot":false,"src":"6916:9:10","valueSize":1},{"declaration":1602,"isOffset":false,"isSlot":false,"src":"6971:9:10","valueSize":1},{"declaration":1554,"isOffset":false,"isSlot":false,"src":"6793:1:10","valueSize":1},{"declaration":1556,"isOffset":false,"isSlot":false,"src":"6796:1:10","valueSize":1}],"id":1604,"nodeType":"InlineAssembly","src":"6695:300:10"},{"assignments":[1606],"declarations":[{"constant":false,"id":1606,"mutability":"mutable","name":"twos","nameLocation":"7207:4:10","nodeType":"VariableDeclaration","scope":1686,"src":"7199:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1613,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1607,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"7214:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1609,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"7233:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:10"},{"AST":{"nodeType":"YulBlock","src":"7268:366:10","statements":[{"nodeType":"YulAssignment","src":"7333:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:10"},"nodeType":"YulFunctionCall","src":"7348:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:10"}]},{"nodeType":"YulAssignment","src":"7437:25:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:10"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:10"},"nodeType":"YulFunctionCall","src":"7446:16:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:10"}]},{"nodeType":"YulAssignment","src":"7581:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:10"},"nodeType":"YulFunctionCall","src":"7597:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:10"},"nodeType":"YulFunctionCall","src":"7593:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:10"},"nodeType":"YulFunctionCall","src":"7589:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1558,"isOffset":false,"isSlot":false,"src":"7333:11:10","valueSize":1},{"declaration":1558,"isOffset":false,"isSlot":false,"src":"7352:11:10","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"7437:5:10","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"7450:5:10","valueSize":1},{"declaration":1606,"isOffset":false,"isSlot":false,"src":"7365:4:10","valueSize":1},{"declaration":1606,"isOffset":false,"isSlot":false,"src":"7457:4:10","valueSize":1},{"declaration":1606,"isOffset":false,"isSlot":false,"src":"7581:4:10","valueSize":1},{"declaration":1606,"isOffset":false,"isSlot":false,"src":"7604:4:10","valueSize":1},{"declaration":1606,"isOffset":false,"isSlot":false,"src":"7611:4:10","valueSize":1}],"id":1614,"nodeType":"InlineAssembly","src":"7259:375:10"},{"expression":{"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1615,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"7700:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1616,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"7709:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1617,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"7717:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1620,"nodeType":"ExpressionStatement","src":"7700:21:10"},{"assignments":[1622],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:10","nodeType":"VariableDeclaration","scope":1686,"src":"8056:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1629,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1624,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8079:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:10"},{"expression":{"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1630,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1632,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8327:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1633,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8341:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1637,"nodeType":"ExpressionStatement","src":"8312:36:10"},{"expression":{"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1638,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8382:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8397:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1641,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8411:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1645,"nodeType":"ExpressionStatement","src":"8382:36:10"},{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1646,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8454:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1648,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8469:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1649,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8483:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"8454:36:10"},{"expression":{"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8525:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8540:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1657,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8554:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1661,"nodeType":"ExpressionStatement","src":"8525:36:10"},{"expression":{"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1662,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8598:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1664,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8613:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1665,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8627:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1669,"nodeType":"ExpressionStatement","src":"8598:36:10"},{"expression":{"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1670,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8672:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8687:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1673,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8701:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1677,"nodeType":"ExpressionStatement","src":"8672:36:10"},{"expression":{"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"9154:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"9163:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1680,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"9171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1683,"nodeType":"ExpressionStatement","src":"9154:24:10"},{"expression":{"id":1684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"9199:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1562,"id":1685,"nodeType":"Return","src":"9192:13:10"}]}]},"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"4679:312:10","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1688,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:10","nodeType":"FunctionDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"x","nameLocation":"5020:1:10","nodeType":"VariableDeclaration","scope":1688,"src":"5012:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"y","nameLocation":"5031:1:10","nodeType":"VariableDeclaration","scope":1688,"src":"5023:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:10","nodeType":"VariableDeclaration","scope":1688,"src":"5034:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:10"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"result","nameLocation":"5086:6:10","nodeType":"VariableDeclaration","scope":1688,"src":"5078:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:10"},"scope":2858,"src":"4996:4226:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1724,"nodeType":"Block","src":"9461:128:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1704,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"9485:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1705,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9488:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1706,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"9491:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1703,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1688,1725],"referencedDeclaration":1688,"src":"9478:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1711,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9539:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}],"id":1710,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"9522:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1264_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1714,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"9559:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1715,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9562:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1716,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"9565:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1713,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1708,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"9506:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"9506:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1702,"id":1723,"nodeType":"Return","src":"9471:111:10"}]},"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"9228:118:10","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1725,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:10","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"x","nameLocation":"9375:1:10","nodeType":"VariableDeclaration","scope":1725,"src":"9367:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"y","nameLocation":"9386:1:10","nodeType":"VariableDeclaration","scope":1725,"src":"9378:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:10","nodeType":"VariableDeclaration","scope":1725,"src":"9389:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:10","nodeType":"VariableDeclaration","scope":1725,"src":"9410:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"},"typeName":{"id":1697,"nodeType":"UserDefinedTypeName","pathNode":{"id":1696,"name":"Rounding","nameLocations":["9410:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1264,"src":"9410:8:10"},"referencedDeclaration":1264,"src":"9410:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:10"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"9452:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:10"},"scope":2858,"src":"9351:238:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1821,"nodeType":"Block","src":"10223:1849:10","statements":[{"id":1820,"nodeType":"UncheckedBlock","src":"10233:1833:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1735,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"10261:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1740,"nodeType":"IfStatement","src":"10257:20:10","trueBody":{"expression":{"hexValue":"30","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1734,"id":1739,"nodeType":"Return","src":"10269:8:10"}},{"assignments":[1742],"declarations":[{"constant":false,"id":1742,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:10","nodeType":"VariableDeclaration","scope":1820,"src":"10748:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1746,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"10768:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1744,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"10772:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:10"},{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:10","nodeType":"VariableDeclaration","scope":1820,"src":"10787:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1750,"initialValue":{"id":1749,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"10801:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:10"},{"assignments":[1752],"declarations":[{"constant":false,"id":1752,"mutability":"mutable","name":"x","nameLocation":"10945:1:10","nodeType":"VariableDeclaration","scope":1820,"src":"10938:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1751,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1754,"initialValue":{"hexValue":"30","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:10"},{"assignments":[1756],"declarations":[{"constant":false,"id":1756,"mutability":"mutable","name":"y","nameLocation":"10971:1:10","nodeType":"VariableDeclaration","scope":1820,"src":"10964:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1755,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1758,"initialValue":{"hexValue":"31","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:10"},{"body":{"id":1795,"nodeType":"Block","src":"11014:882:10","statements":[{"assignments":[1763],"declarations":[{"constant":false,"id":1763,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:10","nodeType":"VariableDeclaration","scope":1795,"src":"11032:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1764,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"11051:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1765,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"11057:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:10"},{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1768,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"11086:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1769,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"11091:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1770,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1771,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"11191:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1772,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"11436:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1773,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"11442:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1774,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"11454:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:10","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"11085:395:10"},{"expression":{"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1780,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"11500:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1781,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"11503:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1782,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1783,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"11585:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1784,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"11839:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"11843:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1788,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"11854:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1786,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:10","typeDescriptions":{}}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:10","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1794,"nodeType":"ExpressionStatement","src":"11499:382:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"10998:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1796,"nodeType":"WhileStatement","src":"10991:905:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"11914:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1802,"nodeType":"IfStatement","src":"11910:22:10","trueBody":{"expression":{"hexValue":"30","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1734,"id":1801,"nodeType":"Return","src":"11924:8:10"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1804,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"11983:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"11990:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:10","subExpression":{"id":1810,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"12003:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:10","typeDescriptions":{}}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1816,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"12015:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:10","typeDescriptions":{}}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1803,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"11975:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1734,"id":1819,"nodeType":"Return","src":"11968:50:10"}]}]},"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"9595:553:10","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:10","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"a","nameLocation":"10177:1:10","nodeType":"VariableDeclaration","scope":1822,"src":"10169:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"n","nameLocation":"10188:1:10","nodeType":"VariableDeclaration","scope":1822,"src":"10180:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:10"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1822,"src":"10214:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:10"},"scope":2858,"src":"10153:1919:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1842,"nodeType":"Block","src":"12672:82:10","statements":[{"id":1841,"nodeType":"UncheckedBlock","src":"12682:66:10","statements":[{"expression":{"arguments":[{"id":1834,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"12725:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1835,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"12728:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1838,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"12735:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1832,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"12713:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2858_$","typeString":"type(library Math)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:10","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"12713:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1831,"id":1840,"nodeType":"Return","src":"12706:31:10"}]}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"12078:514:10","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":1843,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:10","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"a","nameLocation":"12626:1:10","nodeType":"VariableDeclaration","scope":1843,"src":"12618:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"p","nameLocation":"12637:1:10","nodeType":"VariableDeclaration","scope":1843,"src":"12629:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:10"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1843,"src":"12663:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:10"},"scope":2858,"src":"12597:157:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1878,"nodeType":"Block","src":"13524:174:10","statements":[{"assignments":[1856,1858],"declarations":[{"constant":false,"id":1856,"mutability":"mutable","name":"success","nameLocation":"13540:7:10","nodeType":"VariableDeclaration","scope":1878,"src":"13535:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1855,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"result","nameLocation":"13557:6:10","nodeType":"VariableDeclaration","scope":1878,"src":"13549:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1864,"initialValue":{"arguments":[{"id":1860,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"13577:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1861,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"13580:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1862,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"13583:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1859,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1903,1985],"referencedDeclaration":1903,"src":"13567:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:10"},{"condition":{"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:10","subExpression":{"id":1865,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"13600:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1875,"nodeType":"IfStatement","src":"13595:74:10","trueBody":{"id":1874,"nodeType":"Block","src":"13609:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":1870,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"13635:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1216_$","typeString":"type(library Panic)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1183,"src":"13635:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1867,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"13623:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1216_$","typeString":"type(library Panic)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"13623:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1873,"nodeType":"ExpressionStatement","src":"13623:35:10"}]}},{"expression":{"id":1876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"13685:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1854,"id":1877,"nodeType":"Return","src":"13678:13:10"}]},"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"12760:678:10","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:10","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"b","nameLocation":"13467:1:10","nodeType":"VariableDeclaration","scope":1879,"src":"13459:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"e","nameLocation":"13478:1:10","nodeType":"VariableDeclaration","scope":1879,"src":"13470:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"m","nameLocation":"13489:1:10","nodeType":"VariableDeclaration","scope":1879,"src":"13481:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:10"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1879,"src":"13515:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:10"},"scope":2858,"src":"13443:255:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1902,"nodeType":"Block","src":"14552:1493:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1893,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"14566:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1900,"nodeType":"IfStatement","src":"14562:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1892,"id":1899,"nodeType":"Return","src":"14574:17:10"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:10","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:10"},"nodeType":"YulFunctionCall","src":"14651:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:10","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:10"},"nodeType":"YulFunctionCall","src":"15563:17:10"},"nodeType":"YulExpressionStatement","src":"15563:17:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:10"},"nodeType":"YulFunctionCall","src":"15600:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:10"},"nodeType":"YulFunctionCall","src":"15593:28:10"},"nodeType":"YulExpressionStatement","src":"15593:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:10"},"nodeType":"YulFunctionCall","src":"15641:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:10"},"nodeType":"YulFunctionCall","src":"15634:28:10"},"nodeType":"YulExpressionStatement","src":"15634:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:10"},"nodeType":"YulFunctionCall","src":"15682:14:10"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:10"},"nodeType":"YulFunctionCall","src":"15675:25:10"},"nodeType":"YulExpressionStatement","src":"15675:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:10"},"nodeType":"YulFunctionCall","src":"15720:14:10"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:10"},"nodeType":"YulFunctionCall","src":"15713:25:10"},"nodeType":"YulExpressionStatement","src":"15713:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:10"},"nodeType":"YulFunctionCall","src":"15758:14:10"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:10"},"nodeType":"YulFunctionCall","src":"15751:25:10"},"nodeType":"YulExpressionStatement","src":"15751:25:10"},{"nodeType":"YulAssignment","src":"15938:57:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:10"},"nodeType":"YulFunctionCall","src":"15960:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:10","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:10","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:10","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:10"},"nodeType":"YulFunctionCall","src":"15949:46:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:10"}]},{"nodeType":"YulAssignment","src":"16008:21:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:10","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:10"},"nodeType":"YulFunctionCall","src":"16018:11:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1882,"isOffset":false,"isSlot":false,"src":"15698:1:10","valueSize":1},{"declaration":1884,"isOffset":false,"isSlot":false,"src":"15736:1:10","valueSize":1},{"declaration":1886,"isOffset":false,"isSlot":false,"src":"15774:1:10","valueSize":1},{"declaration":1891,"isOffset":false,"isSlot":false,"src":"16008:6:10","valueSize":1},{"declaration":1889,"isOffset":false,"isSlot":false,"src":"15938:7:10","valueSize":1}],"flags":["memory-safe"],"id":1901,"nodeType":"InlineAssembly","src":"14601:1438:10"}]},"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"13704:738:10","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1903,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:10","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"b","nameLocation":"14474:1:10","nodeType":"VariableDeclaration","scope":1903,"src":"14466:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"e","nameLocation":"14485:1:10","nodeType":"VariableDeclaration","scope":1903,"src":"14477:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"m","nameLocation":"14496:1:10","nodeType":"VariableDeclaration","scope":1903,"src":"14488:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:10"},"returnParameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"success","nameLocation":"14527:7:10","nodeType":"VariableDeclaration","scope":1903,"src":"14522:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1888,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"result","nameLocation":"14544:6:10","nodeType":"VariableDeclaration","scope":1903,"src":"14536:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:10"},"scope":2858,"src":"14447:1598:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1938,"nodeType":"Block","src":"16242:179:10","statements":[{"assignments":[1916,1918],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"success","nameLocation":"16258:7:10","nodeType":"VariableDeclaration","scope":1938,"src":"16253:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1915,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"result","nameLocation":"16280:6:10","nodeType":"VariableDeclaration","scope":1938,"src":"16267:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1917,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1924,"initialValue":{"arguments":[{"id":1920,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"16300:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1921,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"16303:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1922,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"16306:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1919,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1903,1985],"referencedDeclaration":1985,"src":"16290:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:10"},{"condition":{"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:10","subExpression":{"id":1925,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"16323:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1935,"nodeType":"IfStatement","src":"16318:74:10","trueBody":{"id":1934,"nodeType":"Block","src":"16332:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":1930,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"16358:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1216_$","typeString":"type(library Panic)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1183,"src":"16358:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1927,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"16346:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1216_$","typeString":"type(library Panic)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"16346:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1933,"nodeType":"ExpressionStatement","src":"16346:35:10"}]}},{"expression":{"id":1936,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"16408:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1914,"id":1937,"nodeType":"Return","src":"16401:13:10"}]},"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"16051:85:10","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:10","nodeType":"FunctionDefinition","parameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"b","nameLocation":"16170:1:10","nodeType":"VariableDeclaration","scope":1939,"src":"16157:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"e","nameLocation":"16186:1:10","nodeType":"VariableDeclaration","scope":1939,"src":"16173:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1907,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1910,"mutability":"mutable","name":"m","nameLocation":"16202:1:10","nodeType":"VariableDeclaration","scope":1939,"src":"16189:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1909,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:10"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"16228:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1912,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:10"},"scope":2858,"src":"16141:280:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"16675:771:10","statements":[{"condition":{"arguments":[{"id":1954,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"16700:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1953,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"16689:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1963,"nodeType":"IfStatement","src":"16685:47:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1957,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1952,"id":1962,"nodeType":"Return","src":"16704:28:10"}},{"assignments":[1965],"declarations":[{"constant":false,"id":1965,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:10","nodeType":"VariableDeclaration","scope":1984,"src":"16743:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1968,"initialValue":{"expression":{"id":1966,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"16758:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:10","memberName":"length","nodeType":"MemberAccess","src":"16758:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:10"},{"expression":{"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"16848:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1972,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"16874:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:10","memberName":"length","nodeType":"MemberAccess","src":"16874:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1974,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"16884:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:10","memberName":"length","nodeType":"MemberAccess","src":"16884:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1976,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"16894:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1977,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"16900:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1978,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"16903:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1979,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"16906:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1970,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1982,"nodeType":"ExpressionStatement","src":"16848:60:10"},{"AST":{"nodeType":"YulBlock","src":"16944:496:10","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:10","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:10"},"nodeType":"YulFunctionCall","src":"16973:17:10"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:10","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:10"},"nodeType":"YulFunctionCall","src":"17102:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:10","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:10"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:10"},"nodeType":"YulFunctionCall","src":"17124:13:10"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:10"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:10"},"nodeType":"YulFunctionCall","src":"17091:62:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:10"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:10"},"nodeType":"YulFunctionCall","src":"17302:20:10"},"nodeType":"YulExpressionStatement","src":"17302:20:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:10","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:10"},"nodeType":"YulFunctionCall","src":"17411:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:10"},"nodeType":"YulFunctionCall","src":"17398:32:10"},"nodeType":"YulExpressionStatement","src":"17398:32:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1965,"isOffset":false,"isSlot":false,"src":"17148:4:10","valueSize":1},{"declaration":1965,"isOffset":false,"isSlot":false,"src":"17317:4:10","valueSize":1},{"declaration":1965,"isOffset":false,"isSlot":false,"src":"17424:4:10","valueSize":1},{"declaration":1951,"isOffset":false,"isSlot":false,"src":"16977:6:10","valueSize":1},{"declaration":1951,"isOffset":false,"isSlot":false,"src":"17130:6:10","valueSize":1},{"declaration":1951,"isOffset":false,"isSlot":false,"src":"17309:6:10","valueSize":1},{"declaration":1949,"isOffset":false,"isSlot":false,"src":"17080:7:10","valueSize":1}],"flags":["memory-safe"],"id":1983,"nodeType":"InlineAssembly","src":"16919:521:10"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"16427:88:10","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:10","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"b","nameLocation":"16561:1:10","nodeType":"VariableDeclaration","scope":1985,"src":"16548:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1941,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"e","nameLocation":"16585:1:10","nodeType":"VariableDeclaration","scope":1985,"src":"16572:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1943,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"m","nameLocation":"16609:1:10","nodeType":"VariableDeclaration","scope":1985,"src":"16596:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1945,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:10"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"success","nameLocation":"16645:7:10","nodeType":"VariableDeclaration","scope":1985,"src":"16640:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1948,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"result","nameLocation":"16667:6:10","nodeType":"VariableDeclaration","scope":1985,"src":"16654:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1950,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:10"},"scope":2858,"src":"16520:926:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2017,"nodeType":"Block","src":"17601:176:10","statements":[{"body":{"id":2013,"nodeType":"Block","src":"17658:92:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2004,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"17676:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2006,"indexExpression":{"id":2005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"17686:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2012,"nodeType":"IfStatement","src":"17672:68:10","trueBody":{"id":2011,"nodeType":"Block","src":"17695:45:10","statements":[{"expression":{"hexValue":"66616c7365","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1992,"id":2010,"nodeType":"Return","src":"17713:12:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1997,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"17631:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1998,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"17635:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:10","memberName":"length","nodeType":"MemberAccess","src":"17635:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2014,"initializationExpression":{"assignments":[1994],"declarations":[{"constant":false,"id":1994,"mutability":"mutable","name":"i","nameLocation":"17624:1:10","nodeType":"VariableDeclaration","scope":2014,"src":"17616:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1996,"initialValue":{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:10"},"loopExpression":{"expression":{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:10","subExpression":{"id":2001,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"17655:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2003,"nodeType":"ExpressionStatement","src":"17653:3:10"},"nodeType":"ForStatement","src":"17611:139:10"},{"expression":{"hexValue":"74727565","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1992,"id":2016,"nodeType":"Return","src":"17759:11:10"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"17452:72:10","text":" @dev Returns whether the provided byte array is zero."},"id":2018,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:10","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:10","nodeType":"VariableDeclaration","scope":2018,"src":"17549:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1987,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:10"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2018,"src":"17595:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1990,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:10"},"scope":2858,"src":"17529:248:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2236,"nodeType":"Block","src":"18137:5124:10","statements":[{"id":2235,"nodeType":"UncheckedBlock","src":"18147:5108:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"18241:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2032,"nodeType":"IfStatement","src":"18237:53:10","trueBody":{"id":2031,"nodeType":"Block","src":"18249:41:10","statements":[{"expression":{"id":2029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"18274:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2025,"id":2030,"nodeType":"Return","src":"18267:8:10"}]}},{"assignments":[2034],"declarations":[{"constant":false,"id":2034,"mutability":"mutable","name":"aa","nameLocation":"19225:2:10","nodeType":"VariableDeclaration","scope":2235,"src":"19217:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2036,"initialValue":{"id":2035,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"19230:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:10"},{"assignments":[2038],"declarations":[{"constant":false,"id":2038,"mutability":"mutable","name":"xn","nameLocation":"19253:2:10","nodeType":"VariableDeclaration","scope":2235,"src":"19245:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2040,"initialValue":{"hexValue":"31","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2041,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19278:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2056,"nodeType":"IfStatement","src":"19274:92:10","trueBody":{"id":2055,"nodeType":"Block","src":"19296:70:10","statements":[{"expression":{"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2047,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19314:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2050,"nodeType":"ExpressionStatement","src":"19314:10:10"},{"expression":{"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2051,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"19342:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2054,"nodeType":"ExpressionStatement","src":"19342:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2057,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19383:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2072,"nodeType":"IfStatement","src":"19379:90:10","trueBody":{"id":2071,"nodeType":"Block","src":"19400:69:10","statements":[{"expression":{"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2063,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19418:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2066,"nodeType":"ExpressionStatement","src":"19418:9:10"},{"expression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2067,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"19445:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2070,"nodeType":"ExpressionStatement","src":"19445:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19486:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2088,"nodeType":"IfStatement","src":"19482:90:10","trueBody":{"id":2087,"nodeType":"Block","src":"19503:69:10","statements":[{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2079,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19521:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2082,"nodeType":"ExpressionStatement","src":"19521:9:10"},{"expression":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2083,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"19548:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2086,"nodeType":"ExpressionStatement","src":"19548:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2089,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19589:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2104,"nodeType":"IfStatement","src":"19585:89:10","trueBody":{"id":2103,"nodeType":"Block","src":"19606:68:10","statements":[{"expression":{"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2095,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19624:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2098,"nodeType":"ExpressionStatement","src":"19624:9:10"},{"expression":{"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2099,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"19651:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2102,"nodeType":"ExpressionStatement","src":"19651:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19691:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"IfStatement","src":"19687:87:10","trueBody":{"id":2119,"nodeType":"Block","src":"19707:67:10","statements":[{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2111,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19725:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2114,"nodeType":"ExpressionStatement","src":"19725:8:10"},{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2115,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"19751:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2118,"nodeType":"ExpressionStatement","src":"19751:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2121,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19791:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2136,"nodeType":"IfStatement","src":"19787:87:10","trueBody":{"id":2135,"nodeType":"Block","src":"19807:67:10","statements":[{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2127,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19825:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2130,"nodeType":"ExpressionStatement","src":"19825:8:10"},{"expression":{"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2131,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"19851:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2134,"nodeType":"ExpressionStatement","src":"19851:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2137,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"19891:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2148,"nodeType":"IfStatement","src":"19887:61:10","trueBody":{"id":2147,"nodeType":"Block","src":"19907:41:10","statements":[{"expression":{"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2143,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"19925:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2146,"nodeType":"ExpressionStatement","src":"19925:8:10"}]}},{"expression":{"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2149,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"20368:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2151,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"20378:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2153,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2157,"nodeType":"ExpressionStatement","src":"20368:18:10"},{"expression":{"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2158,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22273:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2159,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22279:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2160,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"22284:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2161,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22288:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2168,"nodeType":"ExpressionStatement","src":"22273:23:10"},{"expression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2169,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22382:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22388:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"22393:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2172,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22397:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2179,"nodeType":"ExpressionStatement","src":"22382:23:10"},{"expression":{"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2180,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22493:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22499:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2182,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"22504:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2183,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22508:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2190,"nodeType":"ExpressionStatement","src":"22493:23:10"},{"expression":{"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2191,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22602:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2192,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22608:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"22613:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2194,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22617:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2201,"nodeType":"ExpressionStatement","src":"22602:23:10"},{"expression":{"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2202,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22712:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22718:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2204,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"22723:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2205,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22727:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2212,"nodeType":"ExpressionStatement","src":"22712:23:10"},{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2213,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22822:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2214,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22828:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"22833:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2216,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"22837:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2223,"nodeType":"ExpressionStatement","src":"22822:23:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2224,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"23211:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2227,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"23232:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"23237:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2229,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"23241:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2225,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"23216:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"23216:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2025,"id":2234,"nodeType":"Return","src":"23204:40:10"}]}]},"documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"17783:292:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2237,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:10","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"a","nameLocation":"18102:1:10","nodeType":"VariableDeclaration","scope":2237,"src":"18094:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:10"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2237,"src":"18128:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:10"},"scope":2858,"src":"18080:5181:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2270,"nodeType":"Block","src":"23434:171:10","statements":[{"id":2269,"nodeType":"UncheckedBlock","src":"23444:155:10","statements":[{"assignments":[2249],"declarations":[{"constant":false,"id":2249,"mutability":"mutable","name":"result","nameLocation":"23476:6:10","nodeType":"VariableDeclaration","scope":2269,"src":"23468:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2253,"initialValue":{"arguments":[{"id":2251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"23490:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2250,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2237,2271],"referencedDeclaration":2237,"src":"23485:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"23513:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2258,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"23555:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}],"id":2257,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"23538:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1264_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"23568:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"23577:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"23586:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2255,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"23522:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"23522:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2247,"id":2268,"nodeType":"Return","src":"23506:82:10"}]}]},"documentation":{"id":2238,"nodeType":"StructuredDocumentation","src":"23267:86:10","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2271,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:10","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"a","nameLocation":"23380:1:10","nodeType":"VariableDeclaration","scope":2271,"src":"23372:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:10","nodeType":"VariableDeclaration","scope":2271,"src":"23383:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"},"typeName":{"id":2242,"nodeType":"UserDefinedTypeName","pathNode":{"id":2241,"name":"Rounding","nameLocations":["23383:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1264,"src":"23383:8:10"},"referencedDeclaration":1264,"src":"23383:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:10"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2271,"src":"23425:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:10"},"scope":2858,"src":"23358:247:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"23796:981:10","statements":[{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"result","nameLocation":"23814:6:10","nodeType":"VariableDeclaration","scope":2466,"src":"23806:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2282,"initialValue":{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:10"},{"assignments":[2284],"declarations":[{"constant":false,"id":2284,"mutability":"mutable","name":"exp","nameLocation":"23842:3:10","nodeType":"VariableDeclaration","scope":2466,"src":"23834:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2285,"nodeType":"VariableDeclarationStatement","src":"23834:11:10"},{"id":2463,"nodeType":"UncheckedBlock","src":"23855:893:10","statements":[{"expression":{"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2286,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"23879:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"23907:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2288,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"23891:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"23891:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2301,"nodeType":"ExpressionStatement","src":"23879:51:10"},{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"23944:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2303,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"23954:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"23944:13:10"},{"expression":{"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"23971:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2307,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"23981:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2309,"nodeType":"ExpressionStatement","src":"23971:13:10"},{"expression":{"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2310,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"23999:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24026:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2312,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"24010:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"24010:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2325,"nodeType":"ExpressionStatement","src":"23999:49:10"},{"expression":{"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24062:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2327,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24072:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2329,"nodeType":"ExpressionStatement","src":"24062:13:10"},{"expression":{"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"24089:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2331,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24099:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2333,"nodeType":"ExpressionStatement","src":"24089:13:10"},{"expression":{"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2334,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24117:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24144:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":2344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2336,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"24128:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"24128:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2349,"nodeType":"ExpressionStatement","src":"24117:49:10"},{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24180:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2351,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24190:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2353,"nodeType":"ExpressionStatement","src":"24180:13:10"},{"expression":{"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2354,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"24207:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2355,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24217:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2357,"nodeType":"ExpressionStatement","src":"24207:13:10"},{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2358,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24235:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24262:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:10","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2360,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"24246:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"24246:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2373,"nodeType":"ExpressionStatement","src":"24235:49:10"},{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24298:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2375,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24308:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2377,"nodeType":"ExpressionStatement","src":"24298:13:10"},{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"24325:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2379,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24335:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2381,"nodeType":"ExpressionStatement","src":"24325:13:10"},{"expression":{"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2382,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24353:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24379:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":2392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2384,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"24363:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"24363:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2397,"nodeType":"ExpressionStatement","src":"24353:47:10"},{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24414:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2399,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24424:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2401,"nodeType":"ExpressionStatement","src":"24414:13:10"},{"expression":{"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"24441:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2403,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24451:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2405,"nodeType":"ExpressionStatement","src":"24441:13:10"},{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2406,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24469:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24495:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":2416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2408,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"24479:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"24479:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ExpressionStatement","src":"24469:47:10"},{"expression":{"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24530:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2423,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24540:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2425,"nodeType":"ExpressionStatement","src":"24530:13:10"},{"expression":{"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"24557:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2427,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24567:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2429,"nodeType":"ExpressionStatement","src":"24557:13:10"},{"expression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2430,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24585:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24611:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2432,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"24595:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"24595:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2445,"nodeType":"ExpressionStatement","src":"24585:47:10"},{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24646:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2447,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24656:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2449,"nodeType":"ExpressionStatement","src":"24646:13:10"},{"expression":{"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"24673:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2451,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"24683:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2453,"nodeType":"ExpressionStatement","src":"24673:13:10"},{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"24701:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24727:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2455,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"24711:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"24711:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2462,"nodeType":"ExpressionStatement","src":"24701:36:10"}]},{"expression":{"id":2464,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"24764:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2278,"id":2465,"nodeType":"Return","src":"24757:13:10"}]},"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"23611:119:10","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:10","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"value","nameLocation":"23757:5:10","nodeType":"VariableDeclaration","scope":2467,"src":"23749:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:10"},"returnParameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"23787:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:10"},"scope":2858,"src":"23735:1042:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2500,"nodeType":"Block","src":"25010:175:10","statements":[{"id":2499,"nodeType":"UncheckedBlock","src":"25020:159:10","statements":[{"assignments":[2479],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"result","nameLocation":"25052:6:10","nodeType":"VariableDeclaration","scope":2499,"src":"25044:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2483,"initialValue":{"arguments":[{"id":2481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"25066:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2467,2501],"referencedDeclaration":2467,"src":"25061:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"25093:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2488,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"25135:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}],"id":2487,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"25118:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1264_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"25153:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"25162:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2485,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"25102:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"25102:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2477,"id":2498,"nodeType":"Return","src":"25086:82:10"}]}]},"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"24783:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2501,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:10","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"value","nameLocation":"24952:5:10","nodeType":"VariableDeclaration","scope":2501,"src":"24944:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:10","nodeType":"VariableDeclaration","scope":2501,"src":"24959:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"},"typeName":{"id":2472,"nodeType":"UserDefinedTypeName","pathNode":{"id":2471,"name":"Rounding","nameLocations":["24959:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1264,"src":"24959:8:10"},"referencedDeclaration":1264,"src":"24959:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:10"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2501,"src":"25001:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:10"},"scope":2858,"src":"24930:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2629,"nodeType":"Block","src":"25378:854:10","statements":[{"assignments":[2510],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"result","nameLocation":"25396:6:10","nodeType":"VariableDeclaration","scope":2629,"src":"25388:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2512,"initialValue":{"hexValue":"30","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:10"},{"id":2626,"nodeType":"UncheckedBlock","src":"25416:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"25444:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2529,"nodeType":"IfStatement","src":"25440:103:10","trueBody":{"id":2528,"nodeType":"Block","src":"25463:80:10","statements":[{"expression":{"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"25481:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2523,"nodeType":"ExpressionStatement","src":"25481:17:10"},{"expression":{"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"25516:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2527,"nodeType":"ExpressionStatement","src":"25516:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"25560:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2546,"nodeType":"IfStatement","src":"25556:103:10","trueBody":{"id":2545,"nodeType":"Block","src":"25579:80:10","statements":[{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"25597:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ExpressionStatement","src":"25597:17:10"},{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2541,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"25632:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2544,"nodeType":"ExpressionStatement","src":"25632:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"25676:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2563,"nodeType":"IfStatement","src":"25672:103:10","trueBody":{"id":2562,"nodeType":"Block","src":"25695:80:10","statements":[{"expression":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"25713:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2557,"nodeType":"ExpressionStatement","src":"25713:17:10"},{"expression":{"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"25748:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2561,"nodeType":"ExpressionStatement","src":"25748:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"25792:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2580,"nodeType":"IfStatement","src":"25788:100:10","trueBody":{"id":2579,"nodeType":"Block","src":"25810:78:10","statements":[{"expression":{"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"25828:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2574,"nodeType":"ExpressionStatement","src":"25828:16:10"},{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"25862:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2578,"nodeType":"ExpressionStatement","src":"25862:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"25905:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2597,"nodeType":"IfStatement","src":"25901:100:10","trueBody":{"id":2596,"nodeType":"Block","src":"25923:78:10","statements":[{"expression":{"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"25941:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2591,"nodeType":"ExpressionStatement","src":"25941:16:10"},{"expression":{"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"25975:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"nodeType":"ExpressionStatement","src":"25975:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"26018:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2614,"nodeType":"IfStatement","src":"26014:100:10","trueBody":{"id":2613,"nodeType":"Block","src":"26036:78:10","statements":[{"expression":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"26054:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2608,"nodeType":"ExpressionStatement","src":"26054:16:10"},{"expression":{"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"26088:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2612,"nodeType":"ExpressionStatement","src":"26088:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"26131:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2625,"nodeType":"IfStatement","src":"26127:66:10","trueBody":{"id":2624,"nodeType":"Block","src":"26149:44:10","statements":[{"expression":{"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"26167:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2623,"nodeType":"ExpressionStatement","src":"26167:11:10"}]}}]},{"expression":{"id":2627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"26219:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2508,"id":2628,"nodeType":"Return","src":"26212:13:10"}]},"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"25191:120:10","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2630,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:10","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"value","nameLocation":"25339:5:10","nodeType":"VariableDeclaration","scope":2630,"src":"25331:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:10"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2630,"src":"25369:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:10"},"scope":2858,"src":"25316:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2663,"nodeType":"Block","src":"26467:177:10","statements":[{"id":2662,"nodeType":"UncheckedBlock","src":"26477:161:10","statements":[{"assignments":[2642],"declarations":[{"constant":false,"id":2642,"mutability":"mutable","name":"result","nameLocation":"26509:6:10","nodeType":"VariableDeclaration","scope":2662,"src":"26501:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2646,"initialValue":{"arguments":[{"id":2644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"26524:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2643,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2630,2664],"referencedDeclaration":2630,"src":"26518:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"26551:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2651,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"26593:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}],"id":2650,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"26576:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1264_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"26612:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"26621:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2648,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"26560:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"26560:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2640,"id":2661,"nodeType":"Return","src":"26544:83:10"}]}]},"documentation":{"id":2631,"nodeType":"StructuredDocumentation","src":"26238:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2664,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:10","nodeType":"FunctionDefinition","parameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"value","nameLocation":"26409:5:10","nodeType":"VariableDeclaration","scope":2664,"src":"26401:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2636,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:10","nodeType":"VariableDeclaration","scope":2664,"src":"26416:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"},"typeName":{"id":2635,"nodeType":"UserDefinedTypeName","pathNode":{"id":2634,"name":"Rounding","nameLocations":["26416:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1264,"src":"26416:8:10"},"referencedDeclaration":1264,"src":"26416:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:10"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2664,"src":"26458:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:10"},"scope":2858,"src":"26386:258:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2800,"nodeType":"Block","src":"26964:674:10","statements":[{"assignments":[2673],"declarations":[{"constant":false,"id":2673,"mutability":"mutable","name":"result","nameLocation":"26982:6:10","nodeType":"VariableDeclaration","scope":2800,"src":"26974:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2675,"initialValue":{"hexValue":"30","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:10"},{"assignments":[2677],"declarations":[{"constant":false,"id":2677,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:10","nodeType":"VariableDeclaration","scope":2800,"src":"27002:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2678,"nodeType":"VariableDeclarationStatement","src":"27002:12:10"},{"id":2797,"nodeType":"UncheckedBlock","src":"27024:585:10","statements":[{"expression":{"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2679,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27048:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27071:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2680,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"27055:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"27055:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2692,"nodeType":"ExpressionStatement","src":"27048:46:10"},{"expression":{"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27108:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27118:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"nodeType":"ExpressionStatement","src":"27108:20:10"},{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"27142:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27152:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"27142:19:10"},{"expression":{"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2705,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27176:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27199:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2706,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"27183:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"27183:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2718,"nodeType":"ExpressionStatement","src":"27176:45:10"},{"expression":{"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27235:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27245:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2724,"nodeType":"ExpressionStatement","src":"27235:19:10"},{"expression":{"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"27268:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27278:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2730,"nodeType":"ExpressionStatement","src":"27268:18:10"},{"expression":{"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2731,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27301:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27324:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":2740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2732,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"27308:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"27308:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2744,"nodeType":"ExpressionStatement","src":"27301:45:10"},{"expression":{"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27360:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2746,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27370:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2750,"nodeType":"ExpressionStatement","src":"27360:19:10"},{"expression":{"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"27393:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2752,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27403:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2756,"nodeType":"ExpressionStatement","src":"27393:18:10"},{"expression":{"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2757,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27426:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27449:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:10","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2758,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"27433:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"27433:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2770,"nodeType":"ExpressionStatement","src":"27426:45:10"},{"expression":{"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27485:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2772,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27495:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2776,"nodeType":"ExpressionStatement","src":"27485:19:10"},{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2777,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"27518:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"27528:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2782,"nodeType":"ExpressionStatement","src":"27518:18:10"},{"expression":{"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"27551:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27577:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2784,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"27561:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"27561:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2796,"nodeType":"ExpressionStatement","src":"27551:47:10"}]},{"expression":{"id":2798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"27625:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2671,"id":2799,"nodeType":"Return","src":"27618:13:10"}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"26650:246:10","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:10","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"value","nameLocation":"26925:5:10","nodeType":"VariableDeclaration","scope":2801,"src":"26917:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:10"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2801,"src":"26955:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:10"},"scope":2858,"src":"26901:737:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2837,"nodeType":"Block","src":"27875:184:10","statements":[{"id":2836,"nodeType":"UncheckedBlock","src":"27885:168:10","statements":[{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"result","nameLocation":"27917:6:10","nodeType":"VariableDeclaration","scope":2836,"src":"27909:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2817,"initialValue":{"arguments":[{"id":2815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"27933:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2814,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2801,2838],"referencedDeclaration":2801,"src":"27926:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"27960:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2822,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"28002:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}],"id":2821,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"27985:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1264_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"28021:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"28036:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2819,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"27969:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4623_$","typeString":"type(library SafeCast)"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"27969:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2811,"id":2835,"nodeType":"Return","src":"27953:89:10"}]}]},"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"27644:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:10","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"value","nameLocation":"27817:5:10","nodeType":"VariableDeclaration","scope":2838,"src":"27809:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:10","nodeType":"VariableDeclaration","scope":2838,"src":"27824:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"},"typeName":{"id":2806,"nodeType":"UserDefinedTypeName","pathNode":{"id":2805,"name":"Rounding","nameLocations":["27824:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1264,"src":"27824:8:10"},"referencedDeclaration":1264,"src":"27824:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:10"},"returnParameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"27866:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:10"},"scope":2858,"src":"27793:266:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2856,"nodeType":"Block","src":"28257:48:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2849,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"28280:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}],"id":2848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2847,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:10","typeDescriptions":{}}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2846,"id":2855,"nodeType":"Return","src":"28267:31:10"}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"28065:113:10","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2857,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:10","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:10","nodeType":"VariableDeclaration","scope":2857,"src":"28209:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"},"typeName":{"id":2841,"nodeType":"UserDefinedTypeName","pathNode":{"id":2840,"name":"Rounding","nameLocations":["28209:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1264,"src":"28209:8:10"},"referencedDeclaration":1264,"src":"28209:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1264","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:10"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2857,"src":"28251:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2844,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:10"},"scope":2858,"src":"28183:122:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2859,"src":"281:28026:10","usedErrors":[],"usedEvents":[]}],"src":"103:28205:10"},"id":10},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4623]},"id":4624,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2860,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"218:550:11","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4623,"linearizedBaseContracts":[4623],"name":"SafeCast","nameLocation":"777:8:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"792:68:11","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":2868,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:11","nodeType":"ErrorDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"bits","nameLocation":"908:4:11","nodeType":"VariableDeclaration","scope":2868,"src":"902:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2863,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"value","nameLocation":"922:5:11","nodeType":"VariableDeclaration","scope":2868,"src":"914:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:11"},"src":"865:64:11"},{"documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"935:75:11","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":2873,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:11","nodeType":"ErrorDefinition","parameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"value","nameLocation":"1056:5:11","nodeType":"VariableDeclaration","scope":2873,"src":"1049:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2870,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:11"},"src":"1015:48:11"},{"documentation":{"id":2874,"nodeType":"StructuredDocumentation","src":"1069:67:11","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":2880,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:11","nodeType":"ErrorDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"bits","nameLocation":"1183:4:11","nodeType":"VariableDeclaration","scope":2880,"src":"1177:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2875,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"value","nameLocation":"1196:5:11","nodeType":"VariableDeclaration","scope":2880,"src":"1189:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2877,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:11"},"src":"1141:62:11"},{"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"1209:75:11","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2885,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:11","nodeType":"ErrorDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"value","nameLocation":"1331:5:11","nodeType":"VariableDeclaration","scope":2885,"src":"1323:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:11"},"src":"1289:49:11"},{"body":{"id":2912,"nodeType":"Block","src":"1695:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1709:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2895,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2894,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:11","memberName":"max","nodeType":"MemberAccess","src":"1717:17:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2906,"nodeType":"IfStatement","src":"1705:105:11","trueBody":{"id":2905,"nodeType":"Block","src":"1736:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:11","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1793:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2900,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"1757:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2904,"nodeType":"RevertStatement","src":"1750:49:11"}]}},{"expression":{"arguments":[{"id":2909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1834:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2907,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:11","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2892,"id":2911,"nodeType":"Return","src":"1819:21:11"}]},"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"1344:280:11","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:11","nodeType":"FunctionDefinition","parameters":{"id":2889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"value","nameLocation":"1656:5:11","nodeType":"VariableDeclaration","scope":2913,"src":"1648:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:11"},"returnParameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2913,"src":"1686:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2890,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:11"},"scope":4623,"src":"1629:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2940,"nodeType":"Block","src":"2204:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"2218:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2923,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2922,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:11","memberName":"max","nodeType":"MemberAccess","src":"2226:17:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2934,"nodeType":"IfStatement","src":"2214:105:11","trueBody":{"id":2933,"nodeType":"Block","src":"2245:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:11","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"2302:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2928,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"2266:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2932,"nodeType":"RevertStatement","src":"2259:49:11"}]}},{"expression":{"arguments":[{"id":2937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"2343:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2935,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:11","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2920,"id":2939,"nodeType":"Return","src":"2328:21:11"}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"1853:280:11","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2941,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:11","nodeType":"FunctionDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"value","nameLocation":"2165:5:11","nodeType":"VariableDeclaration","scope":2941,"src":"2157:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:11"},"returnParameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2941,"src":"2195:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2918,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:11"},"scope":4623,"src":"2138:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2968,"nodeType":"Block","src":"2713:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2727:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2951,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2950,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:11","memberName":"max","nodeType":"MemberAccess","src":"2735:17:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2962,"nodeType":"IfStatement","src":"2723:105:11","trueBody":{"id":2961,"nodeType":"Block","src":"2754:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2811:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2956,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"2775:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2960,"nodeType":"RevertStatement","src":"2768:49:11"}]}},{"expression":{"arguments":[{"id":2965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2852:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2963,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:11","typeDescriptions":{}}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2948,"id":2967,"nodeType":"Return","src":"2837:21:11"}]},"documentation":{"id":2942,"nodeType":"StructuredDocumentation","src":"2362:280:11","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2969,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:11","nodeType":"FunctionDefinition","parameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"value","nameLocation":"2674:5:11","nodeType":"VariableDeclaration","scope":2969,"src":"2666:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:11"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2969,"src":"2704:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2946,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:11"},"scope":4623,"src":"2647:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2996,"nodeType":"Block","src":"3222:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"3236:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2979,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2978,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:11","memberName":"max","nodeType":"MemberAccess","src":"3244:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2990,"nodeType":"IfStatement","src":"3232:105:11","trueBody":{"id":2989,"nodeType":"Block","src":"3263:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:11","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"3320:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2984,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"3284:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2988,"nodeType":"RevertStatement","src":"3277:49:11"}]}},{"expression":{"arguments":[{"id":2993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"3361:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2991,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:11","typeDescriptions":{}}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2976,"id":2995,"nodeType":"Return","src":"3346:21:11"}]},"documentation":{"id":2970,"nodeType":"StructuredDocumentation","src":"2871:280:11","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2997,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:11","nodeType":"FunctionDefinition","parameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"value","nameLocation":"3183:5:11","nodeType":"VariableDeclaration","scope":2997,"src":"3175:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:11"},"returnParameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2997,"src":"3213:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2974,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:11"},"scope":4623,"src":"3156:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3024,"nodeType":"Block","src":"3731:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"3745:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3007,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3006,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:11","memberName":"max","nodeType":"MemberAccess","src":"3753:17:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3018,"nodeType":"IfStatement","src":"3741:105:11","trueBody":{"id":3017,"nodeType":"Block","src":"3772:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:11","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"3829:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3012,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"3793:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3016,"nodeType":"RevertStatement","src":"3786:49:11"}]}},{"expression":{"arguments":[{"id":3021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"3870:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3019,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:11","typeDescriptions":{}}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3004,"id":3023,"nodeType":"Return","src":"3855:21:11"}]},"documentation":{"id":2998,"nodeType":"StructuredDocumentation","src":"3380:280:11","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:11","nodeType":"FunctionDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"value","nameLocation":"3692:5:11","nodeType":"VariableDeclaration","scope":3025,"src":"3684:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:11"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3025,"src":"3722:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3002,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:11"},"scope":4623,"src":"3665:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3052,"nodeType":"Block","src":"4240:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"4254:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3035,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3034,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:11","memberName":"max","nodeType":"MemberAccess","src":"4262:17:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3046,"nodeType":"IfStatement","src":"4250:105:11","trueBody":{"id":3045,"nodeType":"Block","src":"4281:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"4338:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3040,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"4302:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3044,"nodeType":"RevertStatement","src":"4295:49:11"}]}},{"expression":{"arguments":[{"id":3049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"4379:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3047,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:11","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3032,"id":3051,"nodeType":"Return","src":"4364:21:11"}]},"documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"3889:280:11","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3053,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:11","nodeType":"FunctionDefinition","parameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"value","nameLocation":"4201:5:11","nodeType":"VariableDeclaration","scope":3053,"src":"4193:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:11"},"returnParameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3053,"src":"4231:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3030,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:11"},"scope":4623,"src":"4174:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3080,"nodeType":"Block","src":"4749:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"4763:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3063,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3062,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:11","memberName":"max","nodeType":"MemberAccess","src":"4771:17:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3074,"nodeType":"IfStatement","src":"4759:105:11","trueBody":{"id":3073,"nodeType":"Block","src":"4790:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"4847:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3068,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"4811:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3072,"nodeType":"RevertStatement","src":"4804:49:11"}]}},{"expression":{"arguments":[{"id":3077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"4888:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3075,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:11","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3060,"id":3079,"nodeType":"Return","src":"4873:21:11"}]},"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"4398:280:11","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3081,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:11","nodeType":"FunctionDefinition","parameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"value","nameLocation":"4710:5:11","nodeType":"VariableDeclaration","scope":3081,"src":"4702:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:11"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3081,"src":"4740:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3058,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:11"},"scope":4623,"src":"4683:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3108,"nodeType":"Block","src":"5258:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"5272:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3091,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3090,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:11","memberName":"max","nodeType":"MemberAccess","src":"5280:17:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3102,"nodeType":"IfStatement","src":"5268:105:11","trueBody":{"id":3101,"nodeType":"Block","src":"5299:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:11","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"5356:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3096,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"5320:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3100,"nodeType":"RevertStatement","src":"5313:49:11"}]}},{"expression":{"arguments":[{"id":3105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"5397:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3103,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:11","typeDescriptions":{}}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3088,"id":3107,"nodeType":"Return","src":"5382:21:11"}]},"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"4907:280:11","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3109,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:11","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"value","nameLocation":"5219:5:11","nodeType":"VariableDeclaration","scope":3109,"src":"5211:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3083,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:11"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3109,"src":"5249:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3086,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:11"},"scope":4623,"src":"5192:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3136,"nodeType":"Block","src":"5767:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5781:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3119,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3118,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:11","memberName":"max","nodeType":"MemberAccess","src":"5789:17:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3130,"nodeType":"IfStatement","src":"5777:105:11","trueBody":{"id":3129,"nodeType":"Block","src":"5808:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:11","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3124,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"5829:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3128,"nodeType":"RevertStatement","src":"5822:49:11"}]}},{"expression":{"arguments":[{"id":3133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5906:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3131,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:11","typeDescriptions":{}}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3116,"id":3135,"nodeType":"Return","src":"5891:21:11"}]},"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"5416:280:11","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3137,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:11","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"value","nameLocation":"5728:5:11","nodeType":"VariableDeclaration","scope":3137,"src":"5720:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:11"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3137,"src":"5758:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3114,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:11"},"scope":4623,"src":"5701:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3164,"nodeType":"Block","src":"6276:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"6290:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3147,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3146,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:11","memberName":"max","nodeType":"MemberAccess","src":"6298:17:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3158,"nodeType":"IfStatement","src":"6286:105:11","trueBody":{"id":3157,"nodeType":"Block","src":"6317:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:11","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"6374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3152,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"6338:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3156,"nodeType":"RevertStatement","src":"6331:49:11"}]}},{"expression":{"arguments":[{"id":3161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"6415:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3159,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:11","typeDescriptions":{}}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3144,"id":3163,"nodeType":"Return","src":"6400:21:11"}]},"documentation":{"id":3138,"nodeType":"StructuredDocumentation","src":"5925:280:11","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:11","nodeType":"FunctionDefinition","parameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"value","nameLocation":"6237:5:11","nodeType":"VariableDeclaration","scope":3165,"src":"6229:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:11"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3165,"src":"6267:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3142,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:11"},"scope":4623,"src":"6210:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3192,"nodeType":"Block","src":"6785:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"6799:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3175,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3174,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:11","memberName":"max","nodeType":"MemberAccess","src":"6807:17:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3186,"nodeType":"IfStatement","src":"6795:105:11","trueBody":{"id":3185,"nodeType":"Block","src":"6826:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:11","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"6883:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3180,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"6847:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3184,"nodeType":"RevertStatement","src":"6840:49:11"}]}},{"expression":{"arguments":[{"id":3189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"6924:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3187,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:11","typeDescriptions":{}}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3172,"id":3191,"nodeType":"Return","src":"6909:21:11"}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"6434:280:11","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3193,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:11","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"value","nameLocation":"6746:5:11","nodeType":"VariableDeclaration","scope":3193,"src":"6738:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:11"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3193,"src":"6776:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3170,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:11"},"scope":4623,"src":"6719:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3220,"nodeType":"Block","src":"7294:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7308:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3203,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3202,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:11","memberName":"max","nodeType":"MemberAccess","src":"7316:17:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3214,"nodeType":"IfStatement","src":"7304:105:11","trueBody":{"id":3213,"nodeType":"Block","src":"7335:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7392:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3208,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"7356:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3212,"nodeType":"RevertStatement","src":"7349:49:11"}]}},{"expression":{"arguments":[{"id":3217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7433:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3215,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:11","typeDescriptions":{}}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3200,"id":3219,"nodeType":"Return","src":"7418:21:11"}]},"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"6943:280:11","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3221,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:11","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"value","nameLocation":"7255:5:11","nodeType":"VariableDeclaration","scope":3221,"src":"7247:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:11"},"returnParameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3221,"src":"7285:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3198,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:11"},"scope":4623,"src":"7228:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3248,"nodeType":"Block","src":"7803:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7817:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3231,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3230,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:11","memberName":"max","nodeType":"MemberAccess","src":"7825:17:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3242,"nodeType":"IfStatement","src":"7813:105:11","trueBody":{"id":3241,"nodeType":"Block","src":"7844:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:11","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7901:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3236,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"7865:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3240,"nodeType":"RevertStatement","src":"7858:49:11"}]}},{"expression":{"arguments":[{"id":3245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7942:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3243,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:11","typeDescriptions":{}}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3228,"id":3247,"nodeType":"Return","src":"7927:21:11"}]},"documentation":{"id":3222,"nodeType":"StructuredDocumentation","src":"7452:280:11","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3249,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:11","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"value","nameLocation":"7764:5:11","nodeType":"VariableDeclaration","scope":3249,"src":"7756:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:11"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3249,"src":"7794:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3226,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:11"},"scope":4623,"src":"7737:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3276,"nodeType":"Block","src":"8312:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"8326:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3259,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:11","memberName":"max","nodeType":"MemberAccess","src":"8334:17:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3270,"nodeType":"IfStatement","src":"8322:105:11","trueBody":{"id":3269,"nodeType":"Block","src":"8353:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:11","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"8410:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3264,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"8374:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3268,"nodeType":"RevertStatement","src":"8367:49:11"}]}},{"expression":{"arguments":[{"id":3273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"8451:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3271,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:11","typeDescriptions":{}}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3256,"id":3275,"nodeType":"Return","src":"8436:21:11"}]},"documentation":{"id":3250,"nodeType":"StructuredDocumentation","src":"7961:280:11","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3277,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:11","nodeType":"FunctionDefinition","parameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"value","nameLocation":"8273:5:11","nodeType":"VariableDeclaration","scope":3277,"src":"8265:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:11"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3277,"src":"8303:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3254,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:11"},"scope":4623,"src":"8246:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3304,"nodeType":"Block","src":"8821:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"8835:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3287,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:11","memberName":"max","nodeType":"MemberAccess","src":"8843:17:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3298,"nodeType":"IfStatement","src":"8831:105:11","trueBody":{"id":3297,"nodeType":"Block","src":"8862:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:11","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"8919:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3292,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"8883:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3296,"nodeType":"RevertStatement","src":"8876:49:11"}]}},{"expression":{"arguments":[{"id":3301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"8960:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3299,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:11","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3284,"id":3303,"nodeType":"Return","src":"8945:21:11"}]},"documentation":{"id":3278,"nodeType":"StructuredDocumentation","src":"8470:280:11","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3305,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:11","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"value","nameLocation":"8782:5:11","nodeType":"VariableDeclaration","scope":3305,"src":"8774:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:11"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3305,"src":"8812:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3282,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:11"},"scope":4623,"src":"8755:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3332,"nodeType":"Block","src":"9330:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"9344:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3315,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3314,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:11","memberName":"max","nodeType":"MemberAccess","src":"9352:17:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3326,"nodeType":"IfStatement","src":"9340:105:11","trueBody":{"id":3325,"nodeType":"Block","src":"9371:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"9428:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3320,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"9392:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3324,"nodeType":"RevertStatement","src":"9385:49:11"}]}},{"expression":{"arguments":[{"id":3329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"9469:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3327,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:11","typeDescriptions":{}}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3312,"id":3331,"nodeType":"Return","src":"9454:21:11"}]},"documentation":{"id":3306,"nodeType":"StructuredDocumentation","src":"8979:280:11","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3333,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:11","nodeType":"FunctionDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"value","nameLocation":"9291:5:11","nodeType":"VariableDeclaration","scope":3333,"src":"9283:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:11"},"returnParameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3333,"src":"9321:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3310,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:11"},"scope":4623,"src":"9264:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3360,"nodeType":"Block","src":"9839:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"9853:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3343,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3342,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:11","memberName":"max","nodeType":"MemberAccess","src":"9861:17:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3354,"nodeType":"IfStatement","src":"9849:105:11","trueBody":{"id":3353,"nodeType":"Block","src":"9880:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:11","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"9937:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3348,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"9901:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3352,"nodeType":"RevertStatement","src":"9894:49:11"}]}},{"expression":{"arguments":[{"id":3357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"9978:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3355,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:11","typeDescriptions":{}}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3340,"id":3359,"nodeType":"Return","src":"9963:21:11"}]},"documentation":{"id":3334,"nodeType":"StructuredDocumentation","src":"9488:280:11","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3361,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:11","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"value","nameLocation":"9800:5:11","nodeType":"VariableDeclaration","scope":3361,"src":"9792:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:11"},"returnParameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3361,"src":"9830:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3338,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:11"},"scope":4623,"src":"9773:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3388,"nodeType":"Block","src":"10348:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"10362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3371,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3370,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:11","memberName":"max","nodeType":"MemberAccess","src":"10370:17:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3382,"nodeType":"IfStatement","src":"10358:105:11","trueBody":{"id":3381,"nodeType":"Block","src":"10389:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:11","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"10446:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3376,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"10410:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3380,"nodeType":"RevertStatement","src":"10403:49:11"}]}},{"expression":{"arguments":[{"id":3385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"10487:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3383,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:11","typeDescriptions":{}}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3368,"id":3387,"nodeType":"Return","src":"10472:21:11"}]},"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"9997:280:11","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3389,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:11","nodeType":"FunctionDefinition","parameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"value","nameLocation":"10309:5:11","nodeType":"VariableDeclaration","scope":3389,"src":"10301:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:11"},"returnParameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3389,"src":"10339:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3366,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:11"},"scope":4623,"src":"10282:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3416,"nodeType":"Block","src":"10857:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"10871:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3399,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:11","memberName":"max","nodeType":"MemberAccess","src":"10879:17:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3410,"nodeType":"IfStatement","src":"10867:105:11","trueBody":{"id":3409,"nodeType":"Block","src":"10898:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:11","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"10955:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3404,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"10919:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3408,"nodeType":"RevertStatement","src":"10912:49:11"}]}},{"expression":{"arguments":[{"id":3413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"10996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3411,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:11","typeDescriptions":{}}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3396,"id":3415,"nodeType":"Return","src":"10981:21:11"}]},"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"10506:280:11","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3417,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:11","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"value","nameLocation":"10818:5:11","nodeType":"VariableDeclaration","scope":3417,"src":"10810:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:11"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3417,"src":"10848:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3394,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:11"},"scope":4623,"src":"10791:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3444,"nodeType":"Block","src":"11360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"11374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3427,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:11","memberName":"max","nodeType":"MemberAccess","src":"11382:16:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3438,"nodeType":"IfStatement","src":"11370:103:11","trueBody":{"id":3437,"nodeType":"Block","src":"11400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"11456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3432,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"11421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3436,"nodeType":"RevertStatement","src":"11414:48:11"}]}},{"expression":{"arguments":[{"id":3441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"11496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3439,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:11","typeDescriptions":{}}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3424,"id":3443,"nodeType":"Return","src":"11482:20:11"}]},"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"11015:276:11","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3445,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"value","nameLocation":"11322:5:11","nodeType":"VariableDeclaration","scope":3445,"src":"11314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:11"},"returnParameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3445,"src":"11352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3422,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:11"},"scope":4623,"src":"11296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3472,"nodeType":"Block","src":"11860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"11874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3455,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3454,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:11","memberName":"max","nodeType":"MemberAccess","src":"11882:16:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3466,"nodeType":"IfStatement","src":"11870:103:11","trueBody":{"id":3465,"nodeType":"Block","src":"11900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"11956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3460,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"11921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3464,"nodeType":"RevertStatement","src":"11914:48:11"}]}},{"expression":{"arguments":[{"id":3469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"11996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3467,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:11","typeDescriptions":{}}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3452,"id":3471,"nodeType":"Return","src":"11982:20:11"}]},"documentation":{"id":3446,"nodeType":"StructuredDocumentation","src":"11515:276:11","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:11","nodeType":"FunctionDefinition","parameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"value","nameLocation":"11822:5:11","nodeType":"VariableDeclaration","scope":3473,"src":"11814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:11"},"returnParameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3473,"src":"11852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3450,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:11"},"scope":4623,"src":"11796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3500,"nodeType":"Block","src":"12360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"12374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3483,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3482,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:11","memberName":"max","nodeType":"MemberAccess","src":"12382:16:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3494,"nodeType":"IfStatement","src":"12370:103:11","trueBody":{"id":3493,"nodeType":"Block","src":"12400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"12456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3488,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"12421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3492,"nodeType":"RevertStatement","src":"12414:48:11"}]}},{"expression":{"arguments":[{"id":3497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"12496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3495,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:11","typeDescriptions":{}}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3480,"id":3499,"nodeType":"Return","src":"12482:20:11"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"12015:276:11","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3501,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"value","nameLocation":"12322:5:11","nodeType":"VariableDeclaration","scope":3501,"src":"12314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:11"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3501,"src":"12352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3478,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:11"},"scope":4623,"src":"12296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3528,"nodeType":"Block","src":"12860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"12874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3511,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:11","memberName":"max","nodeType":"MemberAccess","src":"12882:16:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3522,"nodeType":"IfStatement","src":"12870:103:11","trueBody":{"id":3521,"nodeType":"Block","src":"12900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"12956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3516,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"12921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3520,"nodeType":"RevertStatement","src":"12914:48:11"}]}},{"expression":{"arguments":[{"id":3525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"12996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3523,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:11","typeDescriptions":{}}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3508,"id":3527,"nodeType":"Return","src":"12982:20:11"}]},"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"12515:276:11","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3529,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:11","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"value","nameLocation":"12822:5:11","nodeType":"VariableDeclaration","scope":3529,"src":"12814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:11"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3529,"src":"12852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3506,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:11"},"scope":4623,"src":"12796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3556,"nodeType":"Block","src":"13360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"13374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3539,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:11","memberName":"max","nodeType":"MemberAccess","src":"13382:16:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3550,"nodeType":"IfStatement","src":"13370:103:11","trueBody":{"id":3549,"nodeType":"Block","src":"13400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"13456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3544,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"13421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3548,"nodeType":"RevertStatement","src":"13414:48:11"}]}},{"expression":{"arguments":[{"id":3553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"13496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3551,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:11","typeDescriptions":{}}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3536,"id":3555,"nodeType":"Return","src":"13482:20:11"}]},"documentation":{"id":3530,"nodeType":"StructuredDocumentation","src":"13015:276:11","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3557,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"value","nameLocation":"13322:5:11","nodeType":"VariableDeclaration","scope":3557,"src":"13314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:11"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3557,"src":"13352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3534,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:11"},"scope":4623,"src":"13296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3584,"nodeType":"Block","src":"13860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"13874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3567,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:11","memberName":"max","nodeType":"MemberAccess","src":"13882:16:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3578,"nodeType":"IfStatement","src":"13870:103:11","trueBody":{"id":3577,"nodeType":"Block","src":"13900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"13956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3572,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"13921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3576,"nodeType":"RevertStatement","src":"13914:48:11"}]}},{"expression":{"arguments":[{"id":3581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"13996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3579,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:11","typeDescriptions":{}}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3564,"id":3583,"nodeType":"Return","src":"13982:20:11"}]},"documentation":{"id":3558,"nodeType":"StructuredDocumentation","src":"13515:276:11","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3585,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:11","nodeType":"FunctionDefinition","parameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"value","nameLocation":"13822:5:11","nodeType":"VariableDeclaration","scope":3585,"src":"13814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:11"},"returnParameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3585,"src":"13852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3562,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:11"},"scope":4623,"src":"13796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3612,"nodeType":"Block","src":"14360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"14374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3595,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3594,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:11","memberName":"max","nodeType":"MemberAccess","src":"14382:16:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3606,"nodeType":"IfStatement","src":"14370:103:11","trueBody":{"id":3605,"nodeType":"Block","src":"14400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"14456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3600,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"14421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3604,"nodeType":"RevertStatement","src":"14414:48:11"}]}},{"expression":{"arguments":[{"id":3609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"14496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3607,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:11","typeDescriptions":{}}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3592,"id":3611,"nodeType":"Return","src":"14482:20:11"}]},"documentation":{"id":3586,"nodeType":"StructuredDocumentation","src":"14015:276:11","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3613,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"value","nameLocation":"14322:5:11","nodeType":"VariableDeclaration","scope":3613,"src":"14314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:11"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3613,"src":"14352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3590,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:11"},"scope":4623,"src":"14296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3640,"nodeType":"Block","src":"14860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"14874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3623,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3622,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:11","memberName":"max","nodeType":"MemberAccess","src":"14882:16:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3634,"nodeType":"IfStatement","src":"14870:103:11","trueBody":{"id":3633,"nodeType":"Block","src":"14900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"14956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3628,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"14921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3632,"nodeType":"RevertStatement","src":"14914:48:11"}]}},{"expression":{"arguments":[{"id":3637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"14996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3635,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:11","typeDescriptions":{}}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3620,"id":3639,"nodeType":"Return","src":"14982:20:11"}]},"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"14515:276:11","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3641,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:11","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"value","nameLocation":"14822:5:11","nodeType":"VariableDeclaration","scope":3641,"src":"14814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:11"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3641,"src":"14852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3618,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:11"},"scope":4623,"src":"14796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3668,"nodeType":"Block","src":"15360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"15374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3651,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3650,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:11","memberName":"max","nodeType":"MemberAccess","src":"15382:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3662,"nodeType":"IfStatement","src":"15370:103:11","trueBody":{"id":3661,"nodeType":"Block","src":"15400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"15456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3656,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"15421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3660,"nodeType":"RevertStatement","src":"15414:48:11"}]}},{"expression":{"arguments":[{"id":3665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"15496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3663,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:11","typeDescriptions":{}}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3648,"id":3667,"nodeType":"Return","src":"15482:20:11"}]},"documentation":{"id":3642,"nodeType":"StructuredDocumentation","src":"15015:276:11","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3669,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3644,"mutability":"mutable","name":"value","nameLocation":"15322:5:11","nodeType":"VariableDeclaration","scope":3669,"src":"15314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:11"},"returnParameters":{"id":3648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3669,"src":"15352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3646,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:11"},"scope":4623,"src":"15296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3696,"nodeType":"Block","src":"15860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"15874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3679,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3678,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:11","memberName":"max","nodeType":"MemberAccess","src":"15882:16:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3690,"nodeType":"IfStatement","src":"15870:103:11","trueBody":{"id":3689,"nodeType":"Block","src":"15900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"15956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3684,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"15921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3688,"nodeType":"RevertStatement","src":"15914:48:11"}]}},{"expression":{"arguments":[{"id":3693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"15996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3691,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:11","typeDescriptions":{}}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3676,"id":3695,"nodeType":"Return","src":"15982:20:11"}]},"documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"15515:276:11","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:11","nodeType":"FunctionDefinition","parameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"value","nameLocation":"15822:5:11","nodeType":"VariableDeclaration","scope":3697,"src":"15814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:11"},"returnParameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3697,"src":"15852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3674,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:11"},"scope":4623,"src":"15796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3724,"nodeType":"Block","src":"16360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"16374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3707,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3706,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:11","memberName":"max","nodeType":"MemberAccess","src":"16382:16:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3718,"nodeType":"IfStatement","src":"16370:103:11","trueBody":{"id":3717,"nodeType":"Block","src":"16400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"16456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3712,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"16421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3716,"nodeType":"RevertStatement","src":"16414:48:11"}]}},{"expression":{"arguments":[{"id":3721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"16496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3719,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:11","typeDescriptions":{}}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3704,"id":3723,"nodeType":"Return","src":"16482:20:11"}]},"documentation":{"id":3698,"nodeType":"StructuredDocumentation","src":"16015:276:11","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3725,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"value","nameLocation":"16322:5:11","nodeType":"VariableDeclaration","scope":3725,"src":"16314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:11"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3725,"src":"16352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3702,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:11"},"scope":4623,"src":"16296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3752,"nodeType":"Block","src":"16854:146:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"16868:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3735,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3734,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:11","memberName":"max","nodeType":"MemberAccess","src":"16876:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3746,"nodeType":"IfStatement","src":"16864:101:11","trueBody":{"id":3745,"nodeType":"Block","src":"16893:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"16948:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3740,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"16914:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3744,"nodeType":"RevertStatement","src":"16907:47:11"}]}},{"expression":{"arguments":[{"id":3749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"16987:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3747,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:11","typeDescriptions":{}}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3732,"id":3751,"nodeType":"Return","src":"16974:19:11"}]},"documentation":{"id":3726,"nodeType":"StructuredDocumentation","src":"16515:272:11","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3753,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:11","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"value","nameLocation":"16817:5:11","nodeType":"VariableDeclaration","scope":3753,"src":"16809:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:11"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3753,"src":"16847:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3730,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:11"},"scope":4623,"src":"16792:208:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3775,"nodeType":"Block","src":"17236:128:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"17250:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3769,"nodeType":"IfStatement","src":"17246:81:11","trueBody":{"id":3768,"nodeType":"Block","src":"17261:66:11","statements":[{"errorCall":{"arguments":[{"id":3765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"17310:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3764,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"17282:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3767,"nodeType":"RevertStatement","src":"17275:41:11"}]}},{"expression":{"arguments":[{"id":3772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"17351:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:11","typeDescriptions":{}}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3760,"id":3774,"nodeType":"Return","src":"17336:21:11"}]},"documentation":{"id":3754,"nodeType":"StructuredDocumentation","src":"17006:160:11","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":3776,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:11","nodeType":"FunctionDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"value","nameLocation":"17197:5:11","nodeType":"VariableDeclaration","scope":3776,"src":"17190:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3755,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:11"},"returnParameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3776,"src":"17227:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:11"},"scope":4623,"src":"17171:193:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3801,"nodeType":"Block","src":"17761:150:11","statements":[{"expression":{"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3784,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"17771:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"17791:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":3785,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:11","typeDescriptions":{}}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":3790,"nodeType":"ExpressionStatement","src":"17771:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3791,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"17811:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"17825:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3800,"nodeType":"IfStatement","src":"17807:98:11","trueBody":{"id":3799,"nodeType":"Block","src":"17832:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:11","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"17888:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3794,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"17853:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3798,"nodeType":"RevertStatement","src":"17846:48:11"}]}}]},"documentation":{"id":3777,"nodeType":"StructuredDocumentation","src":"17370:312:11","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:11","nodeType":"FunctionDefinition","parameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"value","nameLocation":"17712:5:11","nodeType":"VariableDeclaration","scope":3802,"src":"17705:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3778,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:11"},"returnParameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:11","nodeType":"VariableDeclaration","scope":3802,"src":"17742:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":3781,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:11"},"scope":4623,"src":"17687:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3827,"nodeType":"Block","src":"18308:150:11","statements":[{"expression":{"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3810,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"18318:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"18338:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":3811,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:11","typeDescriptions":{}}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":3816,"nodeType":"ExpressionStatement","src":"18318:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"18358:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"18372:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3826,"nodeType":"IfStatement","src":"18354:98:11","trueBody":{"id":3825,"nodeType":"Block","src":"18379:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:11","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"18435:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3820,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"18400:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3824,"nodeType":"RevertStatement","src":"18393:48:11"}]}}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"17917:312:11","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3828,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:11","nodeType":"FunctionDefinition","parameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"value","nameLocation":"18259:5:11","nodeType":"VariableDeclaration","scope":3828,"src":"18252:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3804,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:11"},"returnParameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:11","nodeType":"VariableDeclaration","scope":3828,"src":"18289:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":3807,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:11"},"scope":4623,"src":"18234:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3853,"nodeType":"Block","src":"18855:150:11","statements":[{"expression":{"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"18865:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"18885:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":3837,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:11","typeDescriptions":{}}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":3842,"nodeType":"ExpressionStatement","src":"18865:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"18905:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"18919:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3852,"nodeType":"IfStatement","src":"18901:98:11","trueBody":{"id":3851,"nodeType":"Block","src":"18926:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:11","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"18982:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3846,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"18947:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3850,"nodeType":"RevertStatement","src":"18940:48:11"}]}}]},"documentation":{"id":3829,"nodeType":"StructuredDocumentation","src":"18464:312:11","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3854,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:11","nodeType":"FunctionDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"value","nameLocation":"18806:5:11","nodeType":"VariableDeclaration","scope":3854,"src":"18799:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3830,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:11"},"returnParameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:11","nodeType":"VariableDeclaration","scope":3854,"src":"18836:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":3833,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:11"},"scope":4623,"src":"18781:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3879,"nodeType":"Block","src":"19402:150:11","statements":[{"expression":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3862,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"19412:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"19432:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":3863,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:11","typeDescriptions":{}}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":3868,"nodeType":"ExpressionStatement","src":"19412:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"19452:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"19466:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3878,"nodeType":"IfStatement","src":"19448:98:11","trueBody":{"id":3877,"nodeType":"Block","src":"19473:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:11","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"19529:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3872,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"19494:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3876,"nodeType":"RevertStatement","src":"19487:48:11"}]}}]},"documentation":{"id":3855,"nodeType":"StructuredDocumentation","src":"19011:312:11","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3880,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:11","nodeType":"FunctionDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"value","nameLocation":"19353:5:11","nodeType":"VariableDeclaration","scope":3880,"src":"19346:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3856,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:11"},"returnParameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:11","nodeType":"VariableDeclaration","scope":3880,"src":"19383:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":3859,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:11"},"scope":4623,"src":"19328:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3905,"nodeType":"Block","src":"19949:150:11","statements":[{"expression":{"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3888,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"19959:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"19979:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3889,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:11","typeDescriptions":{}}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3894,"nodeType":"ExpressionStatement","src":"19959:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3895,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"19999:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"20013:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3904,"nodeType":"IfStatement","src":"19995:98:11","trueBody":{"id":3903,"nodeType":"Block","src":"20020:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:11","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"20076:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3898,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"20041:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3902,"nodeType":"RevertStatement","src":"20034:48:11"}]}}]},"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"19558:312:11","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3906,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:11","nodeType":"FunctionDefinition","parameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"value","nameLocation":"19900:5:11","nodeType":"VariableDeclaration","scope":3906,"src":"19893:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3882,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:11"},"returnParameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:11","nodeType":"VariableDeclaration","scope":3906,"src":"19930:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3885,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:11"},"scope":4623,"src":"19875:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3931,"nodeType":"Block","src":"20496:150:11","statements":[{"expression":{"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3914,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"20506:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"20526:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3915,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:11","typeDescriptions":{}}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3920,"nodeType":"ExpressionStatement","src":"20506:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"20546:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"20560:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3930,"nodeType":"IfStatement","src":"20542:98:11","trueBody":{"id":3929,"nodeType":"Block","src":"20567:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"20623:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3924,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"20588:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3928,"nodeType":"RevertStatement","src":"20581:48:11"}]}}]},"documentation":{"id":3907,"nodeType":"StructuredDocumentation","src":"20105:312:11","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3932,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:11","nodeType":"FunctionDefinition","parameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"value","nameLocation":"20447:5:11","nodeType":"VariableDeclaration","scope":3932,"src":"20440:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3908,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:11"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:11","nodeType":"VariableDeclaration","scope":3932,"src":"20477:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3911,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:11"},"scope":4623,"src":"20422:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3957,"nodeType":"Block","src":"21043:150:11","statements":[{"expression":{"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"21053:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"21073:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3941,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:11","typeDescriptions":{}}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3946,"nodeType":"ExpressionStatement","src":"21053:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"21093:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"21107:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3956,"nodeType":"IfStatement","src":"21089:98:11","trueBody":{"id":3955,"nodeType":"Block","src":"21114:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"21170:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3950,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"21135:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3954,"nodeType":"RevertStatement","src":"21128:48:11"}]}}]},"documentation":{"id":3933,"nodeType":"StructuredDocumentation","src":"20652:312:11","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:11","nodeType":"FunctionDefinition","parameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"value","nameLocation":"20994:5:11","nodeType":"VariableDeclaration","scope":3958,"src":"20987:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3934,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:11"},"returnParameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:11","nodeType":"VariableDeclaration","scope":3958,"src":"21024:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3937,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:11"},"scope":4623,"src":"20969:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3983,"nodeType":"Block","src":"21590:150:11","statements":[{"expression":{"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3966,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"21600:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"21620:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3967,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:11","typeDescriptions":{}}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3972,"nodeType":"ExpressionStatement","src":"21600:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"21640:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"21654:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3982,"nodeType":"IfStatement","src":"21636:98:11","trueBody":{"id":3981,"nodeType":"Block","src":"21661:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:11","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"21717:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3976,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"21682:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3980,"nodeType":"RevertStatement","src":"21675:48:11"}]}}]},"documentation":{"id":3959,"nodeType":"StructuredDocumentation","src":"21199:312:11","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3984,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:11","nodeType":"FunctionDefinition","parameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"value","nameLocation":"21541:5:11","nodeType":"VariableDeclaration","scope":3984,"src":"21534:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3960,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:11"},"returnParameters":{"id":3965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3964,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:11","nodeType":"VariableDeclaration","scope":3984,"src":"21571:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3963,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:11"},"scope":4623,"src":"21516:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4009,"nodeType":"Block","src":"22137:150:11","statements":[{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"22147:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"22167:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3993,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:11","typeDescriptions":{}}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3998,"nodeType":"ExpressionStatement","src":"22147:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"22187:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"22201:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4008,"nodeType":"IfStatement","src":"22183:98:11","trueBody":{"id":4007,"nodeType":"Block","src":"22208:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:11","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"22264:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4002,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"22229:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4006,"nodeType":"RevertStatement","src":"22222:48:11"}]}}]},"documentation":{"id":3985,"nodeType":"StructuredDocumentation","src":"21746:312:11","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4010,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:11","nodeType":"FunctionDefinition","parameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"value","nameLocation":"22088:5:11","nodeType":"VariableDeclaration","scope":4010,"src":"22081:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3986,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:11"},"returnParameters":{"id":3991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3990,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:11","nodeType":"VariableDeclaration","scope":4010,"src":"22118:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3989,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:11"},"scope":4623,"src":"22063:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4035,"nodeType":"Block","src":"22684:150:11","statements":[{"expression":{"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"22694:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"22714:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4019,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:11","typeDescriptions":{}}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4024,"nodeType":"ExpressionStatement","src":"22694:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"22734:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"22748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4034,"nodeType":"IfStatement","src":"22730:98:11","trueBody":{"id":4033,"nodeType":"Block","src":"22755:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"22811:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4028,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"22776:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4032,"nodeType":"RevertStatement","src":"22769:48:11"}]}}]},"documentation":{"id":4011,"nodeType":"StructuredDocumentation","src":"22293:312:11","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4036,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:11","nodeType":"FunctionDefinition","parameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"value","nameLocation":"22635:5:11","nodeType":"VariableDeclaration","scope":4036,"src":"22628:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4012,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:11"},"returnParameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:11","nodeType":"VariableDeclaration","scope":4036,"src":"22665:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4015,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:11"},"scope":4623,"src":"22610:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4061,"nodeType":"Block","src":"23231:150:11","statements":[{"expression":{"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"23241:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"23261:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4045,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:11","typeDescriptions":{}}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4050,"nodeType":"ExpressionStatement","src":"23241:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"23281:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"23295:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4060,"nodeType":"IfStatement","src":"23277:98:11","trueBody":{"id":4059,"nodeType":"Block","src":"23302:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:11","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"23358:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4054,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"23323:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4058,"nodeType":"RevertStatement","src":"23316:48:11"}]}}]},"documentation":{"id":4037,"nodeType":"StructuredDocumentation","src":"22840:312:11","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4062,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:11","nodeType":"FunctionDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4039,"mutability":"mutable","name":"value","nameLocation":"23182:5:11","nodeType":"VariableDeclaration","scope":4062,"src":"23175:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4038,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:11"},"returnParameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:11","nodeType":"VariableDeclaration","scope":4062,"src":"23212:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4041,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:11"},"scope":4623,"src":"23157:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4087,"nodeType":"Block","src":"23778:150:11","statements":[{"expression":{"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4070,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"23788:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"23808:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4071,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:11","typeDescriptions":{}}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4076,"nodeType":"ExpressionStatement","src":"23788:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"23828:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"23842:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4086,"nodeType":"IfStatement","src":"23824:98:11","trueBody":{"id":4085,"nodeType":"Block","src":"23849:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"23905:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4080,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"23870:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4084,"nodeType":"RevertStatement","src":"23863:48:11"}]}}]},"documentation":{"id":4063,"nodeType":"StructuredDocumentation","src":"23387:312:11","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4088,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:11","nodeType":"FunctionDefinition","parameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"value","nameLocation":"23729:5:11","nodeType":"VariableDeclaration","scope":4088,"src":"23722:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4064,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:11"},"returnParameters":{"id":4069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4068,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:11","nodeType":"VariableDeclaration","scope":4088,"src":"23759:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4067,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:11"},"scope":4623,"src":"23704:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4113,"nodeType":"Block","src":"24325:150:11","statements":[{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4096,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"24335:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"24355:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4097,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:11","typeDescriptions":{}}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4102,"nodeType":"ExpressionStatement","src":"24335:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"24375:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"24389:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4112,"nodeType":"IfStatement","src":"24371:98:11","trueBody":{"id":4111,"nodeType":"Block","src":"24396:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:11","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"24452:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4106,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"24417:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4110,"nodeType":"RevertStatement","src":"24410:48:11"}]}}]},"documentation":{"id":4089,"nodeType":"StructuredDocumentation","src":"23934:312:11","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4114,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:11","nodeType":"FunctionDefinition","parameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"value","nameLocation":"24276:5:11","nodeType":"VariableDeclaration","scope":4114,"src":"24269:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4090,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:11"},"returnParameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:11","nodeType":"VariableDeclaration","scope":4114,"src":"24306:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4093,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:11"},"scope":4623,"src":"24251:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4139,"nodeType":"Block","src":"24872:150:11","statements":[{"expression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"24882:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"24902:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4123,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:11","typeDescriptions":{}}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4128,"nodeType":"ExpressionStatement","src":"24882:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4129,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"24922:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"24936:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4138,"nodeType":"IfStatement","src":"24918:98:11","trueBody":{"id":4137,"nodeType":"Block","src":"24943:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:11","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"24999:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4132,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"24964:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4136,"nodeType":"RevertStatement","src":"24957:48:11"}]}}]},"documentation":{"id":4115,"nodeType":"StructuredDocumentation","src":"24481:312:11","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4140,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:11","nodeType":"FunctionDefinition","parameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"value","nameLocation":"24823:5:11","nodeType":"VariableDeclaration","scope":4140,"src":"24816:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4116,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:11"},"returnParameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:11","nodeType":"VariableDeclaration","scope":4140,"src":"24853:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4119,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:11"},"scope":4623,"src":"24798:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4165,"nodeType":"Block","src":"25419:150:11","statements":[{"expression":{"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4148,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"25429:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"25449:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4149,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:11","typeDescriptions":{}}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4154,"nodeType":"ExpressionStatement","src":"25429:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"25469:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"25483:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4164,"nodeType":"IfStatement","src":"25465:98:11","trueBody":{"id":4163,"nodeType":"Block","src":"25490:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:11","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"25546:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4158,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"25511:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4162,"nodeType":"RevertStatement","src":"25504:48:11"}]}}]},"documentation":{"id":4141,"nodeType":"StructuredDocumentation","src":"25028:312:11","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4166,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:11","nodeType":"FunctionDefinition","parameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"value","nameLocation":"25370:5:11","nodeType":"VariableDeclaration","scope":4166,"src":"25363:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4142,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:11"},"returnParameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:11","nodeType":"VariableDeclaration","scope":4166,"src":"25400:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4145,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:11"},"scope":4623,"src":"25345:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4191,"nodeType":"Block","src":"25966:150:11","statements":[{"expression":{"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"25976:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"25996:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4175,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:11","typeDescriptions":{}}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":4180,"nodeType":"ExpressionStatement","src":"25976:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"26016:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"26030:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4190,"nodeType":"IfStatement","src":"26012:98:11","trueBody":{"id":4189,"nodeType":"Block","src":"26037:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"26093:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4184,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"26058:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4188,"nodeType":"RevertStatement","src":"26051:48:11"}]}}]},"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"25575:312:11","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:11","nodeType":"FunctionDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"value","nameLocation":"25917:5:11","nodeType":"VariableDeclaration","scope":4192,"src":"25910:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4168,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:11"},"returnParameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:11","nodeType":"VariableDeclaration","scope":4192,"src":"25947:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4171,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:11"},"scope":4623,"src":"25892:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4217,"nodeType":"Block","src":"26513:150:11","statements":[{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4200,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"26523:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"26543:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4201,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:11","typeDescriptions":{}}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4206,"nodeType":"ExpressionStatement","src":"26523:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"26563:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"26577:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4216,"nodeType":"IfStatement","src":"26559:98:11","trueBody":{"id":4215,"nodeType":"Block","src":"26584:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:11","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"26640:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4210,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"26605:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4214,"nodeType":"RevertStatement","src":"26598:48:11"}]}}]},"documentation":{"id":4193,"nodeType":"StructuredDocumentation","src":"26122:312:11","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:11","nodeType":"FunctionDefinition","parameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"value","nameLocation":"26464:5:11","nodeType":"VariableDeclaration","scope":4218,"src":"26457:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4194,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:11"},"returnParameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:11","nodeType":"VariableDeclaration","scope":4218,"src":"26494:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4197,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:11"},"scope":4623,"src":"26439:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"27060:150:11","statements":[{"expression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27070:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"27090:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4227,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:11","typeDescriptions":{}}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4232,"nodeType":"ExpressionStatement","src":"27070:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27110:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"27124:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4242,"nodeType":"IfStatement","src":"27106:98:11","trueBody":{"id":4241,"nodeType":"Block","src":"27131:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:11","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"27187:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4236,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"27152:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4240,"nodeType":"RevertStatement","src":"27145:48:11"}]}}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"26669:312:11","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:11","nodeType":"FunctionDefinition","parameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"value","nameLocation":"27011:5:11","nodeType":"VariableDeclaration","scope":4244,"src":"27004:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4220,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:11"},"returnParameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:11","nodeType":"VariableDeclaration","scope":4244,"src":"27041:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4223,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:11"},"scope":4623,"src":"26986:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4269,"nodeType":"Block","src":"27607:150:11","statements":[{"expression":{"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"27617:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"27637:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4253,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:11","typeDescriptions":{}}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4258,"nodeType":"ExpressionStatement","src":"27617:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"27657:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"27671:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4268,"nodeType":"IfStatement","src":"27653:98:11","trueBody":{"id":4267,"nodeType":"Block","src":"27678:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:11","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"27734:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4262,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"27699:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4266,"nodeType":"RevertStatement","src":"27692:48:11"}]}}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"27216:312:11","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:11","nodeType":"FunctionDefinition","parameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"value","nameLocation":"27558:5:11","nodeType":"VariableDeclaration","scope":4270,"src":"27551:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4246,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:11"},"returnParameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:11","nodeType":"VariableDeclaration","scope":4270,"src":"27588:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4249,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:11"},"scope":4623,"src":"27533:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4295,"nodeType":"Block","src":"28147:148:11","statements":[{"expression":{"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"28157:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"28176:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4279,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:11","typeDescriptions":{}}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4284,"nodeType":"ExpressionStatement","src":"28157:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"28196:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"28210:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4294,"nodeType":"IfStatement","src":"28192:97:11","trueBody":{"id":4293,"nodeType":"Block","src":"28217:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"28272:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4288,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"28238:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4292,"nodeType":"RevertStatement","src":"28231:47:11"}]}}]},"documentation":{"id":4271,"nodeType":"StructuredDocumentation","src":"27763:307:11","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4296,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:11","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"value","nameLocation":"28099:5:11","nodeType":"VariableDeclaration","scope":4296,"src":"28092:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4272,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:11"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:11","nodeType":"VariableDeclaration","scope":4296,"src":"28129:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4275,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:11"},"scope":4623,"src":"28075:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4321,"nodeType":"Block","src":"28685:148:11","statements":[{"expression":{"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"28695:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"28714:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4305,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:11","typeDescriptions":{}}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4310,"nodeType":"ExpressionStatement","src":"28695:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"28734:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"28748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4320,"nodeType":"IfStatement","src":"28730:97:11","trueBody":{"id":4319,"nodeType":"Block","src":"28755:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:11","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"28810:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4314,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"28776:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4318,"nodeType":"RevertStatement","src":"28769:47:11"}]}}]},"documentation":{"id":4297,"nodeType":"StructuredDocumentation","src":"28301:307:11","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4322,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:11","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"value","nameLocation":"28637:5:11","nodeType":"VariableDeclaration","scope":4322,"src":"28630:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4298,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:11"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:11","nodeType":"VariableDeclaration","scope":4322,"src":"28667:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4301,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:11"},"scope":4623,"src":"28613:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4347,"nodeType":"Block","src":"29223:148:11","statements":[{"expression":{"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4330,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29233:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"29252:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4331,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:11","typeDescriptions":{}}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4336,"nodeType":"ExpressionStatement","src":"29233:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29272:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"29286:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4346,"nodeType":"IfStatement","src":"29268:97:11","trueBody":{"id":4345,"nodeType":"Block","src":"29293:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"29348:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4340,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"29314:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4344,"nodeType":"RevertStatement","src":"29307:47:11"}]}}]},"documentation":{"id":4323,"nodeType":"StructuredDocumentation","src":"28839:307:11","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:11","nodeType":"FunctionDefinition","parameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"value","nameLocation":"29175:5:11","nodeType":"VariableDeclaration","scope":4348,"src":"29168:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4324,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:11"},"returnParameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:11","nodeType":"VariableDeclaration","scope":4348,"src":"29205:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4327,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:11"},"scope":4623,"src":"29151:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4373,"nodeType":"Block","src":"29761:148:11","statements":[{"expression":{"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4356,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"29771:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"29790:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4357,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:11","typeDescriptions":{}}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4362,"nodeType":"ExpressionStatement","src":"29771:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"29810:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"29824:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4372,"nodeType":"IfStatement","src":"29806:97:11","trueBody":{"id":4371,"nodeType":"Block","src":"29831:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:11","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"29886:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4366,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"29852:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4370,"nodeType":"RevertStatement","src":"29845:47:11"}]}}]},"documentation":{"id":4349,"nodeType":"StructuredDocumentation","src":"29377:307:11","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4374,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:11","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"value","nameLocation":"29713:5:11","nodeType":"VariableDeclaration","scope":4374,"src":"29706:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4350,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:11"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:11","nodeType":"VariableDeclaration","scope":4374,"src":"29743:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4353,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:11"},"scope":4623,"src":"29689:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4399,"nodeType":"Block","src":"30299:148:11","statements":[{"expression":{"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"30309:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"30328:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4383,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:11","typeDescriptions":{}}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4388,"nodeType":"ExpressionStatement","src":"30309:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"30348:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"30362:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4398,"nodeType":"IfStatement","src":"30344:97:11","trueBody":{"id":4397,"nodeType":"Block","src":"30369:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"30424:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4392,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"30390:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4396,"nodeType":"RevertStatement","src":"30383:47:11"}]}}]},"documentation":{"id":4375,"nodeType":"StructuredDocumentation","src":"29915:307:11","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4400,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:11","nodeType":"FunctionDefinition","parameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"value","nameLocation":"30251:5:11","nodeType":"VariableDeclaration","scope":4400,"src":"30244:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4376,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:11"},"returnParameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:11","nodeType":"VariableDeclaration","scope":4400,"src":"30281:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4379,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:11"},"scope":4623,"src":"30227:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4425,"nodeType":"Block","src":"30837:148:11","statements":[{"expression":{"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"30847:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"30866:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4409,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:11","typeDescriptions":{}}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4414,"nodeType":"ExpressionStatement","src":"30847:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"30886:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"30900:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4424,"nodeType":"IfStatement","src":"30882:97:11","trueBody":{"id":4423,"nodeType":"Block","src":"30907:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:11","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"30962:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4418,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"30928:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4422,"nodeType":"RevertStatement","src":"30921:47:11"}]}}]},"documentation":{"id":4401,"nodeType":"StructuredDocumentation","src":"30453:307:11","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:11","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"mutability":"mutable","name":"value","nameLocation":"30789:5:11","nodeType":"VariableDeclaration","scope":4426,"src":"30782:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4402,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:11"},"returnParameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:11","nodeType":"VariableDeclaration","scope":4426,"src":"30819:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4405,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:11"},"scope":4623,"src":"30765:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4451,"nodeType":"Block","src":"31375:148:11","statements":[{"expression":{"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"31385:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"31404:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4435,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:11","typeDescriptions":{}}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4440,"nodeType":"ExpressionStatement","src":"31385:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"31424:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"31438:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4450,"nodeType":"IfStatement","src":"31420:97:11","trueBody":{"id":4449,"nodeType":"Block","src":"31445:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"31500:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4444,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"31466:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4448,"nodeType":"RevertStatement","src":"31459:47:11"}]}}]},"documentation":{"id":4427,"nodeType":"StructuredDocumentation","src":"30991:307:11","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4452,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:11","nodeType":"FunctionDefinition","parameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"value","nameLocation":"31327:5:11","nodeType":"VariableDeclaration","scope":4452,"src":"31320:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4428,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:11"},"returnParameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:11","nodeType":"VariableDeclaration","scope":4452,"src":"31357:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4431,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:11"},"scope":4623,"src":"31303:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4477,"nodeType":"Block","src":"31913:148:11","statements":[{"expression":{"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"31923:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"31942:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4461,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:11","typeDescriptions":{}}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4466,"nodeType":"ExpressionStatement","src":"31923:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"31962:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"31976:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4476,"nodeType":"IfStatement","src":"31958:97:11","trueBody":{"id":4475,"nodeType":"Block","src":"31983:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"32038:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4470,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"32004:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4474,"nodeType":"RevertStatement","src":"31997:47:11"}]}}]},"documentation":{"id":4453,"nodeType":"StructuredDocumentation","src":"31529:307:11","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4478,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:11","nodeType":"FunctionDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"value","nameLocation":"31865:5:11","nodeType":"VariableDeclaration","scope":4478,"src":"31858:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4454,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:11"},"returnParameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:11","nodeType":"VariableDeclaration","scope":4478,"src":"31895:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4457,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:11"},"scope":4623,"src":"31841:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4503,"nodeType":"Block","src":"32451:148:11","statements":[{"expression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"32461:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"32480:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4487,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:11","typeDescriptions":{}}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4492,"nodeType":"ExpressionStatement","src":"32461:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"32500:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"32514:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4502,"nodeType":"IfStatement","src":"32496:97:11","trueBody":{"id":4501,"nodeType":"Block","src":"32521:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"32576:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4496,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"32542:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4500,"nodeType":"RevertStatement","src":"32535:47:11"}]}}]},"documentation":{"id":4479,"nodeType":"StructuredDocumentation","src":"32067:307:11","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4504,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:11","nodeType":"FunctionDefinition","parameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"value","nameLocation":"32403:5:11","nodeType":"VariableDeclaration","scope":4504,"src":"32396:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4480,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:11"},"returnParameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:11","nodeType":"VariableDeclaration","scope":4504,"src":"32433:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4483,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:11"},"scope":4623,"src":"32379:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4529,"nodeType":"Block","src":"32989:148:11","statements":[{"expression":{"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"32999:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"33018:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4513,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:11","typeDescriptions":{}}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4518,"nodeType":"ExpressionStatement","src":"32999:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"33038:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"33052:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4528,"nodeType":"IfStatement","src":"33034:97:11","trueBody":{"id":4527,"nodeType":"Block","src":"33059:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"33114:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4522,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"33080:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4526,"nodeType":"RevertStatement","src":"33073:47:11"}]}}]},"documentation":{"id":4505,"nodeType":"StructuredDocumentation","src":"32605:307:11","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4530,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:11","nodeType":"FunctionDefinition","parameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"value","nameLocation":"32941:5:11","nodeType":"VariableDeclaration","scope":4530,"src":"32934:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4506,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:11"},"returnParameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4510,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:11","nodeType":"VariableDeclaration","scope":4530,"src":"32971:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4509,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:11"},"scope":4623,"src":"32917:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4555,"nodeType":"Block","src":"33527:148:11","statements":[{"expression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"33537:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"33556:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4539,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:11","typeDescriptions":{}}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4544,"nodeType":"ExpressionStatement","src":"33537:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"33576:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"33590:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4554,"nodeType":"IfStatement","src":"33572:97:11","trueBody":{"id":4553,"nodeType":"Block","src":"33597:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"33652:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4548,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"33618:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4552,"nodeType":"RevertStatement","src":"33611:47:11"}]}}]},"documentation":{"id":4531,"nodeType":"StructuredDocumentation","src":"33143:307:11","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:11","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"value","nameLocation":"33479:5:11","nodeType":"VariableDeclaration","scope":4556,"src":"33472:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4532,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:11"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:11","nodeType":"VariableDeclaration","scope":4556,"src":"33509:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4535,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:11"},"scope":4623,"src":"33455:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4581,"nodeType":"Block","src":"34058:146:11","statements":[{"expression":{"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"34068:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"34086:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4565,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:11","typeDescriptions":{}}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4570,"nodeType":"ExpressionStatement","src":"34068:24:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"34106:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"34120:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4580,"nodeType":"IfStatement","src":"34102:96:11","trueBody":{"id":4579,"nodeType":"Block","src":"34127:71:11","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"34181:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4574,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"34148:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4578,"nodeType":"RevertStatement","src":"34141:46:11"}]}}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"33681:302:11","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:11","nodeType":"FunctionDefinition","parameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"value","nameLocation":"34011:5:11","nodeType":"VariableDeclaration","scope":4582,"src":"34004:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4558,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:11"},"returnParameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:11","nodeType":"VariableDeclaration","scope":4582,"src":"34041:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4561,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:11"},"scope":4623,"src":"33988:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4611,"nodeType":"Block","src":"34444:250:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"34557:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4594,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4593,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:11","memberName":"max","nodeType":"MemberAccess","src":"34573:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4591,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:11","typeDescriptions":{}}},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4605,"nodeType":"IfStatement","src":"34553:105:11","trueBody":{"id":4604,"nodeType":"Block","src":"34592:66:11","statements":[{"errorCall":{"arguments":[{"id":4601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"34641:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4600,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"34613:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4603,"nodeType":"RevertStatement","src":"34606:41:11"}]}},{"expression":{"arguments":[{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"34681:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4606,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:11","typeDescriptions":{}}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4589,"id":4610,"nodeType":"Return","src":"34667:20:11"}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"34210:165:11","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4612,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:11","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"value","nameLocation":"34406:5:11","nodeType":"VariableDeclaration","scope":4612,"src":"34398:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:11"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4612,"src":"34436:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4587,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:11"},"scope":4623,"src":"34380:314:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4621,"nodeType":"Block","src":"34853:87:11","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:11","statements":[{"nodeType":"YulAssignment","src":"34902:22:11","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:11"},"nodeType":"YulFunctionCall","src":"34914:9:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:11"},"nodeType":"YulFunctionCall","src":"34907:17:11"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4615,"isOffset":false,"isSlot":false,"src":"34921:1:11","valueSize":1},{"declaration":4618,"isOffset":false,"isSlot":false,"src":"34902:1:11","valueSize":1}],"flags":["memory-safe"],"id":4620,"nodeType":"InlineAssembly","src":"34863:71:11"}]},"documentation":{"id":4613,"nodeType":"StructuredDocumentation","src":"34700:90:11","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4622,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:11","nodeType":"FunctionDefinition","parameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"b","nameLocation":"34816:1:11","nodeType":"VariableDeclaration","scope":4622,"src":"34811:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4614,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:11"},"returnParameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4618,"mutability":"mutable","name":"u","nameLocation":"34850:1:11","nodeType":"VariableDeclaration","scope":4622,"src":"34842:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4617,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:11"},"scope":4623,"src":"34795:145:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4624,"src":"769:34173:11","usedErrors":[2868,2873,2880,2885],"usedEvents":[]}],"src":"192:34751:11"},"id":11},"contracts/IPriceOracle.sol":{"ast":{"absolutePath":"contracts/IPriceOracle.sol","exportedSymbols":{"IPriceOracle":[4635]},"id":4636,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4625,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IPriceOracle","contractDependencies":[],"contractKind":"interface","documentation":{"id":4626,"nodeType":"StructuredDocumentation","src":"60:90:12","text":" @title IPriceOracle\n @notice Minimal interface for a price oracle contract"},"fullyImplemented":false,"id":4635,"linearizedBaseContracts":[4635],"name":"IPriceOracle","nameLocation":"162:12:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4627,"nodeType":"StructuredDocumentation","src":"182:170:12","text":" @notice Get the price of an asset\n @param asset The address of the asset\n @return The price of the asset (e.g., in USD, scaled by 1e18)"},"functionSelector":"b3596f07","id":4634,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetPrice","nameLocation":"367:13:12","nodeType":"FunctionDefinition","parameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"asset","nameLocation":"389:5:12","nodeType":"VariableDeclaration","scope":4634,"src":"381:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4628,"name":"address","nodeType":"ElementaryTypeName","src":"381:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"380:15:12"},"returnParameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4634,"src":"419:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"419:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"418:9:12"},"scope":4635,"src":"358:70:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4636,"src":"152:279:12","usedErrors":[],"usedEvents":[]}],"src":"33:400:12"},"id":12},"contracts/ITimelockController.sol":{"ast":{"absolutePath":"contracts/ITimelockController.sol","exportedSymbols":{"ITimelockController":[4669]},"id":4670,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4637,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"ITimelockController","contractDependencies":[],"contractKind":"interface","documentation":{"id":4638,"nodeType":"StructuredDocumentation","src":"60:105:13","text":" @title ITimelockController\n @notice Minimal interface for a timelock/ governance contract"},"fullyImplemented":false,"id":4669,"linearizedBaseContracts":[4669],"name":"ITimelockController","nameLocation":"177:19:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"204:491:13","text":" @notice Schedule a transaction for execution after a certain delay\n @param target The contract to call\n @param value Ether value to send (usually 0 unless you need to send ETH)\n @param data The encoded function call data\n @param predecessor A dependency for another scheduled operation, or bytes32(0) if none\n @param salt A unique salt to create an operation identifier\n @param delay The time to wait before execution is allowed"},"functionSelector":"01d5062a","id":4654,"implemented":false,"kind":"function","modifiers":[],"name":"schedule","nameLocation":"710:8:13","nodeType":"FunctionDefinition","parameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"target","nameLocation":"737:6:13","nodeType":"VariableDeclaration","scope":4654,"src":"729:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4640,"name":"address","nodeType":"ElementaryTypeName","src":"729:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4643,"mutability":"mutable","name":"value","nameLocation":"762:5:13","nodeType":"VariableDeclaration","scope":4654,"src":"754:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"754:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"data","nameLocation":"793:4:13","nodeType":"VariableDeclaration","scope":4654,"src":"778:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4644,"name":"bytes","nodeType":"ElementaryTypeName","src":"778:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"predecessor","nameLocation":"816:11:13","nodeType":"VariableDeclaration","scope":4654,"src":"808:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"808:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4649,"mutability":"mutable","name":"salt","nameLocation":"846:4:13","nodeType":"VariableDeclaration","scope":4654,"src":"838:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"838:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4651,"mutability":"mutable","name":"delay","nameLocation":"869:5:13","nodeType":"VariableDeclaration","scope":4654,"src":"861:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"861:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"718:163:13"},"returnParameters":{"id":4653,"nodeType":"ParameterList","parameters":[],"src":"890:0:13"},"scope":4669,"src":"701:190:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4655,"nodeType":"StructuredDocumentation","src":"899:352:13","text":" @notice Execute a scheduled transaction once the delay has passed\n @param target The contract to call\n @param value Ether value to send\n @param data The encoded function call data\n @param predecessor Must match the previously scheduled operation if any\n @param salt The same salt used in schedule"},"functionSelector":"134008d3","id":4668,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1266:7:13","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"target","nameLocation":"1292:6:13","nodeType":"VariableDeclaration","scope":4668,"src":"1284:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4656,"name":"address","nodeType":"ElementaryTypeName","src":"1284:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4659,"mutability":"mutable","name":"value","nameLocation":"1317:5:13","nodeType":"VariableDeclaration","scope":4668,"src":"1309:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4661,"mutability":"mutable","name":"data","nameLocation":"1348:4:13","nodeType":"VariableDeclaration","scope":4668,"src":"1333:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1333:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4663,"mutability":"mutable","name":"predecessor","nameLocation":"1371:11:13","nodeType":"VariableDeclaration","scope":4668,"src":"1363:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1363:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4665,"mutability":"mutable","name":"salt","nameLocation":"1401:4:13","nodeType":"VariableDeclaration","scope":4668,"src":"1393:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1393:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1273:139:13"},"returnParameters":{"id":4667,"nodeType":"ParameterList","parameters":[],"src":"1429:0:13"},"scope":4669,"src":"1257:173:13","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4670,"src":"167:1266:13","usedErrors":[],"usedEvents":[]}],"src":"33:1402:13"},"id":13},"contracts/LendingPoolNovel.sol":{"ast":{"absolutePath":"contracts/LendingPoolNovel.sol","exportedSymbols":{"AccessControl":[295],"Context":[1164],"ERC165":[1240],"ERC20":[1030],"IAccessControl":[378],"IERC20":[1108],"IERC20Errors":[420],"IERC20Metadata":[1134],"IPriceOracle":[4635],"ITimelockController":[4669],"LendingPoolNovel":[5256],"Math":[2858],"Panic":[1216],"ReceiptToken":[5324],"SafeCast":[4623]},"id":5257,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4671,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4672,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5257,"sourceUnit":1109,"src":"141:56:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":4673,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5257,"sourceUnit":2859,"src":"199:53:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ITimelockController.sol","file":"./ITimelockController.sol","id":4674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5257,"sourceUnit":4670,"src":"254:35:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IPriceOracle.sol","file":"./IPriceOracle.sol","id":4675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5257,"sourceUnit":4636,"src":"291:28:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ReceiptToken.sol","file":"./ReceiptToken.sol","id":4676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5257,"sourceUnit":5325,"src":"397:28:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IPriceOracle.sol","file":"./IPriceOracle.sol","id":4677,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5257,"sourceUnit":4636,"src":"463:28:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ITimelockController.sol","file":"./ITimelockController.sol","id":4678,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5257,"sourceUnit":4670,"src":"528:35:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LendingPoolNovel","contractDependencies":[],"contractKind":"contract","documentation":{"id":4679,"nodeType":"StructuredDocumentation","src":"608:193:14","text":" @title LendingPoolNovel\n @notice A simplified lending pool that can deposit, withdraw, borrow, and repay,\n         using a single collateral token and a single receipt token."},"fullyImplemented":true,"id":5256,"linearizedBaseContracts":[5256],"name":"LendingPoolNovel","nameLocation":"812:16:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4682,"libraryName":{"id":4680,"name":"Math","nameLocations":["842:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":2858,"src":"842:4:14"},"nodeType":"UsingForDirective","src":"836:23:14","typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"75b238fc","id":4687,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"984:10:14","nodeType":"VariableDeclaration","scope":5256,"src":"960:60:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"960:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1007:12:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":4684,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"997:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"997:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"429b62e5","id":4691,"mutability":"mutable","name":"admins","nameLocation":"1059:6:14","nodeType":"VariableDeclaration","scope":5256,"src":"1027:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":4690,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4688,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1027:24:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4689,"name":"bool","nodeType":"ElementaryTypeName","src":"1046:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"id":4694,"mutability":"mutable","name":"_timelock","nameLocation":"1166:9:14","nodeType":"VariableDeclaration","scope":5256,"src":"1137:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITimelockController_$4669","typeString":"contract ITimelockController"},"typeName":{"id":4693,"nodeType":"UserDefinedTypeName","pathNode":{"id":4692,"name":"ITimelockController","nameLocations":["1137:19:14"],"nodeType":"IdentifierPath","referencedDeclaration":4669,"src":"1137:19:14"},"referencedDeclaration":4669,"src":"1137:19:14","typeDescriptions":{"typeIdentifier":"t_contract$_ITimelockController_$4669","typeString":"contract ITimelockController"}},"visibility":"internal"},{"constant":false,"functionSelector":"5c975abb","id":4696,"mutability":"mutable","name":"paused","nameLocation":"1285:6:14","nodeType":"VariableDeclaration","scope":5256,"src":"1273:18:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4695,"name":"bool","nodeType":"ElementaryTypeName","src":"1273:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":true,"id":4699,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1411:11:14","nodeType":"VariableDeclaration","scope":5256,"src":"1386:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1425:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":4702,"mutability":"constant","name":"ENTERED","nameLocation":"1458:7:14","nodeType":"VariableDeclaration","scope":5256,"src":"1433:36:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":4704,"mutability":"mutable","name":"_status","nameLocation":"1492:7:14","nodeType":"VariableDeclaration","scope":5256,"src":"1476:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"1f68f20a","id":4706,"mutability":"mutable","name":"baseRate","nameLocation":"1667:8:14","nodeType":"VariableDeclaration","scope":5256,"src":"1652:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1652:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6c321c8a","id":4708,"mutability":"mutable","name":"utilizationRate","nameLocation":"1697:15:14","nodeType":"VariableDeclaration","scope":5256,"src":"1682:30:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1682:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a62b75a8","id":4710,"mutability":"mutable","name":"slope1","nameLocation":"1734:6:14","nodeType":"VariableDeclaration","scope":5256,"src":"1719:21:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1719:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fd2da339","id":4712,"mutability":"mutable","name":"kink","nameLocation":"1762:4:14","nodeType":"VariableDeclaration","scope":5256,"src":"1747:19:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b2016bd4","id":4715,"mutability":"mutable","name":"collateralToken","nameLocation":"1846:15:14","nodeType":"VariableDeclaration","scope":5256,"src":"1832:29:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"},"typeName":{"id":4714,"nodeType":"UserDefinedTypeName","pathNode":{"id":4713,"name":"IERC20","nameLocations":["1832:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1108,"src":"1832:6:14"},"referencedDeclaration":1108,"src":"1832:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"ec78e832","id":4718,"mutability":"mutable","name":"receiptToken","nameLocation":"1972:12:14","nodeType":"VariableDeclaration","scope":5256,"src":"1952:32:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ReceiptToken_$5324","typeString":"contract ReceiptToken"},"typeName":{"id":4717,"nodeType":"UserDefinedTypeName","pathNode":{"id":4716,"name":"ReceiptToken","nameLocations":["1952:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":5324,"src":"1952:12:14"},"referencedDeclaration":5324,"src":"1952:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_ReceiptToken_$5324","typeString":"contract ReceiptToken"}},"visibility":"public"},{"canonicalName":"LendingPoolNovel.UserPosition","id":4725,"members":[{"constant":false,"id":4720,"mutability":"mutable","name":"collateralAmount","nameLocation":"2074:16:14","nodeType":"VariableDeclaration","scope":4725,"src":"2066:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"2066:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4722,"mutability":"mutable","name":"borrowedAmount","nameLocation":"2109:14:14","nodeType":"VariableDeclaration","scope":4725,"src":"2101:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4721,"name":"uint256","nodeType":"ElementaryTypeName","src":"2101:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4724,"mutability":"mutable","name":"lastInterestBlock","nameLocation":"2142:17:14","nodeType":"VariableDeclaration","scope":4725,"src":"2134:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2134:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserPosition","nameLocation":"2042:12:14","nodeType":"StructDefinition","scope":5256,"src":"2035:132:14","visibility":"public"},{"constant":false,"functionSelector":"613cf420","id":4730,"mutability":"mutable","name":"userPositions","nameLocation":"2215:13:14","nodeType":"VariableDeclaration","scope":5256,"src":"2175:53:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserPosition_$4725_storage_$","typeString":"mapping(address => struct LendingPoolNovel.UserPosition)"},"typeName":{"id":4729,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4726,"name":"address","nodeType":"ElementaryTypeName","src":"2183:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2175:32:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserPosition_$4725_storage_$","typeString":"mapping(address => struct LendingPoolNovel.UserPosition)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4728,"nodeType":"UserDefinedTypeName","pathNode":{"id":4727,"name":"UserPosition","nameLocations":["2194:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4725,"src":"2194:12:14"},"referencedDeclaration":4725,"src":"2194:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition"}}},"visibility":"public"},{"constant":false,"functionSelector":"7f5007ed","id":4732,"mutability":"mutable","name":"collateralFactorBps","nameLocation":"2319:19:14","nodeType":"VariableDeclaration","scope":5256,"src":"2304:34:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2304:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e4864731","id":4734,"mutability":"mutable","name":"liquidationThresholdBps","nameLocation":"2360:23:14","nodeType":"VariableDeclaration","scope":5256,"src":"2345:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2630c12f","id":4737,"mutability":"mutable","name":"priceOracle","nameLocation":"2500:11:14","nodeType":"VariableDeclaration","scope":5256,"src":"2480:31:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracle_$4635","typeString":"contract IPriceOracle"},"typeName":{"id":4736,"nodeType":"UserDefinedTypeName","pathNode":{"id":4735,"name":"IPriceOracle","nameLocations":["2480:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4635,"src":"2480:12:14"},"referencedDeclaration":4635,"src":"2480:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracle_$4635","typeString":"contract IPriceOracle"}},"visibility":"public"},{"anonymous":false,"eventSelector":"90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15","id":4745,"name":"Deposit","nameLocation":"2602:7:14","nodeType":"EventDefinition","parameters":{"id":4744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2626:4:14","nodeType":"VariableDeclaration","scope":4745,"src":"2610:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4738,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4741,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2640:6:14","nodeType":"VariableDeclaration","scope":4745,"src":"2632:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4740,"name":"uint256","nodeType":"ElementaryTypeName","src":"2632:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4743,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2656:12:14","nodeType":"VariableDeclaration","scope":4745,"src":"2648:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2609:60:14"},"src":"2596:74:14"},{"anonymous":false,"eventSelector":"f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568","id":4753,"name":"Withdraw","nameLocation":"2682:8:14","nodeType":"EventDefinition","parameters":{"id":4752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2707:4:14","nodeType":"VariableDeclaration","scope":4753,"src":"2691:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4746,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4749,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2721:6:14","nodeType":"VariableDeclaration","scope":4753,"src":"2713:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"2713:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4751,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2737:12:14","nodeType":"VariableDeclaration","scope":4753,"src":"2729:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2729:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2690:60:14"},"src":"2676:75:14"},{"anonymous":false,"eventSelector":"cbc04eca7e9da35cb1393a6135a199ca52e450d5e9251cbd99f7847d33a36750","id":4759,"name":"Borrow","nameLocation":"2763:6:14","nodeType":"EventDefinition","parameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4755,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2786:4:14","nodeType":"VariableDeclaration","scope":4759,"src":"2770:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4754,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4757,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2800:6:14","nodeType":"VariableDeclaration","scope":4759,"src":"2792:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"2792:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2769:38:14"},"src":"2757:51:14"},{"anonymous":false,"eventSelector":"5c16de4f8b59bd9caf0f49a545f25819a895ed223294290b408242e72a594231","id":4765,"name":"Repay","nameLocation":"2820:5:14","nodeType":"EventDefinition","parameters":{"id":4764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4761,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2842:4:14","nodeType":"VariableDeclaration","scope":4765,"src":"2826:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4760,"name":"address","nodeType":"ElementaryTypeName","src":"2826:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4763,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2856:6:14","nodeType":"VariableDeclaration","scope":4765,"src":"2848:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2848:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2825:38:14"},"src":"2814:50:14"},{"anonymous":false,"eventSelector":"b6ed19cdf32fe732da504f7525ffbec01e43cf56a407bdcda3ab1120d756a259","id":4773,"name":"Liquidation","nameLocation":"2876:11:14","nodeType":"EventDefinition","parameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"indexed":true,"mutability":"mutable","name":"liquidator","nameLocation":"2914:10:14","nodeType":"VariableDeclaration","scope":4773,"src":"2898:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4766,"name":"address","nodeType":"ElementaryTypeName","src":"2898:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4769,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2951:4:14","nodeType":"VariableDeclaration","scope":4773,"src":"2935:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4768,"name":"address","nodeType":"ElementaryTypeName","src":"2935:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4771,"indexed":false,"mutability":"mutable","name":"collateralSeized","nameLocation":"2974:16:14","nodeType":"VariableDeclaration","scope":4773,"src":"2966:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2966:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2887:110:14"},"src":"2870:128:14"},{"anonymous":false,"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":4777,"name":"Paused","nameLocation":"3010:6:14","nodeType":"EventDefinition","parameters":{"id":4776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"3025:7:14","nodeType":"VariableDeclaration","scope":4777,"src":"3017:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4774,"name":"address","nodeType":"ElementaryTypeName","src":"3017:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3016:17:14"},"src":"3004:30:14"},{"anonymous":false,"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":4781,"name":"Unpaused","nameLocation":"3046:8:14","nodeType":"EventDefinition","parameters":{"id":4780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4779,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"3063:7:14","nodeType":"VariableDeclaration","scope":4781,"src":"3055:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4778,"name":"address","nodeType":"ElementaryTypeName","src":"3055:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3054:17:14"},"src":"3040:32:14"},{"anonymous":false,"eventSelector":"44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339","id":4785,"name":"AdminAdded","nameLocation":"3084:10:14","nodeType":"EventDefinition","parameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"3111:7:14","nodeType":"VariableDeclaration","scope":4785,"src":"3095:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4782,"name":"address","nodeType":"ElementaryTypeName","src":"3095:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3094:25:14"},"src":"3078:42:14"},{"anonymous":false,"eventSelector":"a3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f","id":4789,"name":"AdminRemoved","nameLocation":"3132:12:14","nodeType":"EventDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"3161:7:14","nodeType":"VariableDeclaration","scope":4789,"src":"3145:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4786,"name":"address","nodeType":"ElementaryTypeName","src":"3145:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3144:25:14"},"src":"3126:44:14"},{"body":{"id":4800,"nodeType":"Block","src":"3278:74:14","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4792,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"3297:6:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4795,"indexExpression":{"expression":{"id":4793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3304:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3308:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3304:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3297:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616e2061646d696e","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3317:14:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250","typeString":"literal_string \"Not an admin\""},"value":"Not an admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250","typeString":"literal_string \"Not an admin\""}],"id":4791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3289:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3289:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4798,"nodeType":"ExpressionStatement","src":"3289:43:14"},{"id":4799,"nodeType":"PlaceholderStatement","src":"3343:1:14"}]},"id":4801,"name":"onlyAdmin","nameLocation":"3266:9:14","nodeType":"ModifierDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[],"src":"3275:2:14"},"src":"3257:95:14","virtual":false,"visibility":"internal"},{"body":{"id":4819,"nodeType":"Block","src":"3384:153:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4804,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"3403:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4805,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"3414:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3403:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3423:33:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":4803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3395:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4809,"nodeType":"ExpressionStatement","src":"3395:62:14"},{"expression":{"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4810,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"3468:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4811,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"3478:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3468:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4813,"nodeType":"ExpressionStatement","src":"3468:17:14"},{"id":4814,"nodeType":"PlaceholderStatement","src":"3496:1:14"},{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4815,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"3508:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4816,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"3518:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3508:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"nodeType":"ExpressionStatement","src":"3508:21:14"}]},"id":4820,"name":"nonReentrant","nameLocation":"3369:12:14","nodeType":"ModifierDefinition","parameters":{"id":4802,"nodeType":"ParameterList","parameters":[],"src":"3381:2:14"},"src":"3360:177:14","virtual":false,"visibility":"internal"},{"body":{"id":4829,"nodeType":"Block","src":"3570:57:14","statements":[{"expression":{"arguments":[{"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3589:7:14","subExpression":{"id":4823,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"3590:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506175736564","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3598:8:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90","typeString":"literal_string \"Paused\""},"value":"Paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90","typeString":"literal_string \"Paused\""}],"id":4822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3581:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4827,"nodeType":"ExpressionStatement","src":"3581:26:14"},{"id":4828,"nodeType":"PlaceholderStatement","src":"3618:1:14"}]},"id":4830,"name":"whenNotPaused","nameLocation":"3554:13:14","nodeType":"ModifierDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[],"src":"3567:2:14"},"src":"3545:82:14","virtual":false,"visibility":"internal"},{"body":{"id":4915,"nodeType":"Block","src":"4109:563:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4848,"name":"_collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"4128:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4156:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4148:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4849,"name":"address","nodeType":"ElementaryTypeName","src":"4148:7:14","typeDescriptions":{}}},"id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4148:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4128:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6c6c61746572616c20746f6b656e","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4160:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2","typeString":"literal_string \"Invalid collateral token\""},"value":"Invalid collateral token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2","typeString":"literal_string \"Invalid collateral token\""}],"id":4847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4120:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4120:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4856,"nodeType":"ExpressionStatement","src":"4120:67:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4858,"name":"_priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"4206:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4230:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4222:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4859,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:14","typeDescriptions":{}}},"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4222:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4206:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7261636c65","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4234:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb","typeString":"literal_string \"Invalid oracle\""},"value":"Invalid oracle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb","typeString":"literal_string \"Invalid oracle\""}],"id":4857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4198:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4866,"nodeType":"ExpressionStatement","src":"4198:53:14"},{"expression":{"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4867,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"4264:6:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4870,"indexExpression":{"expression":{"id":4868,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4271:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4275:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4271:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4264:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4285:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4264:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4873,"nodeType":"ExpressionStatement","src":"4264:25:14"},{"eventCall":{"arguments":[{"expression":{"id":4875,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4316:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4320:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4316:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4874,"name":"AdminAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"4305:10:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4305:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4878,"nodeType":"EmitStatement","src":"4300:27:14"},{"expression":{"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4879,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"4340:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4880,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"4350:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4340:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4882,"nodeType":"ExpressionStatement","src":"4340:21:14"},{"expression":{"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4883,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"4374:15:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4885,"name":"_collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"4399:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4884,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4392:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1108_$","typeString":"type(contract IERC20)"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4392:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"src":"4374:42:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":4888,"nodeType":"ExpressionStatement","src":"4374:42:14"},{"expression":{"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4889,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"4427:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracle_$4635","typeString":"contract IPriceOracle"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4891,"name":"_priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"4454:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4890,"name":"IPriceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"4441:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceOracle_$4635_$","typeString":"type(contract IPriceOracle)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4441:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracle_$4635","typeString":"contract IPriceOracle"}},"src":"4427:40:14","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracle_$4635","typeString":"contract IPriceOracle"}},"id":4894,"nodeType":"ExpressionStatement","src":"4427:40:14"},{"expression":{"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4895,"name":"baseRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"4480:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4896,"name":"_baseRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"4491:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4480:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4898,"nodeType":"ExpressionStatement","src":"4480:20:14"},{"expression":{"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4899,"name":"slope1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"4511:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4900,"name":"_slope1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"4520:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4511:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4902,"nodeType":"ExpressionStatement","src":"4511:16:14"},{"expression":{"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4903,"name":"kink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"4538:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4904,"name":"_kink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"4545:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4538:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4906,"nodeType":"ExpressionStatement","src":"4538:12:14"},{"expression":{"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4907,"name":"collateralFactorBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"4561:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4908,"name":"_collateralFactorBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"4583:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4561:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4910,"nodeType":"ExpressionStatement","src":"4561:42:14"},{"expression":{"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4911,"name":"liquidationThresholdBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"4614:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4912,"name":"_liquidationThresholdBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"4640:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:50:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4914,"nodeType":"ExpressionStatement","src":"4614:50:14"}]},"id":4916,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"_collateralToken","nameLocation":"3894:16:14","nodeType":"VariableDeclaration","scope":4916,"src":"3886:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4831,"name":"address","nodeType":"ElementaryTypeName","src":"3886:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4834,"mutability":"mutable","name":"_priceOracle","nameLocation":"3929:12:14","nodeType":"VariableDeclaration","scope":4916,"src":"3921:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4833,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4836,"mutability":"mutable","name":"_baseRate","nameLocation":"3960:9:14","nodeType":"VariableDeclaration","scope":4916,"src":"3952:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4838,"mutability":"mutable","name":"_slope1","nameLocation":"3988:7:14","nodeType":"VariableDeclaration","scope":4916,"src":"3980:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4840,"mutability":"mutable","name":"_kink","nameLocation":"4014:5:14","nodeType":"VariableDeclaration","scope":4916,"src":"4006:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4839,"name":"uint256","nodeType":"ElementaryTypeName","src":"4006:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4842,"mutability":"mutable","name":"_collateralFactorBps","nameLocation":"4038:20:14","nodeType":"VariableDeclaration","scope":4916,"src":"4030:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"4030:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4844,"mutability":"mutable","name":"_liquidationThresholdBps","nameLocation":"4077:24:14","nodeType":"VariableDeclaration","scope":4916,"src":"4069:32:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4843,"name":"uint256","nodeType":"ElementaryTypeName","src":"4069:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3875:233:14"},"returnParameters":{"id":4846,"nodeType":"ParameterList","parameters":[],"src":"4109:0:14"},"scope":5256,"src":"3864:808:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4942,"nodeType":"Block","src":"4931:144:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4926,"name":"receiptToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"4958:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_ReceiptToken_$5324","typeString":"contract ReceiptToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ReceiptToken_$5324","typeString":"contract ReceiptToken"}],"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4950:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4924,"name":"address","nodeType":"ElementaryTypeName","src":"4950:7:14","typeDescriptions":{}}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4950:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4983:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4975:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4928,"name":"address","nodeType":"ElementaryTypeName","src":"4975:7:14","typeDescriptions":{}}},"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4975:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4950:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656365697074546f6b656e20616c726561647920736574","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4987:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b","typeString":"literal_string \"ReceiptToken already set\""},"value":"ReceiptToken already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b","typeString":"literal_string \"ReceiptToken already set\""}],"id":4923,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4942:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4942:72:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4935,"nodeType":"ExpressionStatement","src":"4942:72:14"},{"expression":{"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4936,"name":"receiptToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"5025:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_ReceiptToken_$5324","typeString":"contract ReceiptToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4938,"name":"_receiptToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"5053:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4937,"name":"ReceiptToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"5040:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ReceiptToken_$5324_$","typeString":"type(contract ReceiptToken)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5040:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ReceiptToken_$5324","typeString":"contract ReceiptToken"}},"src":"5025:42:14","typeDescriptions":{"typeIdentifier":"t_contract$_ReceiptToken_$5324","typeString":"contract ReceiptToken"}},"id":4941,"nodeType":"ExpressionStatement","src":"5025:42:14"}]},"functionSelector":"4d99f714","id":4943,"implemented":true,"kind":"function","modifiers":[{"id":4921,"kind":"modifierInvocation","modifierName":{"id":4920,"name":"onlyAdmin","nameLocations":["4921:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":4801,"src":"4921:9:14"},"nodeType":"ModifierInvocation","src":"4921:9:14"}],"name":"setReceiptToken","nameLocation":"4873:15:14","nodeType":"FunctionDefinition","parameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"_receiptToken","nameLocation":"4897:13:14","nodeType":"VariableDeclaration","scope":4943,"src":"4889:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4917,"name":"address","nodeType":"ElementaryTypeName","src":"4889:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4888:23:14"},"returnParameters":{"id":4922,"nodeType":"ParameterList","parameters":[],"src":"4931:0:14"},"scope":5256,"src":"4864:211:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5001,"nodeType":"Block","src":"5371:608:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"5390:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5399:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5390:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206465706f7369742030","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5402:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866","typeString":"literal_string \"Cannot deposit 0\""},"value":"Cannot deposit 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866","typeString":"literal_string \"Cannot deposit 0\""}],"id":4953,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5382:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5382:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4959,"nodeType":"ExpressionStatement","src":"5382:39:14"},{"expression":{"arguments":[{"expression":{"id":4963,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5525:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5529:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5525:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4967,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5545:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_LendingPoolNovel_$5256","typeString":"contract LendingPoolNovel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LendingPoolNovel_$5256","typeString":"contract LendingPoolNovel"}],"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5537:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4965,"name":"address","nodeType":"ElementaryTypeName","src":"5537:7:14","typeDescriptions":{}}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5537:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"5552:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4960,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"5496:15:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5512:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1107,"src":"5496:28:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4971,"nodeType":"ExpressionStatement","src":"5496:63:14"},{"expression":{"arguments":[{"expression":{"id":4975,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5747:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5751:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5747:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4977,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"5759:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4972,"name":"receiptToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"5729:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_ReceiptToken_$5324","typeString":"contract ReceiptToken"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5742:4:14","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":5306,"src":"5729:17:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5729:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4979,"nodeType":"ExpressionStatement","src":"5729:37:14"},{"assignments":[4982],"declarations":[{"constant":false,"id":4982,"mutability":"mutable","name":"position","nameLocation":"5836:8:14","nodeType":"VariableDeclaration","scope":5001,"src":"5815:29:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition"},"typeName":{"id":4981,"nodeType":"UserDefinedTypeName","pathNode":{"id":4980,"name":"UserPosition","nameLocations":["5815:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4725,"src":"5815:12:14"},"referencedDeclaration":4725,"src":"5815:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition"}},"visibility":"internal"}],"id":4987,"initialValue":{"baseExpression":{"id":4983,"name":"userPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"5847:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserPosition_$4725_storage_$","typeString":"mapping(address => struct LendingPoolNovel.UserPosition storage ref)"}},"id":4986,"indexExpression":{"expression":{"id":4984,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5861:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5865:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5861:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5847:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage","typeString":"struct LendingPoolNovel.UserPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5815:57:14"},{"expression":{"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4988,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"5883:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition storage pointer"}},"id":4990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5892:16:14","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":4720,"src":"5883:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4991,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"5912:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5883:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4993,"nodeType":"ExpressionStatement","src":"5883:35:14"},{"eventCall":{"arguments":[{"expression":{"id":4995,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5944:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5948:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5944:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4997,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"5956:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4998,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"5964:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4994,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"5936:7:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5936:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5000,"nodeType":"EmitStatement","src":"5931:40:14"}]},"documentation":{"id":4944,"nodeType":"StructuredDocumentation","src":"5235:61:14","text":"@notice Deposit collateral and receive 1:1 receipt tokens"},"functionSelector":"b6b55f25","id":5002,"implemented":true,"kind":"function","modifiers":[{"id":4949,"kind":"modifierInvocation","modifierName":{"id":4948,"name":"whenNotPaused","nameLocations":["5344:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":4830,"src":"5344:13:14"},"nodeType":"ModifierInvocation","src":"5344:13:14"},{"id":4951,"kind":"modifierInvocation","modifierName":{"id":4950,"name":"nonReentrant","nameLocations":["5358:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4820,"src":"5358:12:14"},"nodeType":"ModifierInvocation","src":"5358:12:14"}],"name":"deposit","nameLocation":"5311:7:14","nodeType":"FunctionDefinition","parameters":{"id":4947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4946,"mutability":"mutable","name":"amount","nameLocation":"5327:6:14","nodeType":"VariableDeclaration","scope":5002,"src":"5319:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4945,"name":"uint256","nodeType":"ElementaryTypeName","src":"5319:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5318:16:14"},"returnParameters":{"id":4952,"nodeType":"ParameterList","parameters":[],"src":"5371:0:14"},"scope":5256,"src":"5302:677:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5075,"nodeType":"Block","src":"6120:823:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6139:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6148:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6139:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736861726520616d6f756e74","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6151:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc","typeString":"literal_string \"Invalid share amount\""},"value":"Invalid share amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc","typeString":"literal_string \"Invalid share amount\""}],"id":5012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6131:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5018,"nodeType":"ExpressionStatement","src":"6131:43:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5022,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6277:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6281:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6277:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5020,"name":"receiptToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"6254:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_ReceiptToken_$5324","typeString":"contract ReceiptToken"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6267:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":616,"src":"6254:22:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6254:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5025,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6292:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6254:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420736861726573","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6300:21:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","typeString":"literal_string \"Insufficient shares\""},"value":"Insufficient shares"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","typeString":"literal_string \"Insufficient shares\""}],"id":5019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6246:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6246:76:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5029,"nodeType":"ExpressionStatement","src":"6246:76:14"},{"expression":{"arguments":[{"expression":{"id":5033,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6490:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6494:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6490:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5035,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6502:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5030,"name":"receiptToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"6472:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_ReceiptToken_$5324","typeString":"contract ReceiptToken"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6485:4:14","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":5323,"src":"6472:17:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6472:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5037,"nodeType":"ExpressionStatement","src":"6472:37:14"},{"assignments":[5040],"declarations":[{"constant":false,"id":5040,"mutability":"mutable","name":"position","nameLocation":"6605:8:14","nodeType":"VariableDeclaration","scope":5075,"src":"6584:29:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition"},"typeName":{"id":5039,"nodeType":"UserDefinedTypeName","pathNode":{"id":5038,"name":"UserPosition","nameLocations":["6584:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4725,"src":"6584:12:14"},"referencedDeclaration":4725,"src":"6584:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition"}},"visibility":"internal"}],"id":5045,"initialValue":{"baseExpression":{"id":5041,"name":"userPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"6616:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserPosition_$4725_storage_$","typeString":"mapping(address => struct LendingPoolNovel.UserPosition storage ref)"}},"id":5044,"indexExpression":{"expression":{"id":5042,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6630:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6634:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6630:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6616:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage","typeString":"struct LendingPoolNovel.UserPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6584:57:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5047,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"6660:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition storage pointer"}},"id":5048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6669:16:14","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":4720,"src":"6660:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5049,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6689:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6660:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820636f6c6c61746572616c","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6697:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad","typeString":"literal_string \"Not enough collateral\""},"value":"Not enough collateral"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad","typeString":"literal_string \"Not enough collateral\""}],"id":5046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6652:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5053,"nodeType":"ExpressionStatement","src":"6652:69:14"},{"expression":{"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5054,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"6732:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition storage pointer"}},"id":5056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6741:16:14","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":4720,"src":"6732:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5057,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6761:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6732:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5059,"nodeType":"ExpressionStatement","src":"6732:35:14"},{"expression":{"arguments":[{"expression":{"id":5063,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6862:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6866:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6862:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5065,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6874:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5060,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"6837:15:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6853:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"6837:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6837:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5067,"nodeType":"ExpressionStatement","src":"6837:44:14"},{"eventCall":{"arguments":[{"expression":{"id":5069,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6908:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6912:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6908:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5071,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6920:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5072,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6928:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5068,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"6899:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6899:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5074,"nodeType":"EmitStatement","src":"6894:41:14"}]},"documentation":{"id":5003,"nodeType":"StructuredDocumentation","src":"5987:57:14","text":"@notice Withdraw collateral by burning receipt tokens"},"functionSelector":"2e1a7d4d","id":5076,"implemented":true,"kind":"function","modifiers":[{"id":5008,"kind":"modifierInvocation","modifierName":{"id":5007,"name":"whenNotPaused","nameLocations":["6093:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":4830,"src":"6093:13:14"},"nodeType":"ModifierInvocation","src":"6093:13:14"},{"id":5010,"kind":"modifierInvocation","modifierName":{"id":5009,"name":"nonReentrant","nameLocations":["6107:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4820,"src":"6107:12:14"},"nodeType":"ModifierInvocation","src":"6107:12:14"}],"name":"withdraw","nameLocation":"6059:8:14","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5005,"mutability":"mutable","name":"shares","nameLocation":"6076:6:14","nodeType":"VariableDeclaration","scope":5076,"src":"6068:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"6068:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6067:16:14"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[],"src":"6120:0:14"},"scope":5256,"src":"6050:893:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5140,"nodeType":"Block","src":"7083:692:14","statements":[{"assignments":[5088],"declarations":[{"constant":false,"id":5088,"mutability":"mutable","name":"position","nameLocation":"7115:8:14","nodeType":"VariableDeclaration","scope":5140,"src":"7094:29:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition"},"typeName":{"id":5087,"nodeType":"UserDefinedTypeName","pathNode":{"id":5086,"name":"UserPosition","nameLocations":["7094:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4725,"src":"7094:12:14"},"referencedDeclaration":4725,"src":"7094:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition"}},"visibility":"internal"}],"id":5093,"initialValue":{"baseExpression":{"id":5089,"name":"userPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"7126:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserPosition_$4725_storage_$","typeString":"mapping(address => struct LendingPoolNovel.UserPosition storage ref)"}},"id":5092,"indexExpression":{"expression":{"id":5090,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7140:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7144:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7140:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7126:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage","typeString":"struct LendingPoolNovel.UserPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7094:57:14"},{"assignments":[5095],"declarations":[{"constant":false,"id":5095,"mutability":"mutable","name":"collateralValue","nameLocation":"7170:15:14","nodeType":"VariableDeclaration","scope":5140,"src":"7162:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint256","nodeType":"ElementaryTypeName","src":"7162:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5100,"initialValue":{"arguments":[{"expression":{"id":5097,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"7207:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition storage pointer"}},"id":5098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7216:16:14","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":4720,"src":"7207:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5096,"name":"getCollateralValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"7188:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7188:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7162:71:14"},{"assignments":[5102],"declarations":[{"constant":false,"id":5102,"mutability":"mutable","name":"maxBorrow","nameLocation":"7348:9:14","nodeType":"VariableDeclaration","scope":5140,"src":"7340:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"7340:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5109,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5103,"name":"collateralValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"7361:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5104,"name":"collateralFactorBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"7379:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7361:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7360:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7402:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7360:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7340:67:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5111,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"7426:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition storage pointer"}},"id":5112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7435:14:14","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"7426:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5113,"name":"borrowAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"7452:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7426:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5115,"name":"maxBorrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"7468:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7426:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578636565647320626f72726f77206c696d6974","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7479:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9","typeString":"literal_string \"Exceeds borrow limit\""},"value":"Exceeds borrow limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9","typeString":"literal_string \"Exceeds borrow limit\""}],"id":5110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7418:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7418:84:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5119,"nodeType":"ExpressionStatement","src":"7418:84:14"},{"expression":{"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5120,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"7552:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition storage pointer"}},"id":5122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7561:14:14","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"7552:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5123,"name":"borrowAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"7579:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7552:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5125,"nodeType":"ExpressionStatement","src":"7552:39:14"},{"expression":{"arguments":[{"expression":{"id":5129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7692:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7696:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7692:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5131,"name":"borrowAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"7704:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5126,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"7667:15:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7683:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"7667:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7667:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5133,"nodeType":"ExpressionStatement","src":"7667:50:14"},{"eventCall":{"arguments":[{"expression":{"id":5135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7742:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7746:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7742:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5137,"name":"borrowAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"7754:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5134,"name":"Borrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"7735:6:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5139,"nodeType":"EmitStatement","src":"7730:37:14"}]},"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"6951:52:14","text":"@notice Borrow up to the user's collateral limit"},"functionSelector":"c5ebeaec","id":5141,"implemented":true,"kind":"function","modifiers":[{"id":5082,"kind":"modifierInvocation","modifierName":{"id":5081,"name":"whenNotPaused","nameLocations":["7056:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":4830,"src":"7056:13:14"},"nodeType":"ModifierInvocation","src":"7056:13:14"},{"id":5084,"kind":"modifierInvocation","modifierName":{"id":5083,"name":"nonReentrant","nameLocations":["7070:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4820,"src":"7070:12:14"},"nodeType":"ModifierInvocation","src":"7070:12:14"}],"name":"borrow","nameLocation":"7018:6:14","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"borrowAmount","nameLocation":"7033:12:14","nodeType":"VariableDeclaration","scope":5141,"src":"7025:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"7025:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7024:22:14"},"returnParameters":{"id":5085,"nodeType":"ParameterList","parameters":[],"src":"7083:0:14"},"scope":5256,"src":"7009:766:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5202,"nodeType":"Block","src":"7894:544:14","statements":[{"assignments":[5153],"declarations":[{"constant":false,"id":5153,"mutability":"mutable","name":"position","nameLocation":"7926:8:14","nodeType":"VariableDeclaration","scope":5202,"src":"7905:29:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition"},"typeName":{"id":5152,"nodeType":"UserDefinedTypeName","pathNode":{"id":5151,"name":"UserPosition","nameLocations":["7905:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4725,"src":"7905:12:14"},"referencedDeclaration":4725,"src":"7905:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition"}},"visibility":"internal"}],"id":5158,"initialValue":{"baseExpression":{"id":5154,"name":"userPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"7937:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserPosition_$4725_storage_$","typeString":"mapping(address => struct LendingPoolNovel.UserPosition storage ref)"}},"id":5157,"indexExpression":{"expression":{"id":5155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7951:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7955:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7951:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7937:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage","typeString":"struct LendingPoolNovel.UserPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7905:57:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5160,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"7981:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition storage pointer"}},"id":5161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7990:14:14","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"7981:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8007:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7981:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2064656274","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8010:9:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c","typeString":"literal_string \"No debt\""},"value":"No debt"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c","typeString":"literal_string \"No debt\""}],"id":5159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7973:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7973:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5166,"nodeType":"ExpressionStatement","src":"7973:47:14"},{"assignments":[5168],"declarations":[{"constant":false,"id":5168,"mutability":"mutable","name":"actualRepay","nameLocation":"8041:11:14","nodeType":"VariableDeclaration","scope":5202,"src":"8033:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5167,"name":"uint256","nodeType":"ElementaryTypeName","src":"8033:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5177,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5169,"name":"repayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"8055:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5170,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"8069:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition storage pointer"}},"id":5171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8078:14:14","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"8069:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8055:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5175,"name":"repayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"8147:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8055:103:14","trueExpression":{"expression":{"id":5173,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"8108:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition storage pointer"}},"id":5174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8117:14:14","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"8108:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8033:125:14"},{"expression":{"arguments":[{"expression":{"id":5181,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8250:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8254:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8250:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5185,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8270:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_LendingPoolNovel_$5256","typeString":"contract LendingPoolNovel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LendingPoolNovel_$5256","typeString":"contract LendingPoolNovel"}],"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8262:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5183,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:14","typeDescriptions":{}}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8262:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5187,"name":"actualRepay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"8277:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5178,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"8221:15:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8237:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1107,"src":"8221:28:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8221:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5189,"nodeType":"ExpressionStatement","src":"8221:68:14"},{"expression":{"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5190,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"8344:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserPosition_$4725_storage_ptr","typeString":"struct LendingPoolNovel.UserPosition storage pointer"}},"id":5192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8353:14:14","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"8344:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5193,"name":"actualRepay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"8371:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5195,"nodeType":"ExpressionStatement","src":"8344:38:14"},{"eventCall":{"arguments":[{"expression":{"id":5197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8406:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8410:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8406:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5199,"name":"actualRepay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"8418:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5196,"name":"Repay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"8400:5:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8400:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5201,"nodeType":"EmitStatement","src":"8395:35:14"}]},"documentation":{"id":5142,"nodeType":"StructuredDocumentation","src":"7783:33:14","text":"@notice Repay borrowed tokens"},"functionSelector":"371fd8e6","id":5203,"implemented":true,"kind":"function","modifiers":[{"id":5147,"kind":"modifierInvocation","modifierName":{"id":5146,"name":"whenNotPaused","nameLocations":["7867:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":4830,"src":"7867:13:14"},"nodeType":"ModifierInvocation","src":"7867:13:14"},{"id":5149,"kind":"modifierInvocation","modifierName":{"id":5148,"name":"nonReentrant","nameLocations":["7881:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4820,"src":"7881:12:14"},"nodeType":"ModifierInvocation","src":"7881:12:14"}],"name":"repay","nameLocation":"7831:5:14","nodeType":"FunctionDefinition","parameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"repayAmount","nameLocation":"7845:11:14","nodeType":"VariableDeclaration","scope":5203,"src":"7837:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5143,"name":"uint256","nodeType":"ElementaryTypeName","src":"7837:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7836:21:14"},"returnParameters":{"id":5150,"nodeType":"ParameterList","parameters":[],"src":"7894:0:14"},"scope":5256,"src":"7822:616:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5224,"nodeType":"Block","src":"8668:307:14","statements":[{"assignments":[5211],"declarations":[{"constant":false,"id":5211,"mutability":"mutable","name":"price","nameLocation":"8793:5:14","nodeType":"VariableDeclaration","scope":5224,"src":"8785:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5210,"name":"uint256","nodeType":"ElementaryTypeName","src":"8785:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5219,"initialValue":{"arguments":[{"arguments":[{"id":5216,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"8835:15:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}],"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8827:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5214,"name":"address","nodeType":"ElementaryTypeName","src":"8827:7:14","typeDescriptions":{}}},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8827:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5212,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"8801:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceOracle_$4635","typeString":"contract IPriceOracle"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8813:13:14","memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":4634,"src":"8801:25:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8801:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8785:67:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"collatAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"8947:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5221,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"8962:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8947:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5209,"id":5223,"nodeType":"Return","src":"8940:27:14"}]},"functionSelector":"82fee08f","id":5225,"implemented":true,"kind":"function","modifiers":[],"name":"getCollateralValue","nameLocation":"8597:18:14","nodeType":"FunctionDefinition","parameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"collatAmount","nameLocation":"8624:12:14","nodeType":"VariableDeclaration","scope":5225,"src":"8616:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8615:22:14"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5225,"src":"8659:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5207,"name":"uint256","nodeType":"ElementaryTypeName","src":"8659:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8658:9:14"},"scope":5256,"src":"8588:387:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5239,"nodeType":"Block","src":"9019:66:14","statements":[{"expression":{"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5230,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"9030:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9039:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9030:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5233,"nodeType":"ExpressionStatement","src":"9030:13:14"},{"eventCall":{"arguments":[{"expression":{"id":5235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9066:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9070:6:14","memberName":"sender","nodeType":"MemberAccess","src":"9066:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5234,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"9059:6:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9059:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5238,"nodeType":"EmitStatement","src":"9054:23:14"}]},"functionSelector":"8456cb59","id":5240,"implemented":true,"kind":"function","modifiers":[{"id":5228,"kind":"modifierInvocation","modifierName":{"id":5227,"name":"onlyAdmin","nameLocations":["9009:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":4801,"src":"9009:9:14"},"nodeType":"ModifierInvocation","src":"9009:9:14"}],"name":"pause","nameLocation":"8992:5:14","nodeType":"FunctionDefinition","parameters":{"id":5226,"nodeType":"ParameterList","parameters":[],"src":"8997:2:14"},"returnParameters":{"id":5229,"nodeType":"ParameterList","parameters":[],"src":"9019:0:14"},"scope":5256,"src":"8983:102:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5254,"nodeType":"Block","src":"9131:69:14","statements":[{"expression":{"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5245,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"9142:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9151:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9142:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5248,"nodeType":"ExpressionStatement","src":"9142:14:14"},{"eventCall":{"arguments":[{"expression":{"id":5250,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9181:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9185:6:14","memberName":"sender","nodeType":"MemberAccess","src":"9181:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5249,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"9172:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9172:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5253,"nodeType":"EmitStatement","src":"9167:25:14"}]},"functionSelector":"3f4ba83a","id":5255,"implemented":true,"kind":"function","modifiers":[{"id":5243,"kind":"modifierInvocation","modifierName":{"id":5242,"name":"onlyAdmin","nameLocations":["9121:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":4801,"src":"9121:9:14"},"nodeType":"ModifierInvocation","src":"9121:9:14"}],"name":"unpause","nameLocation":"9102:7:14","nodeType":"FunctionDefinition","parameters":{"id":5241,"nodeType":"ParameterList","parameters":[],"src":"9109:2:14"},"returnParameters":{"id":5244,"nodeType":"ParameterList","parameters":[],"src":"9131:0:14"},"scope":5256,"src":"9093:107:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5257,"src":"803:8400:14","usedErrors":[],"usedEvents":[4745,4753,4759,4765,4773,4777,4781,4785,4789]}],"src":"33:9170:14"},"id":14},"contracts/ReceiptToken.sol":{"ast":{"absolutePath":"contracts/ReceiptToken.sol","exportedSymbols":{"AccessControl":[295],"Context":[1164],"ERC165":[1240],"ERC20":[1030],"IAccessControl":[378],"IERC20":[1108],"IERC20Errors":[420],"IERC20Metadata":[1134],"ReceiptToken":[5324]},"id":5325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5258,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5325,"sourceUnit":1031,"src":"60:55:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":5260,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5325,"sourceUnit":296,"src":"117:58:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5262,"name":"ERC20","nameLocations":["374:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1030,"src":"374:5:15"},"id":5263,"nodeType":"InheritanceSpecifier","src":"374:5:15"},{"baseName":{"id":5264,"name":"AccessControl","nameLocations":["381:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"381:13:15"},"id":5265,"nodeType":"InheritanceSpecifier","src":"381:13:15"}],"canonicalName":"ReceiptToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":5261,"nodeType":"StructuredDocumentation","src":"179:168:15","text":" @title ReceiptToken\n @notice An ERC20 representing user deposits in a lending pool.\n         Uses AccessControl for role-based mint/burn permissions."},"fullyImplemented":true,"id":5324,"linearizedBaseContracts":[5324,295,1240,1252,378,1030,420,1134,1108,1164],"name":"ReceiptToken","nameLocation":"358:12:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":5270,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"426:11:15","nodeType":"VariableDeclaration","scope":5324,"src":"402:62:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"402:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"450:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":5267,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"440:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"440:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"282c51f3","id":5275,"mutability":"constant","name":"BURNER_ROLE","nameLocation":"495:11:15","nodeType":"VariableDeclaration","scope":5324,"src":"471:62:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"471:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4255524e45525f524f4c45","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"519:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848","typeString":"literal_string \"BURNER_ROLE\""},"value":"BURNER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848","typeString":"literal_string \"BURNER_ROLE\""}],"id":5272,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"509:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"509:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":5288,"nodeType":"Block","src":"587:117:15","statements":[{"expression":{"arguments":[{"id":5283,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"665:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5284,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"685:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"689:6:15","memberName":"sender","nodeType":"MemberAccess","src":"685:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5282,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"654:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"654:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5287,"nodeType":"ExpressionStatement","src":"654:42:15"}]},"id":5289,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"5265636569707420546f6b656e","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"562:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ec922e69cbefd464297f94c26965a0351b5a2c0ca0f43c6ddde06849fad1c9d","typeString":"literal_string \"Receipt Token\""},"value":"Receipt Token"},{"hexValue":"72544b4e","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"579:6:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6913dbe2574a3794ae8e505aaa2ba220e941558f3dd15931e1e15866894dbe21","typeString":"literal_string \"rTKN\""},"value":"rTKN"}],"id":5280,"kind":"baseConstructorSpecifier","modifierName":{"id":5277,"name":"ERC20","nameLocations":["556:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1030,"src":"556:5:15"},"nodeType":"ModifierInvocation","src":"556:30:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5276,"nodeType":"ParameterList","parameters":[],"src":"553:2:15"},"returnParameters":{"id":5281,"nodeType":"ParameterList","parameters":[],"src":"587:0:15"},"scope":5324,"src":"542:162:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5305,"nodeType":"Block","src":"882:36:15","statements":[{"expression":{"arguments":[{"id":5301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"899:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"903:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5300,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"893:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"893:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5304,"nodeType":"ExpressionStatement","src":"893:17:15"}]},"documentation":{"id":5290,"nodeType":"StructuredDocumentation","src":"712:91:15","text":" @notice Mint tokens to `to`. Only addresses with MINTER_ROLE can call."},"functionSelector":"40c10f19","id":5306,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5297,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"869:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5298,"kind":"modifierInvocation","modifierName":{"id":5296,"name":"onlyRole","nameLocations":["860:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"860:8:15"},"nodeType":"ModifierInvocation","src":"860:21:15"}],"name":"mint","nameLocation":"818:4:15","nodeType":"FunctionDefinition","parameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"to","nameLocation":"831:2:15","nodeType":"VariableDeclaration","scope":5306,"src":"823:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5291,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5294,"mutability":"mutable","name":"amount","nameLocation":"843:6:15","nodeType":"VariableDeclaration","scope":5306,"src":"835:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5293,"name":"uint256","nodeType":"ElementaryTypeName","src":"835:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"822:28:15"},"returnParameters":{"id":5299,"nodeType":"ParameterList","parameters":[],"src":"882:0:15"},"scope":5324,"src":"809:109:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5322,"nodeType":"Block","src":"1102:38:15","statements":[{"expression":{"arguments":[{"id":5318,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"1119:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5319,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"1125:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5317,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1113:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1113:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5321,"nodeType":"ExpressionStatement","src":"1113:19:15"}]},"documentation":{"id":5307,"nodeType":"StructuredDocumentation","src":"926:95:15","text":" @notice Burn tokens from `from`. Only addresses with BURNER_ROLE can call."},"functionSelector":"9dc29fac","id":5323,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5314,"name":"BURNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"1089:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5315,"kind":"modifierInvocation","modifierName":{"id":5313,"name":"onlyRole","nameLocations":["1080:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1080:8:15"},"nodeType":"ModifierInvocation","src":"1080:21:15"}],"name":"burn","nameLocation":"1036:4:15","nodeType":"FunctionDefinition","parameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"from","nameLocation":"1049:4:15","nodeType":"VariableDeclaration","scope":5323,"src":"1041:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5308,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5311,"mutability":"mutable","name":"amount","nameLocation":"1063:6:15","nodeType":"VariableDeclaration","scope":5323,"src":"1055:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1040:30:15"},"returnParameters":{"id":5316,"nodeType":"ParameterList","parameters":[],"src":"1102:0:15"},"scope":5324,"src":"1027:113:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5325,"src":"349:794:15","usedErrors":[305,308,390,395,400,409,414,419],"usedEvents":[317,326,335,1042,1051]}],"src":"33:1112:15"},"id":15},"contracts/TimeLockController.sol":{"ast":{"absolutePath":"contracts/TimeLockController.sol","exportedSymbols":{"ITimelockController":[4669],"TimelockController":[5474]},"id":5475,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5326,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:16"},{"absolutePath":"contracts/ITimelockController.sol","file":"./ITimelockController.sol","id":5327,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5475,"sourceUnit":4670,"src":"60:35:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5329,"name":"ITimelockController","nameLocations":["358:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":4669,"src":"358:19:16"},"id":5330,"nodeType":"InheritanceSpecifier","src":"358:19:16"}],"canonicalName":"TimelockController","contractDependencies":[],"contractKind":"contract","documentation":{"id":5328,"nodeType":"StructuredDocumentation","src":"99:226:16","text":" @title TimelockController (Minimal Example)\n @notice A simple timelock that schedules and executes calls after a delay.\n         For a real system, consider using OpenZeppelin’s TimelockController instead."},"fullyImplemented":true,"id":5474,"linearizedBaseContracts":[5474,4669],"name":"TimelockController","nameLocation":"336:18:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b5872958","id":5334,"mutability":"mutable","name":"timestamps","nameLocation":"499:10:16","nodeType":"VariableDeclaration","scope":5474,"src":"464:45:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":5333,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"472:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"464:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5332,"name":"uint256","nodeType":"ElementaryTypeName","src":"483:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c63c4e9b","id":5336,"mutability":"mutable","name":"minDelay","nameLocation":"581:8:16","nodeType":"VariableDeclaration","scope":5474,"src":"566:23:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5335,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":5346,"nodeType":"Block","src":"727:39:16","statements":[{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5342,"name":"minDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"738:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5343,"name":"_minDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"749:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"738:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5345,"nodeType":"ExpressionStatement","src":"738:20:16"}]},"documentation":{"id":5337,"nodeType":"StructuredDocumentation","src":"598:92:16","text":" @param _minDelay The minimum number of seconds to wait before execution"},"id":5347,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5339,"mutability":"mutable","name":"_minDelay","nameLocation":"716:9:16","nodeType":"VariableDeclaration","scope":5347,"src":"708:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5338,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"707:19:16"},"returnParameters":{"id":5341,"nodeType":"ParameterList","parameters":[],"src":"727:0:16"},"scope":5474,"src":"696:70:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4654],"body":{"id":5402,"nodeType":"Block","src":"1055:449:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"1074:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5366,"name":"minDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"1083:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696d656c6f636b436f6e74726f6c6c65723a20696e73756666696369656e742064656c6179","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1093:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca","typeString":"literal_string \"TimelockController: insufficient delay\""},"value":"TimelockController: insufficient delay"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca","typeString":"literal_string \"TimelockController: insufficient delay\""}],"id":5364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1066:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1066:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5370,"nodeType":"ExpressionStatement","src":"1066:68:16"},{"assignments":[5372],"declarations":[{"constant":false,"id":5372,"mutability":"mutable","name":"id","nameLocation":"1236:2:16","nodeType":"VariableDeclaration","scope":5402,"src":"1228:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1228:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5383,"initialValue":{"arguments":[{"arguments":[{"id":5376,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"1262:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"1270:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5378,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"1277:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":5379,"name":"predecessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"1283:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5380,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"1296:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5374,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1251:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1255:6:16","memberName":"encode","nodeType":"MemberAccess","src":"1251:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1251:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5373,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1241:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1241:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1228:74:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5385,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"1321:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5387,"indexExpression":{"id":5386,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"1332:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1321:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1339:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1321:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696d656c6f636b436f6e74726f6c6c65723a20616c7265616479207363686564756c6564","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1342:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b","typeString":"literal_string \"TimelockController: already scheduled\""},"value":"TimelockController: already scheduled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b","typeString":"literal_string \"TimelockController: already scheduled\""}],"id":5384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1313:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1313:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5392,"nodeType":"ExpressionStatement","src":"1313:69:16"},{"expression":{"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5393,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"1456:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5395,"indexExpression":{"id":5394,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"1467:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1456:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5396,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1473:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1479:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"1473:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5398,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"1491:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1473:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1456:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5401,"nodeType":"ExpressionStatement","src":"1456:40:16"}]},"documentation":{"id":5348,"nodeType":"StructuredDocumentation","src":"774:76:16","text":" @notice Schedule a function call after the given delay."},"functionSelector":"01d5062a","id":5403,"implemented":true,"kind":"function","modifiers":[],"name":"schedule","nameLocation":"865:8:16","nodeType":"FunctionDefinition","overrides":{"id":5362,"nodeType":"OverrideSpecifier","overrides":[],"src":"1046:8:16"},"parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"target","nameLocation":"892:6:16","nodeType":"VariableDeclaration","scope":5403,"src":"884:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5349,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5352,"mutability":"mutable","name":"value","nameLocation":"917:5:16","nodeType":"VariableDeclaration","scope":5403,"src":"909:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5354,"mutability":"mutable","name":"data","nameLocation":"948:4:16","nodeType":"VariableDeclaration","scope":5403,"src":"933:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5353,"name":"bytes","nodeType":"ElementaryTypeName","src":"933:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5356,"mutability":"mutable","name":"predecessor","nameLocation":"971:11:16","nodeType":"VariableDeclaration","scope":5403,"src":"963:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"963:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5358,"mutability":"mutable","name":"salt","nameLocation":"1001:4:16","nodeType":"VariableDeclaration","scope":5403,"src":"993:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"993:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5360,"mutability":"mutable","name":"delay","nameLocation":"1024:5:16","nodeType":"VariableDeclaration","scope":5403,"src":"1016:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"873:163:16"},"returnParameters":{"id":5363,"nodeType":"ParameterList","parameters":[],"src":"1055:0:16"},"scope":5474,"src":"856:648:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4668],"body":{"id":5472,"nodeType":"Block","src":"1793:566:16","statements":[{"assignments":[5419],"declarations":[{"constant":false,"id":5419,"mutability":"mutable","name":"id","nameLocation":"1856:2:16","nodeType":"VariableDeclaration","scope":5472,"src":"1848:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1848:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5430,"initialValue":{"arguments":[{"arguments":[{"id":5423,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"1882:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"1890:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5425,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"1897:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":5426,"name":"predecessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"1903:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5427,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"1916:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5421,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1871:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1875:6:16","memberName":"encode","nodeType":"MemberAccess","src":"1871:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1871:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5420,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1861:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1861:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1848:74:16"},{"assignments":[5432],"declarations":[{"constant":false,"id":5432,"mutability":"mutable","name":"timestamp","nameLocation":"1941:9:16","nodeType":"VariableDeclaration","scope":5472,"src":"1933:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5436,"initialValue":{"baseExpression":{"id":5433,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"1953:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5435,"indexExpression":{"id":5434,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"1964:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1953:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1933:34:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5438,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"1988:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2001:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1988:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696d656c6f636b436f6e74726f6c6c65723a206e6f74207363686564756c6564","id":5441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2004:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60","typeString":"literal_string \"TimelockController: not scheduled\""},"value":"TimelockController: not scheduled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60","typeString":"literal_string \"TimelockController: not scheduled\""}],"id":5437,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1980:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1980:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5443,"nodeType":"ExpressionStatement","src":"1980:60:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5445,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2059:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2065:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"2059:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5447,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"2078:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2059:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696d656c6f636b436f6e74726f6c6c65723a206e6f74207265616479","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e","typeString":"literal_string \"TimelockController: not ready\""},"value":"TimelockController: not ready"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e","typeString":"literal_string \"TimelockController: not ready\""}],"id":5444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2051:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2051:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5451,"nodeType":"ExpressionStatement","src":"2051:70:16"},{"expression":{"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5452,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"2179:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5454,"indexExpression":{"id":5453,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"2190:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2179:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2196:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2179:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5457,"nodeType":"ExpressionStatement","src":"2179:18:16"},{"assignments":[5459,null],"declarations":[{"constant":false,"id":5459,"mutability":"mutable","name":"success","nameLocation":"2245:7:16","nodeType":"VariableDeclaration","scope":5472,"src":"2240:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5458,"name":"bool","nodeType":"ElementaryTypeName","src":"2240:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":5466,"initialValue":{"arguments":[{"id":5464,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"2284:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":5460,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"2258:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2265:4:16","memberName":"call","nodeType":"MemberAccess","src":"2258:11:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":5462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"2277:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2258:25:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2239:50:16"},{"expression":{"arguments":[{"id":5468,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"2308:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696d656c6f636b436f6e74726f6c6c65723a2063616c6c206661696c6564","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2317:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a","typeString":"literal_string \"TimelockController: call failed\""},"value":"TimelockController: call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a","typeString":"literal_string \"TimelockController: call failed\""}],"id":5467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2300:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5471,"nodeType":"ExpressionStatement","src":"2300:51:16"}]},"documentation":{"id":5404,"nodeType":"StructuredDocumentation","src":"1512:93:16","text":" @notice Execute a previously scheduled call after its delay has elapsed."},"functionSelector":"134008d3","id":5473,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1620:7:16","nodeType":"FunctionDefinition","overrides":{"id":5416,"nodeType":"OverrideSpecifier","overrides":[],"src":"1784:8:16"},"parameters":{"id":5415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5406,"mutability":"mutable","name":"target","nameLocation":"1646:6:16","nodeType":"VariableDeclaration","scope":5473,"src":"1638:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5405,"name":"address","nodeType":"ElementaryTypeName","src":"1638:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5408,"mutability":"mutable","name":"value","nameLocation":"1671:5:16","nodeType":"VariableDeclaration","scope":5473,"src":"1663:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5410,"mutability":"mutable","name":"data","nameLocation":"1702:4:16","nodeType":"VariableDeclaration","scope":5473,"src":"1687:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5409,"name":"bytes","nodeType":"ElementaryTypeName","src":"1687:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5412,"mutability":"mutable","name":"predecessor","nameLocation":"1725:11:16","nodeType":"VariableDeclaration","scope":5473,"src":"1717:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1717:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5414,"mutability":"mutable","name":"salt","nameLocation":"1755:4:16","nodeType":"VariableDeclaration","scope":5473,"src":"1747:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1747:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1627:139:16"},"returnParameters":{"id":5417,"nodeType":"ParameterList","parameters":[],"src":"1793:0:16"},"scope":5474,"src":"1611:748:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":5475,"src":"327:2035:16","usedErrors":[],"usedEvents":[]}],"src":"33:2331:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/IPriceOracle.sol":{"IPriceOracle":{"abi":[{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAssetPrice(address)":"b3596f07"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"The price of the asset (e.g., in USD, scaled by 1e18)\"}}},\"title\":\"IPriceOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAssetPrice(address)\":{\"notice\":\"Get the price of an asset\"}},\"notice\":\"Minimal interface for a price oracle contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPriceOracle.sol\":{\"keccak256\":\"0xc584ef3feff07b3751b802d5b65babe6f690d6fa7fa6dc038eaaf8b0e2dfc76d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ce43275ebc2be7a22a65ff54164f50c7f46551576781b15668b35d3f4ac3c4f\",\"dweb:/ipfs/QmZQx478L2fVDZ5qeJBgbYsraZaefjCPR1nYmkJg87SF5L\"]}},\"version\":1}"}},"contracts/ITimelockController.sol":{"ITimelockController":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"predecessor","type":"bytes32"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"predecessor","type":"bytes32"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"delay","type":"uint256"}],"name":"schedule","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"execute(address,uint256,bytes,bytes32,bytes32)":"134008d3","schedule(address,uint256,bytes,bytes32,bytes32,uint256)":"01d5062a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"predecessor\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"predecessor\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"delay\",\"type\":\"uint256\"}],\"name\":\"schedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute(address,uint256,bytes,bytes32,bytes32)\":{\"params\":{\"data\":\"The encoded function call data\",\"predecessor\":\"Must match the previously scheduled operation if any\",\"salt\":\"The same salt used in schedule\",\"target\":\"The contract to call\",\"value\":\"Ether value to send\"}},\"schedule(address,uint256,bytes,bytes32,bytes32,uint256)\":{\"params\":{\"data\":\"The encoded function call data\",\"delay\":\"The time to wait before execution is allowed\",\"predecessor\":\"A dependency for another scheduled operation, or bytes32(0) if none\",\"salt\":\"A unique salt to create an operation identifier\",\"target\":\"The contract to call\",\"value\":\"Ether value to send (usually 0 unless you need to send ETH)\"}}},\"title\":\"ITimelockController\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(address,uint256,bytes,bytes32,bytes32)\":{\"notice\":\"Execute a scheduled transaction once the delay has passed\"},\"schedule(address,uint256,bytes,bytes32,bytes32,uint256)\":{\"notice\":\"Schedule a transaction for execution after a certain delay\"}},\"notice\":\"Minimal interface for a timelock/ governance contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ITimelockController.sol\":\"ITimelockController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ITimelockController.sol\":{\"keccak256\":\"0x377a5a039531965865d59dfbfe3288de75943876f8b0d6b5a352c2b7b25a78e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c870698b5dc856551a77a9c58b8706d5d892fd1e0c5ebf9402226e4989eadb58\",\"dweb:/ipfs/QmcXEWgbYrKPwbpPqqNBvqgjqV2zm6h8hQtrFkUc1Ey7UW\"]}},\"version\":1}"}},"contracts/LendingPoolNovel.sol":{"LendingPoolNovel":{"abi":[{"inputs":[{"internalType":"address","name":"_collateralToken","type":"address"},{"internalType":"address","name":"_priceOracle","type":"address"},{"internalType":"uint256","name":"_baseRate","type":"uint256"},{"internalType":"uint256","name":"_slope1","type":"uint256"},{"internalType":"uint256","name":"_kink","type":"uint256"},{"internalType":"uint256","name":"_collateralFactorBps","type":"uint256"},{"internalType":"uint256","name":"_liquidationThresholdBps","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"AdminAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"AdminRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"liquidator","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"collateralSeized","type":"uint256"}],"name":"Liquidation","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"admins","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"borrowAmount","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"collateralFactorBps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collateralToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"collatAmount","type":"uint256"}],"name":"getCollateralValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"kink","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidationThresholdBps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceOracle","outputs":[{"internalType":"contract IPriceOracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"receiptToken","outputs":[{"internalType":"contract ReceiptToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"repayAmount","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_receiptToken","type":"address"}],"name":"setReceiptToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slope1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userPositions","outputs":[{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"uint256","name":"borrowedAmount","type":"uint256"},{"internalType":"uint256","name":"lastInterestBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"utilizationRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4916":{"entryPoint":null,"id":4916,"parameterSlots":7,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":706,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory":{"entryPoint":788,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_t_stringliteral_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2_to_t_string_memory_ptr_fromStack":{"entryPoint":1025,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb_to_t_string_memory_ptr_fromStack":{"entryPoint":1139,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1064,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1178,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":967,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":660,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":628,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":729,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":623,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2":{"entryPoint":984,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb":{"entryPoint":1098,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":680,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":739,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4618:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"759:80:17","statements":[{"nodeType":"YulAssignment","src":"769:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:17"},"nodeType":"YulFunctionCall","src":"778:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:17"},"nodeType":"YulFunctionCall","src":"800:33:17"},"nodeType":"YulExpressionStatement","src":"800:33:17"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:17","type":""}],"src":"696:143:17"},{"body":{"nodeType":"YulBlock","src":"890:32:17","statements":[{"nodeType":"YulAssignment","src":"900:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"911:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"900:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"872:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"882:7:17","type":""}],"src":"845:77:17"},{"body":{"nodeType":"YulBlock","src":"971:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:17"},"nodeType":"YulFunctionCall","src":"1030:12:17"},"nodeType":"YulExpressionStatement","src":"1030:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1001:17:17"},"nodeType":"YulFunctionCall","src":"1001:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:17"},"nodeType":"YulFunctionCall","src":"991:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:17"},"nodeType":"YulFunctionCall","src":"984:43:17"},"nodeType":"YulIf","src":"981:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:17","type":""}],"src":"928:122:17"},{"body":{"nodeType":"YulBlock","src":"1119:80:17","statements":[{"nodeType":"YulAssignment","src":"1129:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:17"},"nodeType":"YulFunctionCall","src":"1138:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1160:26:17"},"nodeType":"YulFunctionCall","src":"1160:33:17"},"nodeType":"YulExpressionStatement","src":"1160:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:17","type":""}],"src":"1056:143:17"},{"body":{"nodeType":"YulBlock","src":"1384:1112:17","statements":[{"body":{"nodeType":"YulBlock","src":"1431:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1433:77:17"},"nodeType":"YulFunctionCall","src":"1433:79:17"},"nodeType":"YulExpressionStatement","src":"1433:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1405:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1414:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1401:3:17"},"nodeType":"YulFunctionCall","src":"1401:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1426:3:17","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1397:3:17"},"nodeType":"YulFunctionCall","src":"1397:33:17"},"nodeType":"YulIf","src":"1394:120:17"},{"nodeType":"YulBlock","src":"1524:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1539:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1553:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1543:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1568:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1625:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:17"},"nodeType":"YulFunctionCall","src":"1610:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1634:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1578:31:17"},"nodeType":"YulFunctionCall","src":"1578:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1568:6:17"}]}]},{"nodeType":"YulBlock","src":"1662:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1677:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1681:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1707:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1753:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1764:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1749:3:17"},"nodeType":"YulFunctionCall","src":"1749:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1773:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1717:31:17"},"nodeType":"YulFunctionCall","src":"1717:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1707:6:17"}]}]},{"nodeType":"YulBlock","src":"1801:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1816:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1830:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1820:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1846:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1892:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1903:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1888:3:17"},"nodeType":"YulFunctionCall","src":"1888:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1912:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1856:31:17"},"nodeType":"YulFunctionCall","src":"1856:64:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1846:6:17"}]}]},{"nodeType":"YulBlock","src":"1940:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1955:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1969:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1959:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1985:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2031:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2042:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2027:3:17"},"nodeType":"YulFunctionCall","src":"2027:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2051:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1995:31:17"},"nodeType":"YulFunctionCall","src":"1995:64:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1985:6:17"}]}]},{"nodeType":"YulBlock","src":"2079:130:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2094:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2108:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2098:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2125:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2171:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2182:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2167:3:17"},"nodeType":"YulFunctionCall","src":"2167:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2191:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2135:31:17"},"nodeType":"YulFunctionCall","src":"2135:64:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2125:6:17"}]}]},{"nodeType":"YulBlock","src":"2219:130:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2234:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2248:3:17","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2238:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2265:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2311:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2322:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2307:3:17"},"nodeType":"YulFunctionCall","src":"2307:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2331:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2275:31:17"},"nodeType":"YulFunctionCall","src":"2275:64:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2265:6:17"}]}]},{"nodeType":"YulBlock","src":"2359:130:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2374:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2388:3:17","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2378:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2405:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2451:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2462:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2447:3:17"},"nodeType":"YulFunctionCall","src":"2447:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2471:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2415:31:17"},"nodeType":"YulFunctionCall","src":"2415:64:17"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2405:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1306:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1317:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1329:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1337:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1345:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1353:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1361:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1369:6:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1377:6:17","type":""}],"src":"1205:1291:17"},{"body":{"nodeType":"YulBlock","src":"2598:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2615:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2620:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2608:6:17"},"nodeType":"YulFunctionCall","src":"2608:19:17"},"nodeType":"YulExpressionStatement","src":"2608:19:17"},{"nodeType":"YulAssignment","src":"2636:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2655:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2660:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2651:3:17"},"nodeType":"YulFunctionCall","src":"2651:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2636:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2570:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2575:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2586:11:17","type":""}],"src":"2502:169:17"},{"body":{"nodeType":"YulBlock","src":"2783:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2805:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2813:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2801:3:17"},"nodeType":"YulFunctionCall","src":"2801:14:17"},{"hexValue":"496e76616c696420636f6c6c61746572616c20746f6b656e","kind":"string","nodeType":"YulLiteral","src":"2817:26:17","type":"","value":"Invalid collateral token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2794:6:17"},"nodeType":"YulFunctionCall","src":"2794:50:17"},"nodeType":"YulExpressionStatement","src":"2794:50:17"}]},"name":"store_literal_in_memory_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2775:6:17","type":""}],"src":"2677:174:17"},{"body":{"nodeType":"YulBlock","src":"3003:220:17","statements":[{"nodeType":"YulAssignment","src":"3013:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3079:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3084:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3020:58:17"},"nodeType":"YulFunctionCall","src":"3020:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3013:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3185:3:17"}],"functionName":{"name":"store_literal_in_memory_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2","nodeType":"YulIdentifier","src":"3096:88:17"},"nodeType":"YulFunctionCall","src":"3096:93:17"},"nodeType":"YulExpressionStatement","src":"3096:93:17"},{"nodeType":"YulAssignment","src":"3198:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3209:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3214:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3205:3:17"},"nodeType":"YulFunctionCall","src":"3205:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3198:3:17"}]}]},"name":"abi_encode_t_stringliteral_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2991:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2999:3:17","type":""}],"src":"2857:366:17"},{"body":{"nodeType":"YulBlock","src":"3400:248:17","statements":[{"nodeType":"YulAssignment","src":"3410:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3422:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3433:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3418:3:17"},"nodeType":"YulFunctionCall","src":"3418:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3410:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3457:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3468:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3453:3:17"},"nodeType":"YulFunctionCall","src":"3453:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3476:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3482:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3472:3:17"},"nodeType":"YulFunctionCall","src":"3472:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3446:6:17"},"nodeType":"YulFunctionCall","src":"3446:47:17"},"nodeType":"YulExpressionStatement","src":"3446:47:17"},{"nodeType":"YulAssignment","src":"3502:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3636:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3510:124:17"},"nodeType":"YulFunctionCall","src":"3510:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3502:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3380:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3395:4:17","type":""}],"src":"3229:419:17"},{"body":{"nodeType":"YulBlock","src":"3760:58:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3782:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3790:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3778:3:17"},"nodeType":"YulFunctionCall","src":"3778:14:17"},{"hexValue":"496e76616c6964206f7261636c65","kind":"string","nodeType":"YulLiteral","src":"3794:16:17","type":"","value":"Invalid oracle"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3771:6:17"},"nodeType":"YulFunctionCall","src":"3771:40:17"},"nodeType":"YulExpressionStatement","src":"3771:40:17"}]},"name":"store_literal_in_memory_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3752:6:17","type":""}],"src":"3654:164:17"},{"body":{"nodeType":"YulBlock","src":"3970:220:17","statements":[{"nodeType":"YulAssignment","src":"3980:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4046:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4051:2:17","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3987:58:17"},"nodeType":"YulFunctionCall","src":"3987:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3980:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4152:3:17"}],"functionName":{"name":"store_literal_in_memory_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb","nodeType":"YulIdentifier","src":"4063:88:17"},"nodeType":"YulFunctionCall","src":"4063:93:17"},"nodeType":"YulExpressionStatement","src":"4063:93:17"},{"nodeType":"YulAssignment","src":"4165:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4176:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4181:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4172:3:17"},"nodeType":"YulFunctionCall","src":"4172:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4165:3:17"}]}]},"name":"abi_encode_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3958:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3966:3:17","type":""}],"src":"3824:366:17"},{"body":{"nodeType":"YulBlock","src":"4367:248:17","statements":[{"nodeType":"YulAssignment","src":"4377:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4389:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4400:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4385:3:17"},"nodeType":"YulFunctionCall","src":"4385:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4377:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4424:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4435:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4420:3:17"},"nodeType":"YulFunctionCall","src":"4420:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4443:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4449:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4439:3:17"},"nodeType":"YulFunctionCall","src":"4439:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4413:6:17"},"nodeType":"YulFunctionCall","src":"4413:47:17"},"nodeType":"YulExpressionStatement","src":"4413:47:17"},{"nodeType":"YulAssignment","src":"4469:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4603:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4477:124:17"},"nodeType":"YulFunctionCall","src":"4477:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4469:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4347:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4362:4:17","type":""}],"src":"4196:419:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid collateral token\")\n\n    }\n\n    function abi_encode_t_stringliteral_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4da62d8b92a6b8da829ca7298722f22a2ae4127181ea278d50ccdc0800ea2ba2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid oracle\")\n\n    }\n\n    function abi_encode_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x22CD CODESIZE SUB DUP1 PUSH3 0x22CD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x314 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA0 SWAP1 PUSH3 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x11B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x112 SWAP1 PUSH3 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP PUSH3 0x4BC JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A1 DUP3 PUSH3 0x274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B3 DUP2 PUSH3 0x294 JUMP JUMPDEST DUP2 EQ PUSH3 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2D3 DUP2 PUSH3 0x2A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2EE DUP2 PUSH3 0x2D9 JUMP JUMPDEST DUP2 EQ PUSH3 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x30E DUP2 PUSH3 0x2E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x336 JUMPI PUSH3 0x335 PUSH3 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x346 DUP11 DUP3 DUP12 ADD PUSH3 0x2C2 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0x359 DUP11 DUP3 DUP12 ADD PUSH3 0x2C2 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x36C DUP11 DUP3 DUP12 ADD PUSH3 0x2FD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x37F DUP11 DUP3 DUP12 ADD PUSH3 0x2FD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0x392 DUP11 DUP3 DUP12 ADD PUSH3 0x2FD JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0x3A5 DUP11 DUP3 DUP12 ADD PUSH3 0x2FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0x3B8 DUP11 DUP3 DUP12 ADD PUSH3 0x2FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6C6C61746572616C20746F6B656E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x410 PUSH1 0x18 DUP4 PUSH3 0x3C7 JUMP JUMPDEST SWAP2 POP PUSH3 0x41D DUP3 PUSH3 0x3D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x443 DUP2 PUSH3 0x401 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F7261636C65000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x482 PUSH1 0xE DUP4 PUSH3 0x3C7 JUMP JUMPDEST SWAP2 POP PUSH3 0x48F DUP3 PUSH3 0x44A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4B5 DUP2 PUSH3 0x473 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E01 DUP1 PUSH3 0x4CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB2016BD4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xE4864731 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xEC78E832 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xFD2DA339 EQ PUSH2 0x39A JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7F5007ED EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x82FEE08F EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xA62B75A8 EQ PUSH2 0x2EA JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x429B62E5 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x4D99F714 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x613CF420 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x6C321C8A EQ PUSH2 0x256 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1F68F20A EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x371FD8E6 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0xA2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xB29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0xDCD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F2 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xED7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x11A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x366 PUSH2 0x1419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x384 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42B SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 GT PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B9 SWAP1 PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x188F JUMP JUMPDEST LT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x597 SWAP1 PUSH2 0x1908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FD SWAP3 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x62B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x199D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x731 SWAP3 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7BD SWAP3 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x821 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x818 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x865 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85C SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD DUP4 GT PUSH2 0x909 JUMPI DUP3 PUSH2 0x90F JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x970 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B3 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5C16DE4F8B59BD9CAF0F49A545F25819A895ED223294290B408242E72A594231 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAC SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH1 0x40 MLOAD PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAB SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3C SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB3596F07 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x188F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4F SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH1 0x40 MLOAD PUSH2 0xEA1 SWAP2 SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1E SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xF6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF62 SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 GT PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAC SWAP1 PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1033 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1057 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP3 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x113E SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP4 DUP5 PUSH1 0x40 MLOAD PUSH2 0x118D SWAP3 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E8 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1235 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122C SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x128E DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0xA SLOAD DUP4 PUSH2 0x12A3 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x12AD SWAP2 SWAP1 PUSH2 0x1D2E JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x12C0 SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST GT ISZERO PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F8 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1315 SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1379 SWAP3 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1398 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13BC SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBC04ECA7E9DA35CB1393A6135A199CA52E450D5E9251CBD99F7847D33A36750 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1403 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145E DUP2 PUSH2 0x144B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1479 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C4 PUSH2 0x14BF PUSH2 0x14BA DUP5 PUSH2 0x147F JUMP JUMPDEST PUSH2 0x149F JUMP JUMPDEST PUSH2 0x147F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D6 DUP3 PUSH2 0x14A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E8 DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F8 DUP2 PUSH2 0x14DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1513 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1527 DUP2 PUSH2 0x144B JUMP JUMPDEST DUP2 EQ PUSH2 0x1532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1544 DUP2 PUSH2 0x151E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1560 JUMPI PUSH2 0x155F PUSH2 0x1519 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x156E DUP5 DUP3 DUP6 ADD PUSH2 0x1535 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1582 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1592 DUP2 PUSH2 0x1577 JUMP JUMPDEST DUP2 EQ PUSH2 0x159D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15AF DUP2 PUSH2 0x1589 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CB JUMPI PUSH2 0x15CA PUSH2 0x1519 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D9 DUP5 DUP3 DUP6 ADD PUSH2 0x15A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F7 DUP2 PUSH2 0x15E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1612 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x162D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x163A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x1647 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1455 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1662 DUP2 PUSH2 0x164F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x167D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1659 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169E DUP2 PUSH2 0x1683 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1695 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CA DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16DA DUP2 PUSH2 0x16BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757365640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1742 PUSH1 0x6 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x174D DUP3 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1771 DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AE PUSH1 0x1F DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x17B9 DUP3 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17DD DUP2 PUSH2 0x17A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420736861726520616D6F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181A PUSH1 0x14 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1825 DUP3 PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1849 DUP2 PUSH2 0x180D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1859 DUP2 PUSH2 0x1577 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1874 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1850 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1889 DUP2 PUSH2 0x151E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A5 JUMPI PUSH2 0x18A4 PUSH2 0x1519 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B3 DUP5 DUP3 DUP6 ADD PUSH2 0x187A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742073686172657300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F2 PUSH1 0x13 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x18FD DUP3 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1921 DUP2 PUSH2 0x18E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x193D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x194A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1455 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820636F6C6C61746572616C0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1987 PUSH1 0x15 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1992 DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19B6 DUP2 PUSH2 0x197A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19F7 DUP3 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A02 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A19 PUSH2 0x19BD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A29 DUP2 PUSH2 0x15E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A46 DUP2 PUSH2 0x1A20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A62 JUMPI PUSH2 0x1A61 PUSH2 0x1519 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A70 DUP5 DUP3 DUP6 ADD PUSH2 0x1A37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A8E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x1A9B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1455 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F206465627400000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD8 PUSH1 0x7 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE3 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B07 DUP2 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B23 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x1B30 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x1B3D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1455 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7B PUSH1 0xC DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B86 DUP3 PUSH2 0x1B45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BAA DUP2 PUSH2 0x1B6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52656365697074546F6B656E20616C7265616479207365740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE7 PUSH1 0x18 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF2 DUP3 PUSH2 0x1BB1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C28 DUP3 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C33 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C41 DUP2 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x19BD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206465706F736974203000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C95 PUSH1 0x10 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA0 DUP3 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC4 DUP2 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD6 DUP3 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE1 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CF9 JUMPI PUSH2 0x1CF8 PUSH2 0x19BD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D39 DUP3 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D44 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D54 JUMPI PUSH2 0x1D53 PUSH2 0x1CFF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578636565647320626F72726F77206C696D6974000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D95 PUSH1 0x14 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA0 DUP3 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC4 DUP2 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH17 0xD64546DC0FAEF95470599816731BAD6F39 PUSH21 0xDF2026028419038D9CA42C1764736F6C6343000814 STOP CALLER ","sourceMap":"803:8400:14:-:0;;;3864:808;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4156:1;4128:30;;:16;:30;;;4120:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4230:1;4206:26;;:12;:26;;;4198:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4285:4;4264:6;:18;4271:10;4264:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;4316:10;4305:22;;;;;;;;;;;;1425:1;4340:7;:21;;;;4399:16;4374:15;;:42;;;;;;;;;;;;;;;;;;4454:12;4427:11;;:40;;;;;;;;;;;;;;;;;;4491:9;4480:8;:20;;;;4520:7;4511:6;:16;;;;4545:5;4538:4;:12;;;;4583:20;4561:19;:42;;;;4640:24;4614:23;:50;;;;3864:808;;;;;;;803:8400;;88:117:17;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:1291::-;1329:6;1337;1345;1353;1361;1369;1377;1426:3;1414:9;1405:7;1401:23;1397:33;1394:120;;;1433:79;;:::i;:::-;1394:120;1553:1;1578:64;1634:7;1625:6;1614:9;1610:22;1578:64;:::i;:::-;1568:74;;1524:128;1691:2;1717:64;1773:7;1764:6;1753:9;1749:22;1717:64;:::i;:::-;1707:74;;1662:129;1830:2;1856:64;1912:7;1903:6;1892:9;1888:22;1856:64;:::i;:::-;1846:74;;1801:129;1969:2;1995:64;2051:7;2042:6;2031:9;2027:22;1995:64;:::i;:::-;1985:74;;1940:129;2108:3;2135:64;2191:7;2182:6;2171:9;2167:22;2135:64;:::i;:::-;2125:74;;2079:130;2248:3;2275:64;2331:7;2322:6;2311:9;2307:22;2275:64;:::i;:::-;2265:74;;2219:130;2388:3;2415:64;2471:7;2462:6;2451:9;2447:22;2415:64;:::i;:::-;2405:74;;2359:130;1205:1291;;;;;;;;;;:::o;2502:169::-;2586:11;2620:6;2615:3;2608:19;2660:4;2655:3;2651:14;2636:29;;2502:169;;;;:::o;2677:174::-;2817:26;2813:1;2805:6;2801:14;2794:50;2677:174;:::o;2857:366::-;2999:3;3020:67;3084:2;3079:3;3020:67;:::i;:::-;3013:74;;3096:93;3185:3;3096:93;:::i;:::-;3214:2;3209:3;3205:12;3198:19;;2857:366;;;:::o;3229:419::-;3395:4;3433:2;3422:9;3418:18;3410:26;;3482:9;3476:4;3472:20;3468:1;3457:9;3453:17;3446:47;3510:131;3636:4;3510:131;:::i;:::-;3502:139;;3229:419;;;:::o;3654:164::-;3794:16;3790:1;3782:6;3778:14;3771:40;3654:164;:::o;3824:366::-;3966:3;3987:67;4051:2;4046:3;3987:67;:::i;:::-;3980:74;;4063:93;4152:3;4063:93;:::i;:::-;4181:2;4176:3;4172:12;4165:19;;3824:366;;;:::o;4196:419::-;4362:4;4400:2;4389:9;4385:18;4377:26;;4449:9;4443:4;4439:20;4435:1;4424:9;4420:17;4413:47;4477:131;4603:4;4477:131;:::i;:::-;4469:139;;4196:419;;;:::o;803:8400:14:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_4687":{"entryPoint":3276,"id":4687,"parameterSlots":0,"returnSlots":0},"@admins_4691":{"entryPoint":2825,"id":4691,"parameterSlots":0,"returnSlots":0},"@baseRate_4706":{"entryPoint":952,"id":4706,"parameterSlots":0,"returnSlots":0},"@borrow_5141":{"entryPoint":4513,"id":5141,"parameterSlots":1,"returnSlots":0},"@collateralFactorBps_4732":{"entryPoint":3312,"id":4732,"parameterSlots":0,"returnSlots":0},"@collateralToken_4715":{"entryPoint":3761,"id":4715,"parameterSlots":0,"returnSlots":0},"@deposit_5002":{"entryPoint":3799,"id":5002,"parameterSlots":1,"returnSlots":0},"@getCollateralValue_5225":{"entryPoint":3318,"id":5225,"parameterSlots":1,"returnSlots":1},"@kink_4712":{"entryPoint":5189,"id":4712,"parameterSlots":0,"returnSlots":0},"@liquidationThresholdBps_4734":{"entryPoint":5145,"id":4734,"parameterSlots":0,"returnSlots":0},"@pause_5240":{"entryPoint":3533,"id":5240,"parameterSlots":0,"returnSlots":0},"@paused_4696":{"entryPoint":3209,"id":4696,"parameterSlots":0,"returnSlots":0},"@priceOracle_4737":{"entryPoint":958,"id":4737,"parameterSlots":0,"returnSlots":0},"@receiptToken_4718":{"entryPoint":5151,"id":4718,"parameterSlots":0,"returnSlots":0},"@repay_5203":{"entryPoint":2001,"id":5203,"parameterSlots":1,"returnSlots":0},"@setReceiptToken_4943":{"entryPoint":2857,"id":4943,"parameterSlots":1,"returnSlots":0},"@slope1_4710":{"entryPoint":3755,"id":4710,"parameterSlots":0,"returnSlots":0},"@unpause_5255":{"entryPoint":2602,"id":5255,"parameterSlots":0,"returnSlots":0},"@userPositions_4730":{"entryPoint":3228,"id":4730,"parameterSlots":0,"returnSlots":0},"@utilizationRate_4708":{"entryPoint":3270,"id":4708,"parameterSlots":0,"returnSlots":0},"@withdraw_5076":{"entryPoint":996,"id":5076,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":5536,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6711,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5429,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5557,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6224,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5614,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5721,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$1108_to_t_address_fromStack":{"entryPoint":5781,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IPriceOracle_$4635_to_t_address_fromStack":{"entryPoint":5359,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ReceiptToken_$5324_to_t_address_fromStack":{"entryPoint":5841,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665_to_t_string_memory_ptr_fromStack":{"entryPoint":6373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c_to_t_string_memory_ptr_fromStack":{"entryPoint":6859,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90_to_t_string_memory_ptr_fromStack":{"entryPoint":5941,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866_to_t_string_memory_ptr_fromStack":{"entryPoint":7304,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc_to_t_string_memory_ptr_fromStack":{"entryPoint":6157,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250_to_t_string_memory_ptr_fromStack":{"entryPoint":7022,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b_to_t_string_memory_ptr_fromStack":{"entryPoint":7130,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9_to_t_string_memory_ptr_fromStack":{"entryPoint":7560,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack":{"entryPoint":6522,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":6049,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5205,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":6926,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6440,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5629,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5736,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1108__to_t_address__fromStack_reversed":{"entryPoint":5796,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IPriceOracle_$4635__to_t_address__fromStack_reversed":{"entryPoint":5374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ReceiptToken_$5324__to_t_address__fromStack_reversed":{"entryPoint":5856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6408,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6894,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5976,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7339,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6192,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7057,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7595,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6557,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6777,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5656,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5883,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7371,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7470,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7197,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6636,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5495,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5602,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5711,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5247,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5195,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$1108_to_t_address":{"entryPoint":5763,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IPriceOracle_$4635_to_t_address":{"entryPoint":5341,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ReceiptToken_$5324_to_t_address":{"entryPoint":5823,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":5323,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":5289,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":5279,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6589,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7423,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5401,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665":{"entryPoint":6332,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c":{"entryPoint":6818,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90":{"entryPoint":5900,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866":{"entryPoint":7263,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc":{"entryPoint":6116,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250":{"entryPoint":6981,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b":{"entryPoint":7089,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9":{"entryPoint":7519,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad":{"entryPoint":6481,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":6008,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5513,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6688,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5406,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19501:17","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:17","statements":[{"nodeType":"YulAssignment","src":"62:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:17","type":""}],"src":"7:77:17"},{"body":{"nodeType":"YulBlock","src":"155:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:17"},"nodeType":"YulFunctionCall","src":"177:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:17"},"nodeType":"YulFunctionCall","src":"165:37:17"},"nodeType":"YulExpressionStatement","src":"165:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:17","type":""}],"src":"90:118:17"},{"body":{"nodeType":"YulBlock","src":"312:124:17","statements":[{"nodeType":"YulAssignment","src":"322:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:17"},"nodeType":"YulFunctionCall","src":"330:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:17"},"nodeType":"YulFunctionCall","src":"411:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:17"},"nodeType":"YulFunctionCall","src":"358:71:17"},"nodeType":"YulExpressionStatement","src":"358:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:17","type":""}],"src":"214:222:17"},{"body":{"nodeType":"YulBlock","src":"487:81:17","statements":[{"nodeType":"YulAssignment","src":"497:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"512:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"519:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"508:3:17"},"nodeType":"YulFunctionCall","src":"508:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"497:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"469:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"479:7:17","type":""}],"src":"442:126:17"},{"body":{"nodeType":"YulBlock","src":"606:28:17","statements":[{"nodeType":"YulAssignment","src":"616:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"623:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"616:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"592:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"602:3:17","type":""}],"src":"574:60:17"},{"body":{"nodeType":"YulBlock","src":"700:82:17","statements":[{"nodeType":"YulAssignment","src":"710:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"750:17:17"},"nodeType":"YulFunctionCall","src":"750:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"741:8:17"},"nodeType":"YulFunctionCall","src":"741:34:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"723:17:17"},"nodeType":"YulFunctionCall","src":"723:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"710:9:17"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"680:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"690:9:17","type":""}],"src":"640:142:17"},{"body":{"nodeType":"YulBlock","src":"848:66:17","statements":[{"nodeType":"YulAssignment","src":"858:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"902:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"871:30:17"},"nodeType":"YulFunctionCall","src":"871:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"858:9:17"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"828:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"838:9:17","type":""}],"src":"788:126:17"},{"body":{"nodeType":"YulBlock","src":"1001:66:17","statements":[{"nodeType":"YulAssignment","src":"1011:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1055:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"1024:30:17"},"nodeType":"YulFunctionCall","src":"1024:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1011:9:17"}]}]},"name":"convert_t_contract$_IPriceOracle_$4635_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"981:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"991:9:17","type":""}],"src":"920:147:17"},{"body":{"nodeType":"YulBlock","src":"1159:87:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1176:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1233:5:17"}],"functionName":{"name":"convert_t_contract$_IPriceOracle_$4635_to_t_address","nodeType":"YulIdentifier","src":"1181:51:17"},"nodeType":"YulFunctionCall","src":"1181:58:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1169:6:17"},"nodeType":"YulFunctionCall","src":"1169:71:17"},"nodeType":"YulExpressionStatement","src":"1169:71:17"}]},"name":"abi_encode_t_contract$_IPriceOracle_$4635_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1147:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1154:3:17","type":""}],"src":"1073:173:17"},{"body":{"nodeType":"YulBlock","src":"1371:145:17","statements":[{"nodeType":"YulAssignment","src":"1381:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1393:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1404:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1389:3:17"},"nodeType":"YulFunctionCall","src":"1389:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1381:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1482:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1495:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1506:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1491:3:17"},"nodeType":"YulFunctionCall","src":"1491:17:17"}],"functionName":{"name":"abi_encode_t_contract$_IPriceOracle_$4635_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1417:64:17"},"nodeType":"YulFunctionCall","src":"1417:92:17"},"nodeType":"YulExpressionStatement","src":"1417:92:17"}]},"name":"abi_encode_tuple_t_contract$_IPriceOracle_$4635__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1343:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1355:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1366:4:17","type":""}],"src":"1252:264:17"},{"body":{"nodeType":"YulBlock","src":"1562:35:17","statements":[{"nodeType":"YulAssignment","src":"1572:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1588:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1582:5:17"},"nodeType":"YulFunctionCall","src":"1582:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1572:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1555:6:17","type":""}],"src":"1522:75:17"},{"body":{"nodeType":"YulBlock","src":"1692:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1709:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1712:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1702:6:17"},"nodeType":"YulFunctionCall","src":"1702:12:17"},"nodeType":"YulExpressionStatement","src":"1702:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1603:117:17"},{"body":{"nodeType":"YulBlock","src":"1815:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1832:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1835:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1825:6:17"},"nodeType":"YulFunctionCall","src":"1825:12:17"},"nodeType":"YulExpressionStatement","src":"1825:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1726:117:17"},{"body":{"nodeType":"YulBlock","src":"1892:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1949:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1958:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1961:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1951:6:17"},"nodeType":"YulFunctionCall","src":"1951:12:17"},"nodeType":"YulExpressionStatement","src":"1951:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1915:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1922:17:17"},"nodeType":"YulFunctionCall","src":"1922:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1912:2:17"},"nodeType":"YulFunctionCall","src":"1912:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1905:6:17"},"nodeType":"YulFunctionCall","src":"1905:43:17"},"nodeType":"YulIf","src":"1902:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1885:5:17","type":""}],"src":"1849:122:17"},{"body":{"nodeType":"YulBlock","src":"2029:87:17","statements":[{"nodeType":"YulAssignment","src":"2039:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2061:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2048:12:17"},"nodeType":"YulFunctionCall","src":"2048:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2039:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2104:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2077:26:17"},"nodeType":"YulFunctionCall","src":"2077:33:17"},"nodeType":"YulExpressionStatement","src":"2077:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2007:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2015:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2023:5:17","type":""}],"src":"1977:139:17"},{"body":{"nodeType":"YulBlock","src":"2188:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"2234:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2236:77:17"},"nodeType":"YulFunctionCall","src":"2236:79:17"},"nodeType":"YulExpressionStatement","src":"2236:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2209:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2218:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2205:3:17"},"nodeType":"YulFunctionCall","src":"2205:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2230:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2201:3:17"},"nodeType":"YulFunctionCall","src":"2201:32:17"},"nodeType":"YulIf","src":"2198:119:17"},{"nodeType":"YulBlock","src":"2327:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2342:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2356:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2346:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2371:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2406:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2402:3:17"},"nodeType":"YulFunctionCall","src":"2402:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2426:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2381:20:17"},"nodeType":"YulFunctionCall","src":"2381:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2371:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2158:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2169:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2181:6:17","type":""}],"src":"2122:329:17"},{"body":{"nodeType":"YulBlock","src":"2502:51:17","statements":[{"nodeType":"YulAssignment","src":"2512:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2541:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2523:17:17"},"nodeType":"YulFunctionCall","src":"2523:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2512:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2484:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2494:7:17","type":""}],"src":"2457:96:17"},{"body":{"nodeType":"YulBlock","src":"2602:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2659:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2668:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2671:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2661:6:17"},"nodeType":"YulFunctionCall","src":"2661:12:17"},"nodeType":"YulExpressionStatement","src":"2661:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2625:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2650:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2632:17:17"},"nodeType":"YulFunctionCall","src":"2632:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2622:2:17"},"nodeType":"YulFunctionCall","src":"2622:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2615:6:17"},"nodeType":"YulFunctionCall","src":"2615:43:17"},"nodeType":"YulIf","src":"2612:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2595:5:17","type":""}],"src":"2559:122:17"},{"body":{"nodeType":"YulBlock","src":"2739:87:17","statements":[{"nodeType":"YulAssignment","src":"2749:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2758:12:17"},"nodeType":"YulFunctionCall","src":"2758:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2749:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2814:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2787:26:17"},"nodeType":"YulFunctionCall","src":"2787:33:17"},"nodeType":"YulExpressionStatement","src":"2787:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2717:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2725:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2733:5:17","type":""}],"src":"2687:139:17"},{"body":{"nodeType":"YulBlock","src":"2898:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"2944:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2946:77:17"},"nodeType":"YulFunctionCall","src":"2946:79:17"},"nodeType":"YulExpressionStatement","src":"2946:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2919:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2928:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2915:3:17"},"nodeType":"YulFunctionCall","src":"2915:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2940:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2911:3:17"},"nodeType":"YulFunctionCall","src":"2911:32:17"},"nodeType":"YulIf","src":"2908:119:17"},{"nodeType":"YulBlock","src":"3037:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3052:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3066:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3056:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3081:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3116:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3127:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3112:3:17"},"nodeType":"YulFunctionCall","src":"3112:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3136:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3091:20:17"},"nodeType":"YulFunctionCall","src":"3091:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3081:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2868:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2879:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2891:6:17","type":""}],"src":"2832:329:17"},{"body":{"nodeType":"YulBlock","src":"3209:48:17","statements":[{"nodeType":"YulAssignment","src":"3219:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3244:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3237:6:17"},"nodeType":"YulFunctionCall","src":"3237:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3230:6:17"},"nodeType":"YulFunctionCall","src":"3230:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3219:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3191:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3201:7:17","type":""}],"src":"3167:90:17"},{"body":{"nodeType":"YulBlock","src":"3322:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3339:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3359:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3344:14:17"},"nodeType":"YulFunctionCall","src":"3344:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3332:6:17"},"nodeType":"YulFunctionCall","src":"3332:34:17"},"nodeType":"YulExpressionStatement","src":"3332:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3310:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3317:3:17","type":""}],"src":"3263:109:17"},{"body":{"nodeType":"YulBlock","src":"3470:118:17","statements":[{"nodeType":"YulAssignment","src":"3480:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3492:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3503:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3488:3:17"},"nodeType":"YulFunctionCall","src":"3488:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3480:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3554:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3567:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3578:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3563:3:17"},"nodeType":"YulFunctionCall","src":"3563:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3516:37:17"},"nodeType":"YulFunctionCall","src":"3516:65:17"},"nodeType":"YulExpressionStatement","src":"3516:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3442:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3454:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3465:4:17","type":""}],"src":"3378:210:17"},{"body":{"nodeType":"YulBlock","src":"3748:288:17","statements":[{"nodeType":"YulAssignment","src":"3758:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3770:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3781:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3766:3:17"},"nodeType":"YulFunctionCall","src":"3766:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3758:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3838:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3851:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3862:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3847:3:17"},"nodeType":"YulFunctionCall","src":"3847:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3794:43:17"},"nodeType":"YulFunctionCall","src":"3794:71:17"},"nodeType":"YulExpressionStatement","src":"3794:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3919:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3932:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3943:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3928:3:17"},"nodeType":"YulFunctionCall","src":"3928:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3875:43:17"},"nodeType":"YulFunctionCall","src":"3875:72:17"},"nodeType":"YulExpressionStatement","src":"3875:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4001:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4014:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4025:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4010:3:17"},"nodeType":"YulFunctionCall","src":"4010:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3957:43:17"},"nodeType":"YulFunctionCall","src":"3957:72:17"},"nodeType":"YulExpressionStatement","src":"3957:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3704:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3716:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3724:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3732:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3743:4:17","type":""}],"src":"3594:442:17"},{"body":{"nodeType":"YulBlock","src":"4087:32:17","statements":[{"nodeType":"YulAssignment","src":"4097:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4108:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4097:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4069:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4079:7:17","type":""}],"src":"4042:77:17"},{"body":{"nodeType":"YulBlock","src":"4190:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4207:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4230:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4212:17:17"},"nodeType":"YulFunctionCall","src":"4212:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4200:6:17"},"nodeType":"YulFunctionCall","src":"4200:37:17"},"nodeType":"YulExpressionStatement","src":"4200:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4178:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4185:3:17","type":""}],"src":"4125:118:17"},{"body":{"nodeType":"YulBlock","src":"4347:124:17","statements":[{"nodeType":"YulAssignment","src":"4357:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4369:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4380:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4365:3:17"},"nodeType":"YulFunctionCall","src":"4365:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4357:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4437:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4450:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4461:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4446:3:17"},"nodeType":"YulFunctionCall","src":"4446:17:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"4393:43:17"},"nodeType":"YulFunctionCall","src":"4393:71:17"},"nodeType":"YulExpressionStatement","src":"4393:71:17"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4319:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4331:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4342:4:17","type":""}],"src":"4249:222:17"},{"body":{"nodeType":"YulBlock","src":"4552:66:17","statements":[{"nodeType":"YulAssignment","src":"4562:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4606:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4575:30:17"},"nodeType":"YulFunctionCall","src":"4575:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4562:9:17"}]}]},"name":"convert_t_contract$_IERC20_$1108_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4532:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4542:9:17","type":""}],"src":"4477:141:17"},{"body":{"nodeType":"YulBlock","src":"4704:81:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4721:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4772:5:17"}],"functionName":{"name":"convert_t_contract$_IERC20_$1108_to_t_address","nodeType":"YulIdentifier","src":"4726:45:17"},"nodeType":"YulFunctionCall","src":"4726:52:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4714:6:17"},"nodeType":"YulFunctionCall","src":"4714:65:17"},"nodeType":"YulExpressionStatement","src":"4714:65:17"}]},"name":"abi_encode_t_contract$_IERC20_$1108_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4692:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4699:3:17","type":""}],"src":"4624:161:17"},{"body":{"nodeType":"YulBlock","src":"4904:139:17","statements":[{"nodeType":"YulAssignment","src":"4914:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4926:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4937:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4922:3:17"},"nodeType":"YulFunctionCall","src":"4922:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4914:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5009:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5022:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5033:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5018:3:17"},"nodeType":"YulFunctionCall","src":"5018:17:17"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$1108_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4950:58:17"},"nodeType":"YulFunctionCall","src":"4950:86:17"},"nodeType":"YulExpressionStatement","src":"4950:86:17"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1108__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4876:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4888:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4899:4:17","type":""}],"src":"4791:252:17"},{"body":{"nodeType":"YulBlock","src":"5130:66:17","statements":[{"nodeType":"YulAssignment","src":"5140:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5184:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"5153:30:17"},"nodeType":"YulFunctionCall","src":"5153:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5140:9:17"}]}]},"name":"convert_t_contract$_ReceiptToken_$5324_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5110:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5120:9:17","type":""}],"src":"5049:147:17"},{"body":{"nodeType":"YulBlock","src":"5288:87:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5305:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5362:5:17"}],"functionName":{"name":"convert_t_contract$_ReceiptToken_$5324_to_t_address","nodeType":"YulIdentifier","src":"5310:51:17"},"nodeType":"YulFunctionCall","src":"5310:58:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5298:6:17"},"nodeType":"YulFunctionCall","src":"5298:71:17"},"nodeType":"YulExpressionStatement","src":"5298:71:17"}]},"name":"abi_encode_t_contract$_ReceiptToken_$5324_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5276:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5283:3:17","type":""}],"src":"5202:173:17"},{"body":{"nodeType":"YulBlock","src":"5500:145:17","statements":[{"nodeType":"YulAssignment","src":"5510:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5522:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5533:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5518:3:17"},"nodeType":"YulFunctionCall","src":"5518:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5510:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5611:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5624:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5635:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5620:3:17"},"nodeType":"YulFunctionCall","src":"5620:17:17"}],"functionName":{"name":"abi_encode_t_contract$_ReceiptToken_$5324_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5546:64:17"},"nodeType":"YulFunctionCall","src":"5546:92:17"},"nodeType":"YulExpressionStatement","src":"5546:92:17"}]},"name":"abi_encode_tuple_t_contract$_ReceiptToken_$5324__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5472:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5484:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5495:4:17","type":""}],"src":"5381:264:17"},{"body":{"nodeType":"YulBlock","src":"5747:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5764:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5769:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5757:6:17"},"nodeType":"YulFunctionCall","src":"5757:19:17"},"nodeType":"YulExpressionStatement","src":"5757:19:17"},{"nodeType":"YulAssignment","src":"5785:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5804:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5809:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5800:3:17"},"nodeType":"YulFunctionCall","src":"5800:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5785:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5719:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5724:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5735:11:17","type":""}],"src":"5651:169:17"},{"body":{"nodeType":"YulBlock","src":"5932:50:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5954:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5962:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5950:3:17"},"nodeType":"YulFunctionCall","src":"5950:14:17"},{"hexValue":"506175736564","kind":"string","nodeType":"YulLiteral","src":"5966:8:17","type":"","value":"Paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5943:6:17"},"nodeType":"YulFunctionCall","src":"5943:32:17"},"nodeType":"YulExpressionStatement","src":"5943:32:17"}]},"name":"store_literal_in_memory_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5924:6:17","type":""}],"src":"5826:156:17"},{"body":{"nodeType":"YulBlock","src":"6134:219:17","statements":[{"nodeType":"YulAssignment","src":"6144:73:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6210:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6215:1:17","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6151:58:17"},"nodeType":"YulFunctionCall","src":"6151:66:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6144:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6315:3:17"}],"functionName":{"name":"store_literal_in_memory_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90","nodeType":"YulIdentifier","src":"6226:88:17"},"nodeType":"YulFunctionCall","src":"6226:93:17"},"nodeType":"YulExpressionStatement","src":"6226:93:17"},{"nodeType":"YulAssignment","src":"6328:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6339:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6344:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6335:3:17"},"nodeType":"YulFunctionCall","src":"6335:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6328:3:17"}]}]},"name":"abi_encode_t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6122:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6130:3:17","type":""}],"src":"5988:365:17"},{"body":{"nodeType":"YulBlock","src":"6530:248:17","statements":[{"nodeType":"YulAssignment","src":"6540:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6552:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6563:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6548:3:17"},"nodeType":"YulFunctionCall","src":"6548:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6540:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6587:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6598:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6583:3:17"},"nodeType":"YulFunctionCall","src":"6583:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6606:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6612:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6602:3:17"},"nodeType":"YulFunctionCall","src":"6602:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6576:6:17"},"nodeType":"YulFunctionCall","src":"6576:47:17"},"nodeType":"YulExpressionStatement","src":"6576:47:17"},{"nodeType":"YulAssignment","src":"6632:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6766:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6640:124:17"},"nodeType":"YulFunctionCall","src":"6640:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6632:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6510:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6525:4:17","type":""}],"src":"6359:419:17"},{"body":{"nodeType":"YulBlock","src":"6890:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6912:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6920:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6908:3:17"},"nodeType":"YulFunctionCall","src":"6908:14:17"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"6924:33:17","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6901:6:17"},"nodeType":"YulFunctionCall","src":"6901:57:17"},"nodeType":"YulExpressionStatement","src":"6901:57:17"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6882:6:17","type":""}],"src":"6784:181:17"},{"body":{"nodeType":"YulBlock","src":"7117:220:17","statements":[{"nodeType":"YulAssignment","src":"7127:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7193:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7198:2:17","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7134:58:17"},"nodeType":"YulFunctionCall","src":"7134:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7127:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7299:3:17"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"7210:88:17"},"nodeType":"YulFunctionCall","src":"7210:93:17"},"nodeType":"YulExpressionStatement","src":"7210:93:17"},{"nodeType":"YulAssignment","src":"7312:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7323:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7328:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7319:3:17"},"nodeType":"YulFunctionCall","src":"7319:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7312:3:17"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7105:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7113:3:17","type":""}],"src":"6971:366:17"},{"body":{"nodeType":"YulBlock","src":"7514:248:17","statements":[{"nodeType":"YulAssignment","src":"7524:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7536:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7547:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7532:3:17"},"nodeType":"YulFunctionCall","src":"7532:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7524:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7571:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7582:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7567:3:17"},"nodeType":"YulFunctionCall","src":"7567:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7590:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7596:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7586:3:17"},"nodeType":"YulFunctionCall","src":"7586:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7560:6:17"},"nodeType":"YulFunctionCall","src":"7560:47:17"},"nodeType":"YulExpressionStatement","src":"7560:47:17"},{"nodeType":"YulAssignment","src":"7616:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7750:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7624:124:17"},"nodeType":"YulFunctionCall","src":"7624:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7616:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7494:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7509:4:17","type":""}],"src":"7343:419:17"},{"body":{"nodeType":"YulBlock","src":"7874:64:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7896:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7904:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7892:3:17"},"nodeType":"YulFunctionCall","src":"7892:14:17"},{"hexValue":"496e76616c696420736861726520616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"7908:22:17","type":"","value":"Invalid share amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7885:6:17"},"nodeType":"YulFunctionCall","src":"7885:46:17"},"nodeType":"YulExpressionStatement","src":"7885:46:17"}]},"name":"store_literal_in_memory_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7866:6:17","type":""}],"src":"7768:170:17"},{"body":{"nodeType":"YulBlock","src":"8090:220:17","statements":[{"nodeType":"YulAssignment","src":"8100:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8166:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8171:2:17","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8107:58:17"},"nodeType":"YulFunctionCall","src":"8107:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8100:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8272:3:17"}],"functionName":{"name":"store_literal_in_memory_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc","nodeType":"YulIdentifier","src":"8183:88:17"},"nodeType":"YulFunctionCall","src":"8183:93:17"},"nodeType":"YulExpressionStatement","src":"8183:93:17"},{"nodeType":"YulAssignment","src":"8285:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8296:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8301:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8292:3:17"},"nodeType":"YulFunctionCall","src":"8292:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8285:3:17"}]}]},"name":"abi_encode_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8078:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8086:3:17","type":""}],"src":"7944:366:17"},{"body":{"nodeType":"YulBlock","src":"8487:248:17","statements":[{"nodeType":"YulAssignment","src":"8497:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8509:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8520:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8505:3:17"},"nodeType":"YulFunctionCall","src":"8505:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8497:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8544:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8555:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8540:3:17"},"nodeType":"YulFunctionCall","src":"8540:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8563:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8569:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8559:3:17"},"nodeType":"YulFunctionCall","src":"8559:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8533:6:17"},"nodeType":"YulFunctionCall","src":"8533:47:17"},"nodeType":"YulExpressionStatement","src":"8533:47:17"},{"nodeType":"YulAssignment","src":"8589:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8723:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8597:124:17"},"nodeType":"YulFunctionCall","src":"8597:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8589:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8467:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8482:4:17","type":""}],"src":"8316:419:17"},{"body":{"nodeType":"YulBlock","src":"8806:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8823:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8846:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8828:17:17"},"nodeType":"YulFunctionCall","src":"8828:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8816:6:17"},"nodeType":"YulFunctionCall","src":"8816:37:17"},"nodeType":"YulExpressionStatement","src":"8816:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8794:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8801:3:17","type":""}],"src":"8741:118:17"},{"body":{"nodeType":"YulBlock","src":"8963:124:17","statements":[{"nodeType":"YulAssignment","src":"8973:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8985:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8996:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8981:3:17"},"nodeType":"YulFunctionCall","src":"8981:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8973:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9053:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9066:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9077:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9062:3:17"},"nodeType":"YulFunctionCall","src":"9062:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9009:43:17"},"nodeType":"YulFunctionCall","src":"9009:71:17"},"nodeType":"YulExpressionStatement","src":"9009:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8935:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8947:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8958:4:17","type":""}],"src":"8865:222:17"},{"body":{"nodeType":"YulBlock","src":"9156:80:17","statements":[{"nodeType":"YulAssignment","src":"9166:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9181:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9175:5:17"},"nodeType":"YulFunctionCall","src":"9175:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9166:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9224:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"9197:26:17"},"nodeType":"YulFunctionCall","src":"9197:33:17"},"nodeType":"YulExpressionStatement","src":"9197:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9134:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"9142:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9150:5:17","type":""}],"src":"9093:143:17"},{"body":{"nodeType":"YulBlock","src":"9319:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"9365:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9367:77:17"},"nodeType":"YulFunctionCall","src":"9367:79:17"},"nodeType":"YulExpressionStatement","src":"9367:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9340:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9349:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9336:3:17"},"nodeType":"YulFunctionCall","src":"9336:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9361:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9332:3:17"},"nodeType":"YulFunctionCall","src":"9332:32:17"},"nodeType":"YulIf","src":"9329:119:17"},{"nodeType":"YulBlock","src":"9458:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9473:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9487:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9477:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9502:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9548:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9559:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9544:3:17"},"nodeType":"YulFunctionCall","src":"9544:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9568:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"9512:31:17"},"nodeType":"YulFunctionCall","src":"9512:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9502:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9289:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9300:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9312:6:17","type":""}],"src":"9242:351:17"},{"body":{"nodeType":"YulBlock","src":"9705:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9727:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9735:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9723:3:17"},"nodeType":"YulFunctionCall","src":"9723:14:17"},{"hexValue":"496e73756666696369656e7420736861726573","kind":"string","nodeType":"YulLiteral","src":"9739:21:17","type":"","value":"Insufficient shares"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9716:6:17"},"nodeType":"YulFunctionCall","src":"9716:45:17"},"nodeType":"YulExpressionStatement","src":"9716:45:17"}]},"name":"store_literal_in_memory_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9697:6:17","type":""}],"src":"9599:169:17"},{"body":{"nodeType":"YulBlock","src":"9920:220:17","statements":[{"nodeType":"YulAssignment","src":"9930:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9996:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10001:2:17","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9937:58:17"},"nodeType":"YulFunctionCall","src":"9937:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9930:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10102:3:17"}],"functionName":{"name":"store_literal_in_memory_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","nodeType":"YulIdentifier","src":"10013:88:17"},"nodeType":"YulFunctionCall","src":"10013:93:17"},"nodeType":"YulExpressionStatement","src":"10013:93:17"},{"nodeType":"YulAssignment","src":"10115:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10126:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10131:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10122:3:17"},"nodeType":"YulFunctionCall","src":"10122:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10115:3:17"}]}]},"name":"abi_encode_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9908:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9916:3:17","type":""}],"src":"9774:366:17"},{"body":{"nodeType":"YulBlock","src":"10317:248:17","statements":[{"nodeType":"YulAssignment","src":"10327:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10339:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10350:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10335:3:17"},"nodeType":"YulFunctionCall","src":"10335:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10327:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10374:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10385:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10370:3:17"},"nodeType":"YulFunctionCall","src":"10370:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10393:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10399:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10389:3:17"},"nodeType":"YulFunctionCall","src":"10389:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10363:6:17"},"nodeType":"YulFunctionCall","src":"10363:47:17"},"nodeType":"YulExpressionStatement","src":"10363:47:17"},{"nodeType":"YulAssignment","src":"10419:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10553:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10427:124:17"},"nodeType":"YulFunctionCall","src":"10427:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10419:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10297:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10312:4:17","type":""}],"src":"10146:419:17"},{"body":{"nodeType":"YulBlock","src":"10697:206:17","statements":[{"nodeType":"YulAssignment","src":"10707:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10719:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10730:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10715:3:17"},"nodeType":"YulFunctionCall","src":"10715:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10707:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10787:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10800:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10811:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10796:3:17"},"nodeType":"YulFunctionCall","src":"10796:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10743:43:17"},"nodeType":"YulFunctionCall","src":"10743:71:17"},"nodeType":"YulExpressionStatement","src":"10743:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10868:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10881:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10892:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10877:3:17"},"nodeType":"YulFunctionCall","src":"10877:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10824:43:17"},"nodeType":"YulFunctionCall","src":"10824:72:17"},"nodeType":"YulExpressionStatement","src":"10824:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10661:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10673:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10681:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10692:4:17","type":""}],"src":"10571:332:17"},{"body":{"nodeType":"YulBlock","src":"11015:65:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11037:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11045:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11033:3:17"},"nodeType":"YulFunctionCall","src":"11033:14:17"},{"hexValue":"4e6f7420656e6f75676820636f6c6c61746572616c","kind":"string","nodeType":"YulLiteral","src":"11049:23:17","type":"","value":"Not enough collateral"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11026:6:17"},"nodeType":"YulFunctionCall","src":"11026:47:17"},"nodeType":"YulExpressionStatement","src":"11026:47:17"}]},"name":"store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11007:6:17","type":""}],"src":"10909:171:17"},{"body":{"nodeType":"YulBlock","src":"11232:220:17","statements":[{"nodeType":"YulAssignment","src":"11242:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11308:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11313:2:17","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11249:58:17"},"nodeType":"YulFunctionCall","src":"11249:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11242:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11414:3:17"}],"functionName":{"name":"store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad","nodeType":"YulIdentifier","src":"11325:88:17"},"nodeType":"YulFunctionCall","src":"11325:93:17"},"nodeType":"YulExpressionStatement","src":"11325:93:17"},{"nodeType":"YulAssignment","src":"11427:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11438:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11443:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11434:3:17"},"nodeType":"YulFunctionCall","src":"11434:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11427:3:17"}]}]},"name":"abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11220:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11228:3:17","type":""}],"src":"11086:366:17"},{"body":{"nodeType":"YulBlock","src":"11629:248:17","statements":[{"nodeType":"YulAssignment","src":"11639:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11651:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11662:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11647:3:17"},"nodeType":"YulFunctionCall","src":"11647:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11639:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11686:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11697:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11682:3:17"},"nodeType":"YulFunctionCall","src":"11682:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11705:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11711:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11701:3:17"},"nodeType":"YulFunctionCall","src":"11701:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11675:6:17"},"nodeType":"YulFunctionCall","src":"11675:47:17"},"nodeType":"YulExpressionStatement","src":"11675:47:17"},{"nodeType":"YulAssignment","src":"11731:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11865:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11739:124:17"},"nodeType":"YulFunctionCall","src":"11739:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11731:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11609:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11624:4:17","type":""}],"src":"11458:419:17"},{"body":{"nodeType":"YulBlock","src":"11911:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11928:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11931:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11921:6:17"},"nodeType":"YulFunctionCall","src":"11921:88:17"},"nodeType":"YulExpressionStatement","src":"11921:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12025:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12028:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12018:6:17"},"nodeType":"YulFunctionCall","src":"12018:15:17"},"nodeType":"YulExpressionStatement","src":"12018:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12049:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12052:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12042:6:17"},"nodeType":"YulFunctionCall","src":"12042:15:17"},"nodeType":"YulExpressionStatement","src":"12042:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11883:180:17"},{"body":{"nodeType":"YulBlock","src":"12114:149:17","statements":[{"nodeType":"YulAssignment","src":"12124:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12147:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12129:17:17"},"nodeType":"YulFunctionCall","src":"12129:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12124:1:17"}]},{"nodeType":"YulAssignment","src":"12158:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12181:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12163:17:17"},"nodeType":"YulFunctionCall","src":"12163:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12158:1:17"}]},{"nodeType":"YulAssignment","src":"12192:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12204:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"12207:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12200:3:17"},"nodeType":"YulFunctionCall","src":"12200:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"12192:4:17"}]},{"body":{"nodeType":"YulBlock","src":"12234:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12236:16:17"},"nodeType":"YulFunctionCall","src":"12236:18:17"},"nodeType":"YulExpressionStatement","src":"12236:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"12225:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"12231:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12222:2:17"},"nodeType":"YulFunctionCall","src":"12222:11:17"},"nodeType":"YulIf","src":"12219:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12100:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"12103:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"12109:4:17","type":""}],"src":"12069:194:17"},{"body":{"nodeType":"YulBlock","src":"12309:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"12363:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12372:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12375:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12365:6:17"},"nodeType":"YulFunctionCall","src":"12365:12:17"},"nodeType":"YulExpressionStatement","src":"12365:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12332:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12354:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"12339:14:17"},"nodeType":"YulFunctionCall","src":"12339:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12329:2:17"},"nodeType":"YulFunctionCall","src":"12329:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12322:6:17"},"nodeType":"YulFunctionCall","src":"12322:40:17"},"nodeType":"YulIf","src":"12319:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12302:5:17","type":""}],"src":"12269:116:17"},{"body":{"nodeType":"YulBlock","src":"12451:77:17","statements":[{"nodeType":"YulAssignment","src":"12461:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12476:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12470:5:17"},"nodeType":"YulFunctionCall","src":"12470:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12461:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12516:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"12492:23:17"},"nodeType":"YulFunctionCall","src":"12492:30:17"},"nodeType":"YulExpressionStatement","src":"12492:30:17"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12429:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"12437:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12445:5:17","type":""}],"src":"12391:137:17"},{"body":{"nodeType":"YulBlock","src":"12608:271:17","statements":[{"body":{"nodeType":"YulBlock","src":"12654:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12656:77:17"},"nodeType":"YulFunctionCall","src":"12656:79:17"},"nodeType":"YulExpressionStatement","src":"12656:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12629:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"12638:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12625:3:17"},"nodeType":"YulFunctionCall","src":"12625:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"12650:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12621:3:17"},"nodeType":"YulFunctionCall","src":"12621:32:17"},"nodeType":"YulIf","src":"12618:119:17"},{"nodeType":"YulBlock","src":"12747:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12762:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12776:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12766:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12791:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12834:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12845:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12830:3:17"},"nodeType":"YulFunctionCall","src":"12830:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12854:7:17"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"12801:28:17"},"nodeType":"YulFunctionCall","src":"12801:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12791:6:17"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12578:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12589:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12601:6:17","type":""}],"src":"12534:345:17"},{"body":{"nodeType":"YulBlock","src":"13011:206:17","statements":[{"nodeType":"YulAssignment","src":"13021:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13033:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13044:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13029:3:17"},"nodeType":"YulFunctionCall","src":"13029:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13021:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13101:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13114:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13125:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13110:3:17"},"nodeType":"YulFunctionCall","src":"13110:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13057:43:17"},"nodeType":"YulFunctionCall","src":"13057:71:17"},"nodeType":"YulExpressionStatement","src":"13057:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13182:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13195:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13206:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13191:3:17"},"nodeType":"YulFunctionCall","src":"13191:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13138:43:17"},"nodeType":"YulFunctionCall","src":"13138:72:17"},"nodeType":"YulExpressionStatement","src":"13138:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12975:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12987:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12995:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13006:4:17","type":""}],"src":"12885:332:17"},{"body":{"nodeType":"YulBlock","src":"13329:51:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13351:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13359:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13347:3:17"},"nodeType":"YulFunctionCall","src":"13347:14:17"},{"hexValue":"4e6f2064656274","kind":"string","nodeType":"YulLiteral","src":"13363:9:17","type":"","value":"No debt"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13340:6:17"},"nodeType":"YulFunctionCall","src":"13340:33:17"},"nodeType":"YulExpressionStatement","src":"13340:33:17"}]},"name":"store_literal_in_memory_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13321:6:17","type":""}],"src":"13223:157:17"},{"body":{"nodeType":"YulBlock","src":"13532:219:17","statements":[{"nodeType":"YulAssignment","src":"13542:73:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13608:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13613:1:17","type":"","value":"7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13549:58:17"},"nodeType":"YulFunctionCall","src":"13549:66:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13542:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13713:3:17"}],"functionName":{"name":"store_literal_in_memory_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c","nodeType":"YulIdentifier","src":"13624:88:17"},"nodeType":"YulFunctionCall","src":"13624:93:17"},"nodeType":"YulExpressionStatement","src":"13624:93:17"},{"nodeType":"YulAssignment","src":"13726:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13737:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13742:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13733:3:17"},"nodeType":"YulFunctionCall","src":"13733:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13726:3:17"}]}]},"name":"abi_encode_t_stringliteral_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13520:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13528:3:17","type":""}],"src":"13386:365:17"},{"body":{"nodeType":"YulBlock","src":"13928:248:17","statements":[{"nodeType":"YulAssignment","src":"13938:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13950:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13961:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13946:3:17"},"nodeType":"YulFunctionCall","src":"13946:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13938:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13985:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13996:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13981:3:17"},"nodeType":"YulFunctionCall","src":"13981:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14004:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14010:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14000:3:17"},"nodeType":"YulFunctionCall","src":"14000:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13974:6:17"},"nodeType":"YulFunctionCall","src":"13974:47:17"},"nodeType":"YulExpressionStatement","src":"13974:47:17"},{"nodeType":"YulAssignment","src":"14030:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14164:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14038:124:17"},"nodeType":"YulFunctionCall","src":"14038:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14030:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13908:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13923:4:17","type":""}],"src":"13757:419:17"},{"body":{"nodeType":"YulBlock","src":"14336:288:17","statements":[{"nodeType":"YulAssignment","src":"14346:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14358:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14369:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14354:3:17"},"nodeType":"YulFunctionCall","src":"14354:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14346:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14426:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14439:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14450:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14435:3:17"},"nodeType":"YulFunctionCall","src":"14435:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14382:43:17"},"nodeType":"YulFunctionCall","src":"14382:71:17"},"nodeType":"YulExpressionStatement","src":"14382:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14507:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14520:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14531:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14516:3:17"},"nodeType":"YulFunctionCall","src":"14516:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14463:43:17"},"nodeType":"YulFunctionCall","src":"14463:72:17"},"nodeType":"YulExpressionStatement","src":"14463:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14589:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14602:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14613:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14598:3:17"},"nodeType":"YulFunctionCall","src":"14598:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14545:43:17"},"nodeType":"YulFunctionCall","src":"14545:72:17"},"nodeType":"YulExpressionStatement","src":"14545:72:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14292:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14304:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14312:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14320:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14331:4:17","type":""}],"src":"14182:442:17"},{"body":{"nodeType":"YulBlock","src":"14736:56:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14758:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14766:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14754:3:17"},"nodeType":"YulFunctionCall","src":"14754:14:17"},{"hexValue":"4e6f7420616e2061646d696e","kind":"string","nodeType":"YulLiteral","src":"14770:14:17","type":"","value":"Not an admin"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14747:6:17"},"nodeType":"YulFunctionCall","src":"14747:38:17"},"nodeType":"YulExpressionStatement","src":"14747:38:17"}]},"name":"store_literal_in_memory_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14728:6:17","type":""}],"src":"14630:162:17"},{"body":{"nodeType":"YulBlock","src":"14944:220:17","statements":[{"nodeType":"YulAssignment","src":"14954:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15020:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15025:2:17","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14961:58:17"},"nodeType":"YulFunctionCall","src":"14961:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14954:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15126:3:17"}],"functionName":{"name":"store_literal_in_memory_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250","nodeType":"YulIdentifier","src":"15037:88:17"},"nodeType":"YulFunctionCall","src":"15037:93:17"},"nodeType":"YulExpressionStatement","src":"15037:93:17"},{"nodeType":"YulAssignment","src":"15139:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15150:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15155:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15146:3:17"},"nodeType":"YulFunctionCall","src":"15146:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15139:3:17"}]}]},"name":"abi_encode_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14932:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14940:3:17","type":""}],"src":"14798:366:17"},{"body":{"nodeType":"YulBlock","src":"15341:248:17","statements":[{"nodeType":"YulAssignment","src":"15351:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15363:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15374:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15359:3:17"},"nodeType":"YulFunctionCall","src":"15359:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15351:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15398:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15409:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15394:3:17"},"nodeType":"YulFunctionCall","src":"15394:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15417:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15423:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15413:3:17"},"nodeType":"YulFunctionCall","src":"15413:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15387:6:17"},"nodeType":"YulFunctionCall","src":"15387:47:17"},"nodeType":"YulExpressionStatement","src":"15387:47:17"},{"nodeType":"YulAssignment","src":"15443:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15577:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15451:124:17"},"nodeType":"YulFunctionCall","src":"15451:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15443:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15321:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15336:4:17","type":""}],"src":"15170:419:17"},{"body":{"nodeType":"YulBlock","src":"15701:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15723:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15731:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15719:3:17"},"nodeType":"YulFunctionCall","src":"15719:14:17"},{"hexValue":"52656365697074546f6b656e20616c726561647920736574","kind":"string","nodeType":"YulLiteral","src":"15735:26:17","type":"","value":"ReceiptToken already set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15712:6:17"},"nodeType":"YulFunctionCall","src":"15712:50:17"},"nodeType":"YulExpressionStatement","src":"15712:50:17"}]},"name":"store_literal_in_memory_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15693:6:17","type":""}],"src":"15595:174:17"},{"body":{"nodeType":"YulBlock","src":"15921:220:17","statements":[{"nodeType":"YulAssignment","src":"15931:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15997:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16002:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15938:58:17"},"nodeType":"YulFunctionCall","src":"15938:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15931:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16103:3:17"}],"functionName":{"name":"store_literal_in_memory_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b","nodeType":"YulIdentifier","src":"16014:88:17"},"nodeType":"YulFunctionCall","src":"16014:93:17"},"nodeType":"YulExpressionStatement","src":"16014:93:17"},{"nodeType":"YulAssignment","src":"16116:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16127:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16132:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16123:3:17"},"nodeType":"YulFunctionCall","src":"16123:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16116:3:17"}]}]},"name":"abi_encode_t_stringliteral_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15909:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15917:3:17","type":""}],"src":"15775:366:17"},{"body":{"nodeType":"YulBlock","src":"16318:248:17","statements":[{"nodeType":"YulAssignment","src":"16328:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16340:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16351:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16336:3:17"},"nodeType":"YulFunctionCall","src":"16336:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16328:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16375:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16386:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16371:3:17"},"nodeType":"YulFunctionCall","src":"16371:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16394:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"16400:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16390:3:17"},"nodeType":"YulFunctionCall","src":"16390:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16364:6:17"},"nodeType":"YulFunctionCall","src":"16364:47:17"},"nodeType":"YulExpressionStatement","src":"16364:47:17"},{"nodeType":"YulAssignment","src":"16420:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16554:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16428:124:17"},"nodeType":"YulFunctionCall","src":"16428:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16420:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16298:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16313:4:17","type":""}],"src":"16147:419:17"},{"body":{"nodeType":"YulBlock","src":"16620:362:17","statements":[{"nodeType":"YulAssignment","src":"16630:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16653:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16635:17:17"},"nodeType":"YulFunctionCall","src":"16635:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16630:1:17"}]},{"nodeType":"YulAssignment","src":"16664:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16687:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16669:17:17"},"nodeType":"YulFunctionCall","src":"16669:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16664:1:17"}]},{"nodeType":"YulVariableDeclaration","src":"16698:28:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16721:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"16724:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16717:3:17"},"nodeType":"YulFunctionCall","src":"16717:9:17"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"16702:11:17","type":""}]},{"nodeType":"YulAssignment","src":"16735:41:17","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"16764:11:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16746:17:17"},"nodeType":"YulFunctionCall","src":"16746:30:17"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"16735:7:17"}]},{"body":{"nodeType":"YulBlock","src":"16953:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16955:16:17"},"nodeType":"YulFunctionCall","src":"16955:18:17"},"nodeType":"YulExpressionStatement","src":"16955:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16886:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16879:6:17"},"nodeType":"YulFunctionCall","src":"16879:9:17"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16909:1:17"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"16916:7:17"},{"name":"x","nodeType":"YulIdentifier","src":"16925:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16912:3:17"},"nodeType":"YulFunctionCall","src":"16912:15:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16906:2:17"},"nodeType":"YulFunctionCall","src":"16906:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16859:2:17"},"nodeType":"YulFunctionCall","src":"16859:83:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16839:6:17"},"nodeType":"YulFunctionCall","src":"16839:113:17"},"nodeType":"YulIf","src":"16836:139:17"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16603:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"16606:1:17","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"16612:7:17","type":""}],"src":"16572:410:17"},{"body":{"nodeType":"YulBlock","src":"17094:60:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17116:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17124:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17112:3:17"},"nodeType":"YulFunctionCall","src":"17112:14:17"},{"hexValue":"43616e6e6f74206465706f7369742030","kind":"string","nodeType":"YulLiteral","src":"17128:18:17","type":"","value":"Cannot deposit 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17105:6:17"},"nodeType":"YulFunctionCall","src":"17105:42:17"},"nodeType":"YulExpressionStatement","src":"17105:42:17"}]},"name":"store_literal_in_memory_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17086:6:17","type":""}],"src":"16988:166:17"},{"body":{"nodeType":"YulBlock","src":"17306:220:17","statements":[{"nodeType":"YulAssignment","src":"17316:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17382:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17387:2:17","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17323:58:17"},"nodeType":"YulFunctionCall","src":"17323:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17316:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17488:3:17"}],"functionName":{"name":"store_literal_in_memory_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866","nodeType":"YulIdentifier","src":"17399:88:17"},"nodeType":"YulFunctionCall","src":"17399:93:17"},"nodeType":"YulExpressionStatement","src":"17399:93:17"},{"nodeType":"YulAssignment","src":"17501:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17512:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17517:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17508:3:17"},"nodeType":"YulFunctionCall","src":"17508:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17501:3:17"}]}]},"name":"abi_encode_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17294:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17302:3:17","type":""}],"src":"17160:366:17"},{"body":{"nodeType":"YulBlock","src":"17703:248:17","statements":[{"nodeType":"YulAssignment","src":"17713:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17725:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17736:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17721:3:17"},"nodeType":"YulFunctionCall","src":"17721:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17713:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17760:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17771:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17756:3:17"},"nodeType":"YulFunctionCall","src":"17756:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17779:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17785:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17775:3:17"},"nodeType":"YulFunctionCall","src":"17775:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17749:6:17"},"nodeType":"YulFunctionCall","src":"17749:47:17"},"nodeType":"YulExpressionStatement","src":"17749:47:17"},{"nodeType":"YulAssignment","src":"17805:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17939:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17813:124:17"},"nodeType":"YulFunctionCall","src":"17813:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17805:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17683:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17698:4:17","type":""}],"src":"17532:419:17"},{"body":{"nodeType":"YulBlock","src":"18001:147:17","statements":[{"nodeType":"YulAssignment","src":"18011:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18034:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18016:17:17"},"nodeType":"YulFunctionCall","src":"18016:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18011:1:17"}]},{"nodeType":"YulAssignment","src":"18045:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18068:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18050:17:17"},"nodeType":"YulFunctionCall","src":"18050:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18045:1:17"}]},{"nodeType":"YulAssignment","src":"18079:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18090:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"18093:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18086:3:17"},"nodeType":"YulFunctionCall","src":"18086:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18079:3:17"}]},{"body":{"nodeType":"YulBlock","src":"18119:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18121:16:17"},"nodeType":"YulFunctionCall","src":"18121:18:17"},"nodeType":"YulExpressionStatement","src":"18121:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18111:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"18114:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18108:2:17"},"nodeType":"YulFunctionCall","src":"18108:10:17"},"nodeType":"YulIf","src":"18105:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17988:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"17991:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17997:3:17","type":""}],"src":"17957:191:17"},{"body":{"nodeType":"YulBlock","src":"18182:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18199:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18202:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18192:6:17"},"nodeType":"YulFunctionCall","src":"18192:88:17"},"nodeType":"YulExpressionStatement","src":"18192:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18296:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18299:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18289:6:17"},"nodeType":"YulFunctionCall","src":"18289:15:17"},"nodeType":"YulExpressionStatement","src":"18289:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18320:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18323:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18313:6:17"},"nodeType":"YulFunctionCall","src":"18313:15:17"},"nodeType":"YulExpressionStatement","src":"18313:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"18154:180:17"},{"body":{"nodeType":"YulBlock","src":"18382:143:17","statements":[{"nodeType":"YulAssignment","src":"18392:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18415:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18397:17:17"},"nodeType":"YulFunctionCall","src":"18397:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18392:1:17"}]},{"nodeType":"YulAssignment","src":"18426:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18449:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18431:17:17"},"nodeType":"YulFunctionCall","src":"18431:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18426:1:17"}]},{"body":{"nodeType":"YulBlock","src":"18473:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"18475:16:17"},"nodeType":"YulFunctionCall","src":"18475:18:17"},"nodeType":"YulExpressionStatement","src":"18475:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18470:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18463:6:17"},"nodeType":"YulFunctionCall","src":"18463:9:17"},"nodeType":"YulIf","src":"18460:35:17"},{"nodeType":"YulAssignment","src":"18505:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18514:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"18517:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18510:3:17"},"nodeType":"YulFunctionCall","src":"18510:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"18505:1:17"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18371:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"18374:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"18380:1:17","type":""}],"src":"18340:185:17"},{"body":{"nodeType":"YulBlock","src":"18637:64:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18659:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"18667:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18655:3:17"},"nodeType":"YulFunctionCall","src":"18655:14:17"},{"hexValue":"4578636565647320626f72726f77206c696d6974","kind":"string","nodeType":"YulLiteral","src":"18671:22:17","type":"","value":"Exceeds borrow limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18648:6:17"},"nodeType":"YulFunctionCall","src":"18648:46:17"},"nodeType":"YulExpressionStatement","src":"18648:46:17"}]},"name":"store_literal_in_memory_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18629:6:17","type":""}],"src":"18531:170:17"},{"body":{"nodeType":"YulBlock","src":"18853:220:17","statements":[{"nodeType":"YulAssignment","src":"18863:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18929:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18934:2:17","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18870:58:17"},"nodeType":"YulFunctionCall","src":"18870:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18863:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19035:3:17"}],"functionName":{"name":"store_literal_in_memory_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9","nodeType":"YulIdentifier","src":"18946:88:17"},"nodeType":"YulFunctionCall","src":"18946:93:17"},"nodeType":"YulExpressionStatement","src":"18946:93:17"},{"nodeType":"YulAssignment","src":"19048:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19059:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19064:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19055:3:17"},"nodeType":"YulFunctionCall","src":"19055:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19048:3:17"}]}]},"name":"abi_encode_t_stringliteral_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18841:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18849:3:17","type":""}],"src":"18707:366:17"},{"body":{"nodeType":"YulBlock","src":"19250:248:17","statements":[{"nodeType":"YulAssignment","src":"19260:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19272:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19283:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19268:3:17"},"nodeType":"YulFunctionCall","src":"19268:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19260:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19307:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19318:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19303:3:17"},"nodeType":"YulFunctionCall","src":"19303:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19326:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"19332:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19322:3:17"},"nodeType":"YulFunctionCall","src":"19322:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19296:6:17"},"nodeType":"YulFunctionCall","src":"19296:47:17"},"nodeType":"YulExpressionStatement","src":"19296:47:17"},{"nodeType":"YulAssignment","src":"19352:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19486:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19360:124:17"},"nodeType":"YulFunctionCall","src":"19360:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19352:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19230:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19245:4:17","type":""}],"src":"19079:419:17"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IPriceOracle_$4635_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IPriceOracle_$4635_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IPriceOracle_$4635_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IPriceOracle_$4635__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IPriceOracle_$4635_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$1108_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1108_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1108_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1108__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1108_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ReceiptToken_$5324_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ReceiptToken_$5324_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ReceiptToken_$5324_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ReceiptToken_$5324__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ReceiptToken_$5324_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90(memPtr) {\n\n        mstore(add(memPtr, 0), \"Paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid share amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient shares\")\n\n    }\n\n    function abi_encode_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_053b0cfa5428b488b7cd7c0f6d5b16e99d314de87c7c75c241b0ac80be31d51c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReceiptToken already set\")\n\n    }\n\n    function abi_encode_t_stringliteral_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f5fce4e31f796b4e29fdb8ad914415678b3f5aa74f1792f72c8cdcc53bfae4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot deposit 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds borrow limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd9304a8b6661c3518a24913b3c0ea00896610651fad9fe75af542f1a3677ed9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101375760003560e01c806375b238fc116100b8578063b2016bd41161007c578063b2016bd414610308578063b6b55f2514610326578063c5ebeaec14610342578063e48647311461035e578063ec78e8321461037c578063fd2da3391461039a57610137565b806375b238fc146102745780637f5007ed1461029257806382fee08f146102b05780638456cb59146102e0578063a62b75a8146102ea57610137565b8063429b62e5116100ff578063429b62e5146101ba5780634d99f714146101ea5780635c975abb14610206578063613cf420146102245780636c321c8a1461025657610137565b80631f68f20a1461013c5780632630c12f1461015a5780632e1a7d4d14610178578063371fd8e6146101945780633f4ba83a146101b0575b600080fd5b6101446103b8565b6040516101519190611464565b60405180910390f35b6101626103be565b60405161016f91906114fe565b60405180910390f35b610192600480360381019061018d919061154a565b6103e4565b005b6101ae60048036038101906101a9919061154a565b6107d1565b005b6101b8610a2a565b005b6101d460048036038101906101cf91906115b5565b610b09565b6040516101e191906115fd565b60405180910390f35b61020460048036038101906101ff91906115b5565b610b29565b005b61020e610c89565b60405161021b91906115fd565b60405180910390f35b61023e600480360381019061023991906115b5565b610c9c565b60405161024d93929190611618565b60405180910390f35b61025e610cc6565b60405161026b9190611464565b60405180910390f35b61027c610ccc565b6040516102899190611668565b60405180910390f35b61029a610cf0565b6040516102a79190611464565b60405180910390f35b6102ca60048036038101906102c5919061154a565b610cf6565b6040516102d79190611464565b60405180910390f35b6102e8610dcd565b005b6102f2610eab565b6040516102ff9190611464565b60405180910390f35b610310610eb1565b60405161031d91906116a4565b60405180910390f35b610340600480360381019061033b919061154a565b610ed7565b005b61035c6004803603810190610357919061154a565b6111a1565b005b610366611419565b6040516103739190611464565b60405180910390f35b61038461141f565b60405161039191906116e0565b60405180910390f35b6103a2611445565b6040516103af9190611464565b60405180910390f35b60035481565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1615610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90611758565b60405180910390fd5b6002805403610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f906117c4565b60405180910390fd5b60028081905550600081116104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990611830565b60405180910390fd5b80600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161051e919061185f565b602060405180830381865afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f919061188f565b10156105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059790611908565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b81526004016105fd929190611928565b600060405180830381600087803b15801561061757600080fd5b505af115801561062b573d6000803e3d6000fd5b505050506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081816000015410156106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b09061199d565b60405180910390fd5b818160000160008282546106cd91906119ec565b92505081905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610731929190611928565b6020604051808303816000875af1158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190611a4c565b503373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56883846040516107bd929190611a79565b60405180910390a250600160028190555050565b600160149054906101000a900460ff1615610821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081890611758565b60405180910390fd5b6002805403610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085c906117c4565b60405180910390fd5b600280819055506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160010154116108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611aee565b60405180910390fd5b600081600101548311610909578261090f565b81600101545b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161097093929190611b0e565b6020604051808303816000875af115801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b39190611a4c565b50808260010160008282546109c891906119ec565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5c16de4f8b59bd9caf0f49a545f25819a895ed223294290b408242e72a59423182604051610a159190611464565b60405180910390a25050600160028190555050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac90611b91565b60405180910390fd5b6000600160146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051610aff919061185f565b60405180910390a1565b60006020528060005260406000206000915054906101000a900460ff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90611b91565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3c90611bfd565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160149054906101000a900460ff1681565b60096020528060005260406000206000915090508060000154908060010154908060020154905083565b60045481565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b600a5481565b600080600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3596f07600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610d76919061185f565b602060405180830381865afa158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db7919061188f565b90508083610dc59190611c1d565b915050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4f90611b91565b60405180910390fd5b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610ea1919061185f565b60405180910390a1565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1615610f27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1e90611758565b60405180910390fd5b6002805403610f6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f62906117c4565b60405180910390fd5b6002808190555060008111610fb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fac90611cab565b60405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161101493929190611b0e565b6020604051808303816000875af1158015611033573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110579190611a4c565b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016110b5929190611928565b600060405180830381600087803b1580156110cf57600080fd5b505af11580156110e3573d6000803e3d6000fd5b505050506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508181600001600082825461113e9190611ccb565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15838460405161118d929190611a79565b60405180910390a250600160028190555050565b600160149054906101000a900460ff16156111f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e890611758565b60405180910390fd5b6002805403611235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122c906117c4565b60405180910390fd5b600280819055506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061128e8260000154610cf6565b90506000612710600a54836112a39190611c1d565b6112ad9190611d2e565b9050808484600101546112c09190611ccb565b1115611301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f890611dab565b60405180910390fd5b838360010160008282546113159190611ccb565b92505081905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401611379929190611928565b6020604051808303816000875af1158015611398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bc9190611a4c565b503373ffffffffffffffffffffffffffffffffffffffff167fcbc04eca7e9da35cb1393a6135a199ca52e450d5e9251cbd99f7847d33a36750856040516114039190611464565b60405180910390a2505050600160028190555050565b600b5481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b6000819050919050565b61145e8161144b565b82525050565b60006020820190506114796000830184611455565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114c46114bf6114ba8461147f565b61149f565b61147f565b9050919050565b60006114d6826114a9565b9050919050565b60006114e8826114cb565b9050919050565b6114f8816114dd565b82525050565b600060208201905061151360008301846114ef565b92915050565b600080fd5b6115278161144b565b811461153257600080fd5b50565b6000813590506115448161151e565b92915050565b6000602082840312156115605761155f611519565b5b600061156e84828501611535565b91505092915050565b60006115828261147f565b9050919050565b61159281611577565b811461159d57600080fd5b50565b6000813590506115af81611589565b92915050565b6000602082840312156115cb576115ca611519565b5b60006115d9848285016115a0565b91505092915050565b60008115159050919050565b6115f7816115e2565b82525050565b600060208201905061161260008301846115ee565b92915050565b600060608201905061162d6000830186611455565b61163a6020830185611455565b6116476040830184611455565b949350505050565b6000819050919050565b6116628161164f565b82525050565b600060208201905061167d6000830184611659565b92915050565b600061168e826114cb565b9050919050565b61169e81611683565b82525050565b60006020820190506116b96000830184611695565b92915050565b60006116ca826114cb565b9050919050565b6116da816116bf565b82525050565b60006020820190506116f560008301846116d1565b92915050565b600082825260208201905092915050565b7f5061757365640000000000000000000000000000000000000000000000000000600082015250565b60006117426006836116fb565b915061174d8261170c565b602082019050919050565b6000602082019050818103600083015261177181611735565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006117ae601f836116fb565b91506117b982611778565b602082019050919050565b600060208201905081810360008301526117dd816117a1565b9050919050565b7f496e76616c696420736861726520616d6f756e74000000000000000000000000600082015250565b600061181a6014836116fb565b9150611825826117e4565b602082019050919050565b600060208201905081810360008301526118498161180d565b9050919050565b61185981611577565b82525050565b60006020820190506118746000830184611850565b92915050565b6000815190506118898161151e565b92915050565b6000602082840312156118a5576118a4611519565b5b60006118b38482850161187a565b91505092915050565b7f496e73756666696369656e742073686172657300000000000000000000000000600082015250565b60006118f26013836116fb565b91506118fd826118bc565b602082019050919050565b60006020820190508181036000830152611921816118e5565b9050919050565b600060408201905061193d6000830185611850565b61194a6020830184611455565b9392505050565b7f4e6f7420656e6f75676820636f6c6c61746572616c0000000000000000000000600082015250565b60006119876015836116fb565b915061199282611951565b602082019050919050565b600060208201905081810360008301526119b68161197a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119f78261144b565b9150611a028361144b565b9250828203905081811115611a1a57611a196119bd565b5b92915050565b611a29816115e2565b8114611a3457600080fd5b50565b600081519050611a4681611a20565b92915050565b600060208284031215611a6257611a61611519565b5b6000611a7084828501611a37565b91505092915050565b6000604082019050611a8e6000830185611455565b611a9b6020830184611455565b9392505050565b7f4e6f206465627400000000000000000000000000000000000000000000000000600082015250565b6000611ad86007836116fb565b9150611ae382611aa2565b602082019050919050565b60006020820190508181036000830152611b0781611acb565b9050919050565b6000606082019050611b236000830186611850565b611b306020830185611850565b611b3d6040830184611455565b949350505050565b7f4e6f7420616e2061646d696e0000000000000000000000000000000000000000600082015250565b6000611b7b600c836116fb565b9150611b8682611b45565b602082019050919050565b60006020820190508181036000830152611baa81611b6e565b9050919050565b7f52656365697074546f6b656e20616c7265616479207365740000000000000000600082015250565b6000611be76018836116fb565b9150611bf282611bb1565b602082019050919050565b60006020820190508181036000830152611c1681611bda565b9050919050565b6000611c288261144b565b9150611c338361144b565b9250828202611c418161144b565b91508282048414831517611c5857611c576119bd565b5b5092915050565b7f43616e6e6f74206465706f736974203000000000000000000000000000000000600082015250565b6000611c956010836116fb565b9150611ca082611c5f565b602082019050919050565b60006020820190508181036000830152611cc481611c88565b9050919050565b6000611cd68261144b565b9150611ce18361144b565b9250828201905080821115611cf957611cf86119bd565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611d398261144b565b9150611d448361144b565b925082611d5457611d53611cff565b5b828204905092915050565b7f4578636565647320626f72726f77206c696d6974000000000000000000000000600082015250565b6000611d956014836116fb565b9150611da082611d5f565b602082019050919050565b60006020820190508181036000830152611dc481611d88565b905091905056fea26469706673582212204c70d64546dc0faef95470599816731bad6f3974df2026028419038d9ca42c1764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB2016BD4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xE4864731 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xEC78E832 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xFD2DA339 EQ PUSH2 0x39A JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7F5007ED EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x82FEE08F EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xA62B75A8 EQ PUSH2 0x2EA JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x429B62E5 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x4D99F714 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x613CF420 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x6C321C8A EQ PUSH2 0x256 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1F68F20A EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x371FD8E6 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0xA2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xB29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0xDCD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F2 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xED7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH2 0x11A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x366 PUSH2 0x1419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x384 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42B SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 GT PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B9 SWAP1 PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x188F JUMP JUMPDEST LT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x597 SWAP1 PUSH2 0x1908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FD SWAP3 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x62B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x199D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x731 SWAP3 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7BD SWAP3 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x821 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x818 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x865 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85C SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD DUP4 GT PUSH2 0x909 JUMPI DUP3 PUSH2 0x90F JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x970 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B3 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5C16DE4F8B59BD9CAF0F49A545F25819A895ED223294290B408242E72A594231 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAC SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH1 0x40 MLOAD PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAB SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3C SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB3596F07 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x188F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4F SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH1 0x40 MLOAD PUSH2 0xEA1 SWAP2 SWAP1 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1E SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xF6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF62 SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 GT PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAC SWAP1 PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1033 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1057 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP3 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x113E SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP4 DUP5 PUSH1 0x40 MLOAD PUSH2 0x118D SWAP3 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E8 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1235 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122C SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x128E DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0xA SLOAD DUP4 PUSH2 0x12A3 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x12AD SWAP2 SWAP1 PUSH2 0x1D2E JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x12C0 SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST GT ISZERO PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F8 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1315 SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1379 SWAP3 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1398 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13BC SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBC04ECA7E9DA35CB1393A6135A199CA52E450D5E9251CBD99F7847D33A36750 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1403 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145E DUP2 PUSH2 0x144B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1479 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C4 PUSH2 0x14BF PUSH2 0x14BA DUP5 PUSH2 0x147F JUMP JUMPDEST PUSH2 0x149F JUMP JUMPDEST PUSH2 0x147F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D6 DUP3 PUSH2 0x14A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E8 DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F8 DUP2 PUSH2 0x14DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1513 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1527 DUP2 PUSH2 0x144B JUMP JUMPDEST DUP2 EQ PUSH2 0x1532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1544 DUP2 PUSH2 0x151E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1560 JUMPI PUSH2 0x155F PUSH2 0x1519 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x156E DUP5 DUP3 DUP6 ADD PUSH2 0x1535 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1582 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1592 DUP2 PUSH2 0x1577 JUMP JUMPDEST DUP2 EQ PUSH2 0x159D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15AF DUP2 PUSH2 0x1589 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CB JUMPI PUSH2 0x15CA PUSH2 0x1519 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D9 DUP5 DUP3 DUP6 ADD PUSH2 0x15A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F7 DUP2 PUSH2 0x15E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1612 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x162D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x163A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x1647 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1455 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1662 DUP2 PUSH2 0x164F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x167D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1659 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169E DUP2 PUSH2 0x1683 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1695 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CA DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16DA DUP2 PUSH2 0x16BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757365640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1742 PUSH1 0x6 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x174D DUP3 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1771 DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AE PUSH1 0x1F DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x17B9 DUP3 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17DD DUP2 PUSH2 0x17A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420736861726520616D6F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181A PUSH1 0x14 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1825 DUP3 PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1849 DUP2 PUSH2 0x180D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1859 DUP2 PUSH2 0x1577 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1874 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1850 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1889 DUP2 PUSH2 0x151E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A5 JUMPI PUSH2 0x18A4 PUSH2 0x1519 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B3 DUP5 DUP3 DUP6 ADD PUSH2 0x187A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742073686172657300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F2 PUSH1 0x13 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x18FD DUP3 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1921 DUP2 PUSH2 0x18E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x193D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x194A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1455 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820636F6C6C61746572616C0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1987 PUSH1 0x15 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1992 DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19B6 DUP2 PUSH2 0x197A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19F7 DUP3 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A02 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A19 PUSH2 0x19BD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A29 DUP2 PUSH2 0x15E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A46 DUP2 PUSH2 0x1A20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A62 JUMPI PUSH2 0x1A61 PUSH2 0x1519 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A70 DUP5 DUP3 DUP6 ADD PUSH2 0x1A37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A8E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x1A9B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1455 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F206465627400000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD8 PUSH1 0x7 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE3 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B07 DUP2 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B23 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x1B30 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x1B3D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1455 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7B PUSH1 0xC DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B86 DUP3 PUSH2 0x1B45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BAA DUP2 PUSH2 0x1B6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52656365697074546F6B656E20616C7265616479207365740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE7 PUSH1 0x18 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF2 DUP3 PUSH2 0x1BB1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C28 DUP3 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C33 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C41 DUP2 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x19BD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206465706F736974203000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C95 PUSH1 0x10 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA0 DUP3 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC4 DUP2 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD6 DUP3 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE1 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CF9 JUMPI PUSH2 0x1CF8 PUSH2 0x19BD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D39 DUP3 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D44 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D54 JUMPI PUSH2 0x1D53 PUSH2 0x1CFF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578636565647320626F72726F77206C696D6974000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D95 PUSH1 0x14 DUP4 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA0 DUP3 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC4 DUP2 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH17 0xD64546DC0FAEF95470599816731BAD6F39 PUSH21 0xDF2026028419038D9CA42C1764736F6C6343000814 STOP CALLER ","sourceMap":"803:8400:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1652:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2480:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6050:893;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7822:616;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9093:107;;;:::i;:::-;;1027:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4864:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1273:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2175:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1682:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;960:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2304:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8588:387;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8983:102;;;:::i;:::-;;1719:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1832:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5302:677;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7009:766;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2345:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1952:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1747:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1652:23;;;;:::o;2480:31::-;;;;;;;;;;;;;:::o;6050:893::-;3590:6;;;;;;;;;;;3589:7;3581:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;1468:1:::1;3403:7:::0;::::1;:18:::0;3395:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1468:1;3468:7:::0;:17:::1;;;;6148:1:::2;6139:6;:10;6131:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;6292:6;6254:12;;;;;;;;;;;:22;;;6277:10;6254:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;6246:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6472:12;;;;;;;;;;;:17;;;6490:10;6502:6;6472:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;6584:29;6616:13;:25;6630:10;6616:25;;;;;;;;;;;;;;;6584:57;;6689:6;6660:8;:25;;;:35;;6652:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6761:6;6732:8;:25;;;:35;;;;;;;:::i;:::-;;;;;;;;6837:15;;;;;;;;;;;:24;;;6862:10;6874:6;6837:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6908:10;6899:36;;;6920:6;6928;6899:36;;;;;;;:::i;:::-;;;;;;;;6120:823;1425:1:::1;3508:7;:21;;;;6050:893:::0;:::o;7822:616::-;3590:6;;;;;;;;;;;3589:7;3581:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;1468:1:::1;3403:7:::0;::::1;:18:::0;3395:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1468:1;3468:7:::0;:17:::1;;;;7905:29:::2;7937:13;:25;7951:10;7937:25;;;;;;;;;;;;;;;7905:57;;8007:1;7981:8;:23;;;:27;7973:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;8033:19;8069:8;:23;;;8055:11;:37;:103;;8147:11;8055:103;;;8108:8;:23;;;8055:103;8033:125;;8221:15;;;;;;;;;;;:28;;;8250:10;8270:4;8277:11;8221:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8371:11;8344:8;:23;;;:38;;;;;;;:::i;:::-;;;;;;;;8406:10;8400:30;;;8418:11;8400:30;;;;;;:::i;:::-;;;;;;;;7894:544;;1425:1:::1;3508:7;:21;;;;7822:616:::0;:::o;9093:107::-;3297:6;:18;3304:10;3297:18;;;;;;;;;;;;;;;;;;;;;;;;;3289:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;9151:5:::1;9142:6;;:14;;;;;;;;;;;;;;;;;;9172:20;9181:10;9172:20;;;;;;:::i;:::-;;;;;;;;9093:107::o:0;1027:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;4864:211::-;3297:6;:18;3304:10;3297:18;;;;;;;;;;;;;;;;;;;;;;;;;3289:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;4983:1:::1;4950:35;;4958:12;;;;;;;;;;;4950:35;;;4942:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;5053:13;5025:12;;:42;;;;;;;;;;;;;;;;;;4864:211:::0;:::o;1273:18::-;;;;;;;;;;;;;:::o;2175:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1682:30::-;;;;:::o;960:60::-;997:23;960:60;:::o;2304:34::-;;;;:::o;8588:387::-;8659:7;8785:13;8801:11;;;;;;;;;;;:25;;;8835:15;;;;;;;;;;;8801:51;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8785:67;;8962:5;8947:12;:20;;;;:::i;:::-;8940:27;;;8588:387;;;:::o;8983:102::-;3297:6;:18;3304:10;3297:18;;;;;;;;;;;;;;;;;;;;;;;;;3289:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;9039:4:::1;9030:6:::0;::::1;:13;;;;;;;;;;;;;;;;;;9059:18;9066:10;9059:18;;;;;;:::i;:::-;;;;;;;;8983:102::o:0;1719:21::-;;;;:::o;1832:29::-;;;;;;;;;;;;;:::o;5302:677::-;3590:6;;;;;;;;;;;3589:7;3581:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;1468:1:::1;3403:7:::0;::::1;:18:::0;3395:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1468:1;3468:7:::0;:17:::1;;;;5399:1:::2;5390:6;:10;5382:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;5496:15;;;;;;;;;;;:28;;;5525:10;5545:4;5552:6;5496:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5729:12;;;;;;;;;;;:17;;;5747:10;5759:6;5729:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5815:29;5847:13;:25;5861:10;5847:25;;;;;;;;;;;;;;;5815:57;;5912:6;5883:8;:25;;;:35;;;;;;;:::i;:::-;;;;;;;;5944:10;5936:35;;;5956:6;5964;5936:35;;;;;;;:::i;:::-;;;;;;;;5371:608;1425:1:::1;3508:7;:21;;;;5302:677:::0;:::o;7009:766::-;3590:6;;;;;;;;;;;3589:7;3581:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;1468:1:::1;3403:7:::0;::::1;:18:::0;3395:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1468:1;3468:7:::0;:17:::1;;;;7094:29:::2;7126:13;:25;7140:10;7126:25;;;;;;;;;;;;;;;7094:57;;7162:23;7188:45;7207:8;:25;;;7188:18;:45::i;:::-;7162:71;;7340:17;7402:5;7379:19;;7361:15;:37;;;;:::i;:::-;7360:47;;;;:::i;:::-;7340:67;;7468:9;7452:12;7426:8;:23;;;:38;;;;:::i;:::-;:51;;7418:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;7579:12;7552:8;:23;;;:39;;;;;;;:::i;:::-;;;;;;;;7667:15;;;;;;;;;;;:24;;;7692:10;7704:12;7667:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7742:10;7735:32;;;7754:12;7735:32;;;;;;:::i;:::-;;;;;;;;7083:692;;;1425:1:::1;3508:7;:21;;;;7009:766:::0;:::o;2345:38::-;;;;:::o;1952:32::-;;;;;;;;;;;;;:::o;1747:19::-;;;;:::o;7:77:17:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:60::-;602:3;623:5;616:12;;574:60;;;:::o;640:142::-;690:9;723:53;741:34;750:24;768:5;750:24;:::i;:::-;741:34;:::i;:::-;723:53;:::i;:::-;710:66;;640:142;;;:::o;788:126::-;838:9;871:37;902:5;871:37;:::i;:::-;858:50;;788:126;;;:::o;920:147::-;991:9;1024:37;1055:5;1024:37;:::i;:::-;1011:50;;920:147;;;:::o;1073:173::-;1181:58;1233:5;1181:58;:::i;:::-;1176:3;1169:71;1073:173;;:::o;1252:264::-;1366:4;1404:2;1393:9;1389:18;1381:26;;1417:92;1506:1;1495:9;1491:17;1482:6;1417:92;:::i;:::-;1252:264;;;;:::o;1603:117::-;1712:1;1709;1702:12;1849:122;1922:24;1940:5;1922:24;:::i;:::-;1915:5;1912:35;1902:63;;1961:1;1958;1951:12;1902:63;1849:122;:::o;1977:139::-;2023:5;2061:6;2048:20;2039:29;;2077:33;2104:5;2077:33;:::i;:::-;1977:139;;;;:::o;2122:329::-;2181:6;2230:2;2218:9;2209:7;2205:23;2201:32;2198:119;;;2236:79;;:::i;:::-;2198:119;2356:1;2381:53;2426:7;2417:6;2406:9;2402:22;2381:53;:::i;:::-;2371:63;;2327:117;2122:329;;;;:::o;2457:96::-;2494:7;2523:24;2541:5;2523:24;:::i;:::-;2512:35;;2457:96;;;:::o;2559:122::-;2632:24;2650:5;2632:24;:::i;:::-;2625:5;2622:35;2612:63;;2671:1;2668;2661:12;2612:63;2559:122;:::o;2687:139::-;2733:5;2771:6;2758:20;2749:29;;2787:33;2814:5;2787:33;:::i;:::-;2687:139;;;;:::o;2832:329::-;2891:6;2940:2;2928:9;2919:7;2915:23;2911:32;2908:119;;;2946:79;;:::i;:::-;2908:119;3066:1;3091:53;3136:7;3127:6;3116:9;3112:22;3091:53;:::i;:::-;3081:63;;3037:117;2832:329;;;;:::o;3167:90::-;3201:7;3244:5;3237:13;3230:21;3219:32;;3167:90;;;:::o;3263:109::-;3344:21;3359:5;3344:21;:::i;:::-;3339:3;3332:34;3263:109;;:::o;3378:210::-;3465:4;3503:2;3492:9;3488:18;3480:26;;3516:65;3578:1;3567:9;3563:17;3554:6;3516:65;:::i;:::-;3378:210;;;;:::o;3594:442::-;3743:4;3781:2;3770:9;3766:18;3758:26;;3794:71;3862:1;3851:9;3847:17;3838:6;3794:71;:::i;:::-;3875:72;3943:2;3932:9;3928:18;3919:6;3875:72;:::i;:::-;3957;4025:2;4014:9;4010:18;4001:6;3957:72;:::i;:::-;3594:442;;;;;;:::o;4042:77::-;4079:7;4108:5;4097:16;;4042:77;;;:::o;4125:118::-;4212:24;4230:5;4212:24;:::i;:::-;4207:3;4200:37;4125:118;;:::o;4249:222::-;4342:4;4380:2;4369:9;4365:18;4357:26;;4393:71;4461:1;4450:9;4446:17;4437:6;4393:71;:::i;:::-;4249:222;;;;:::o;4477:141::-;4542:9;4575:37;4606:5;4575:37;:::i;:::-;4562:50;;4477:141;;;:::o;4624:161::-;4726:52;4772:5;4726:52;:::i;:::-;4721:3;4714:65;4624:161;;:::o;4791:252::-;4899:4;4937:2;4926:9;4922:18;4914:26;;4950:86;5033:1;5022:9;5018:17;5009:6;4950:86;:::i;:::-;4791:252;;;;:::o;5049:147::-;5120:9;5153:37;5184:5;5153:37;:::i;:::-;5140:50;;5049:147;;;:::o;5202:173::-;5310:58;5362:5;5310:58;:::i;:::-;5305:3;5298:71;5202:173;;:::o;5381:264::-;5495:4;5533:2;5522:9;5518:18;5510:26;;5546:92;5635:1;5624:9;5620:17;5611:6;5546:92;:::i;:::-;5381:264;;;;:::o;5651:169::-;5735:11;5769:6;5764:3;5757:19;5809:4;5804:3;5800:14;5785:29;;5651:169;;;;:::o;5826:156::-;5966:8;5962:1;5954:6;5950:14;5943:32;5826:156;:::o;5988:365::-;6130:3;6151:66;6215:1;6210:3;6151:66;:::i;:::-;6144:73;;6226:93;6315:3;6226:93;:::i;:::-;6344:2;6339:3;6335:12;6328:19;;5988:365;;;:::o;6359:419::-;6525:4;6563:2;6552:9;6548:18;6540:26;;6612:9;6606:4;6602:20;6598:1;6587:9;6583:17;6576:47;6640:131;6766:4;6640:131;:::i;:::-;6632:139;;6359:419;;;:::o;6784:181::-;6924:33;6920:1;6912:6;6908:14;6901:57;6784:181;:::o;6971:366::-;7113:3;7134:67;7198:2;7193:3;7134:67;:::i;:::-;7127:74;;7210:93;7299:3;7210:93;:::i;:::-;7328:2;7323:3;7319:12;7312:19;;6971:366;;;:::o;7343:419::-;7509:4;7547:2;7536:9;7532:18;7524:26;;7596:9;7590:4;7586:20;7582:1;7571:9;7567:17;7560:47;7624:131;7750:4;7624:131;:::i;:::-;7616:139;;7343:419;;;:::o;7768:170::-;7908:22;7904:1;7896:6;7892:14;7885:46;7768:170;:::o;7944:366::-;8086:3;8107:67;8171:2;8166:3;8107:67;:::i;:::-;8100:74;;8183:93;8272:3;8183:93;:::i;:::-;8301:2;8296:3;8292:12;8285:19;;7944:366;;;:::o;8316:419::-;8482:4;8520:2;8509:9;8505:18;8497:26;;8569:9;8563:4;8559:20;8555:1;8544:9;8540:17;8533:47;8597:131;8723:4;8597:131;:::i;:::-;8589:139;;8316:419;;;:::o;8741:118::-;8828:24;8846:5;8828:24;:::i;:::-;8823:3;8816:37;8741:118;;:::o;8865:222::-;8958:4;8996:2;8985:9;8981:18;8973:26;;9009:71;9077:1;9066:9;9062:17;9053:6;9009:71;:::i;:::-;8865:222;;;;:::o;9093:143::-;9150:5;9181:6;9175:13;9166:22;;9197:33;9224:5;9197:33;:::i;:::-;9093:143;;;;:::o;9242:351::-;9312:6;9361:2;9349:9;9340:7;9336:23;9332:32;9329:119;;;9367:79;;:::i;:::-;9329:119;9487:1;9512:64;9568:7;9559:6;9548:9;9544:22;9512:64;:::i;:::-;9502:74;;9458:128;9242:351;;;;:::o;9599:169::-;9739:21;9735:1;9727:6;9723:14;9716:45;9599:169;:::o;9774:366::-;9916:3;9937:67;10001:2;9996:3;9937:67;:::i;:::-;9930:74;;10013:93;10102:3;10013:93;:::i;:::-;10131:2;10126:3;10122:12;10115:19;;9774:366;;;:::o;10146:419::-;10312:4;10350:2;10339:9;10335:18;10327:26;;10399:9;10393:4;10389:20;10385:1;10374:9;10370:17;10363:47;10427:131;10553:4;10427:131;:::i;:::-;10419:139;;10146:419;;;:::o;10571:332::-;10692:4;10730:2;10719:9;10715:18;10707:26;;10743:71;10811:1;10800:9;10796:17;10787:6;10743:71;:::i;:::-;10824:72;10892:2;10881:9;10877:18;10868:6;10824:72;:::i;:::-;10571:332;;;;;:::o;10909:171::-;11049:23;11045:1;11037:6;11033:14;11026:47;10909:171;:::o;11086:366::-;11228:3;11249:67;11313:2;11308:3;11249:67;:::i;:::-;11242:74;;11325:93;11414:3;11325:93;:::i;:::-;11443:2;11438:3;11434:12;11427:19;;11086:366;;;:::o;11458:419::-;11624:4;11662:2;11651:9;11647:18;11639:26;;11711:9;11705:4;11701:20;11697:1;11686:9;11682:17;11675:47;11739:131;11865:4;11739:131;:::i;:::-;11731:139;;11458:419;;;:::o;11883:180::-;11931:77;11928:1;11921:88;12028:4;12025:1;12018:15;12052:4;12049:1;12042:15;12069:194;12109:4;12129:20;12147:1;12129:20;:::i;:::-;12124:25;;12163:20;12181:1;12163:20;:::i;:::-;12158:25;;12207:1;12204;12200:9;12192:17;;12231:1;12225:4;12222:11;12219:37;;;12236:18;;:::i;:::-;12219:37;12069:194;;;;:::o;12269:116::-;12339:21;12354:5;12339:21;:::i;:::-;12332:5;12329:32;12319:60;;12375:1;12372;12365:12;12319:60;12269:116;:::o;12391:137::-;12445:5;12476:6;12470:13;12461:22;;12492:30;12516:5;12492:30;:::i;:::-;12391:137;;;;:::o;12534:345::-;12601:6;12650:2;12638:9;12629:7;12625:23;12621:32;12618:119;;;12656:79;;:::i;:::-;12618:119;12776:1;12801:61;12854:7;12845:6;12834:9;12830:22;12801:61;:::i;:::-;12791:71;;12747:125;12534:345;;;;:::o;12885:332::-;13006:4;13044:2;13033:9;13029:18;13021:26;;13057:71;13125:1;13114:9;13110:17;13101:6;13057:71;:::i;:::-;13138:72;13206:2;13195:9;13191:18;13182:6;13138:72;:::i;:::-;12885:332;;;;;:::o;13223:157::-;13363:9;13359:1;13351:6;13347:14;13340:33;13223:157;:::o;13386:365::-;13528:3;13549:66;13613:1;13608:3;13549:66;:::i;:::-;13542:73;;13624:93;13713:3;13624:93;:::i;:::-;13742:2;13737:3;13733:12;13726:19;;13386:365;;;:::o;13757:419::-;13923:4;13961:2;13950:9;13946:18;13938:26;;14010:9;14004:4;14000:20;13996:1;13985:9;13981:17;13974:47;14038:131;14164:4;14038:131;:::i;:::-;14030:139;;13757:419;;;:::o;14182:442::-;14331:4;14369:2;14358:9;14354:18;14346:26;;14382:71;14450:1;14439:9;14435:17;14426:6;14382:71;:::i;:::-;14463:72;14531:2;14520:9;14516:18;14507:6;14463:72;:::i;:::-;14545;14613:2;14602:9;14598:18;14589:6;14545:72;:::i;:::-;14182:442;;;;;;:::o;14630:162::-;14770:14;14766:1;14758:6;14754:14;14747:38;14630:162;:::o;14798:366::-;14940:3;14961:67;15025:2;15020:3;14961:67;:::i;:::-;14954:74;;15037:93;15126:3;15037:93;:::i;:::-;15155:2;15150:3;15146:12;15139:19;;14798:366;;;:::o;15170:419::-;15336:4;15374:2;15363:9;15359:18;15351:26;;15423:9;15417:4;15413:20;15409:1;15398:9;15394:17;15387:47;15451:131;15577:4;15451:131;:::i;:::-;15443:139;;15170:419;;;:::o;15595:174::-;15735:26;15731:1;15723:6;15719:14;15712:50;15595:174;:::o;15775:366::-;15917:3;15938:67;16002:2;15997:3;15938:67;:::i;:::-;15931:74;;16014:93;16103:3;16014:93;:::i;:::-;16132:2;16127:3;16123:12;16116:19;;15775:366;;;:::o;16147:419::-;16313:4;16351:2;16340:9;16336:18;16328:26;;16400:9;16394:4;16390:20;16386:1;16375:9;16371:17;16364:47;16428:131;16554:4;16428:131;:::i;:::-;16420:139;;16147:419;;;:::o;16572:410::-;16612:7;16635:20;16653:1;16635:20;:::i;:::-;16630:25;;16669:20;16687:1;16669:20;:::i;:::-;16664:25;;16724:1;16721;16717:9;16746:30;16764:11;16746:30;:::i;:::-;16735:41;;16925:1;16916:7;16912:15;16909:1;16906:22;16886:1;16879:9;16859:83;16836:139;;16955:18;;:::i;:::-;16836:139;16620:362;16572:410;;;;:::o;16988:166::-;17128:18;17124:1;17116:6;17112:14;17105:42;16988:166;:::o;17160:366::-;17302:3;17323:67;17387:2;17382:3;17323:67;:::i;:::-;17316:74;;17399:93;17488:3;17399:93;:::i;:::-;17517:2;17512:3;17508:12;17501:19;;17160:366;;;:::o;17532:419::-;17698:4;17736:2;17725:9;17721:18;17713:26;;17785:9;17779:4;17775:20;17771:1;17760:9;17756:17;17749:47;17813:131;17939:4;17813:131;:::i;:::-;17805:139;;17532:419;;;:::o;17957:191::-;17997:3;18016:20;18034:1;18016:20;:::i;:::-;18011:25;;18050:20;18068:1;18050:20;:::i;:::-;18045:25;;18093:1;18090;18086:9;18079:16;;18114:3;18111:1;18108:10;18105:36;;;18121:18;;:::i;:::-;18105:36;17957:191;;;;:::o;18154:180::-;18202:77;18199:1;18192:88;18299:4;18296:1;18289:15;18323:4;18320:1;18313:15;18340:185;18380:1;18397:20;18415:1;18397:20;:::i;:::-;18392:25;;18431:20;18449:1;18431:20;:::i;:::-;18426:25;;18470:1;18460:35;;18475:18;;:::i;:::-;18460:35;18517:1;18514;18510:9;18505:14;;18340:185;;;;:::o;18531:170::-;18671:22;18667:1;18659:6;18655:14;18648:46;18531:170;:::o;18707:366::-;18849:3;18870:67;18934:2;18929:3;18870:67;:::i;:::-;18863:74;;18946:93;19035:3;18946:93;:::i;:::-;19064:2;19059:3;19055:12;19048:19;;18707:366;;;:::o;19079:419::-;19245:4;19283:2;19272:9;19268:18;19260:26;;19332:9;19326:4;19322:20;19318:1;19307:9;19303:17;19296:47;19360:131;19486:4;19360:131;:::i;:::-;19352:139;;19079:419;;;:::o"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","admins(address)":"429b62e5","baseRate()":"1f68f20a","borrow(uint256)":"c5ebeaec","collateralFactorBps()":"7f5007ed","collateralToken()":"b2016bd4","deposit(uint256)":"b6b55f25","getCollateralValue(uint256)":"82fee08f","kink()":"fd2da339","liquidationThresholdBps()":"e4864731","pause()":"8456cb59","paused()":"5c975abb","priceOracle()":"2630c12f","receiptToken()":"ec78e832","repay(uint256)":"371fd8e6","setReceiptToken(address)":"4d99f714","slope1()":"a62b75a8","unpause()":"3f4ba83a","userPositions(address)":"613cf420","utilizationRate()":"6c321c8a","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateralFactorBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationThresholdBps\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralSeized\",\"type\":\"uint256\"}],\"name\":\"Liquidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralFactorBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collatAmount\",\"type\":\"uint256\"}],\"name\":\"getCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationThresholdBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiptToken\",\"outputs\":[{\"internalType\":\"contract ReceiptToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiptToken\",\"type\":\"address\"}],\"name\":\"setReceiptToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slope1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userPositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastInterestBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilizationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolNovel\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(uint256)\":{\"notice\":\"Borrow up to the user's collateral limit\"},\"deposit(uint256)\":{\"notice\":\"Deposit collateral and receive 1:1 receipt tokens\"},\"repay(uint256)\":{\"notice\":\"Repay borrowed tokens\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw collateral by burning receipt tokens\"}},\"notice\":\"A simplified lending pool that can deposit, withdraw, borrow, and repay,         using a single collateral token and a single receipt token.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LendingPoolNovel.sol\":\"LendingPoolNovel\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/IPriceOracle.sol\":{\"keccak256\":\"0xc584ef3feff07b3751b802d5b65babe6f690d6fa7fa6dc038eaaf8b0e2dfc76d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ce43275ebc2be7a22a65ff54164f50c7f46551576781b15668b35d3f4ac3c4f\",\"dweb:/ipfs/QmZQx478L2fVDZ5qeJBgbYsraZaefjCPR1nYmkJg87SF5L\"]},\"contracts/ITimelockController.sol\":{\"keccak256\":\"0x377a5a039531965865d59dfbfe3288de75943876f8b0d6b5a352c2b7b25a78e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c870698b5dc856551a77a9c58b8706d5d892fd1e0c5ebf9402226e4989eadb58\",\"dweb:/ipfs/QmcXEWgbYrKPwbpPqqNBvqgjqV2zm6h8hQtrFkUc1Ey7UW\"]},\"contracts/LendingPoolNovel.sol\":{\"keccak256\":\"0xa6c0a854e12e20806d83dc105586598da372dca2674bb98901951c21a2099f8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f290764c52f58e8dff6d0524be9e3c03760e1c6604273d9b92653f7dda259b2b\",\"dweb:/ipfs/QmQGfLzNMh5Lg6pdM79xNG6D7NmnDdEfF8XdHHYKVETEBK\"]},\"contracts/ReceiptToken.sol\":{\"keccak256\":\"0x32a6cd3b7cd7a992980f916c87cff3e2281d490cf762fb3f0dd3fa05a254a8e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48d2384ff8c6ccce877db0cfd5f40e698080e90f0e88842d935f8c7c184b16d0\",\"dweb:/ipfs/QmeF1ED2xLB1JR9xX8o5Vc21eZJqaw12sCJq65VvRFbmY5\"]}},\"version\":1}"}},"contracts/ReceiptToken.sol":{"ReceiptToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"BURNER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_5289":{"entryPoint":null,"id":5289,"parameterSlots":0,"returnSlots":0},"@_567":{"entryPoint":null,"id":567,"parameterSlots":2,"returnSlots":0},"@_grantRole_256":{"entryPoint":192,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_1146":{"entryPoint":559,"id":1146,"parameterSlots":0,"returnSlots":1},"@hasRole_80":{"entryPoint":452,"id":80,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":725,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":567,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1046,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":861,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1007,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":881,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1201,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":672,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1171,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":871,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1139,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":625,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":578,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":921,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":762,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1126,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":979,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":775,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":931,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":974,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:17","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:17","statements":[{"nodeType":"YulAssignment","src":"77:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:17"},"nodeType":"YulFunctionCall","src":"87:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:17","type":""}],"src":"7:99:17"},{"body":{"nodeType":"YulBlock","src":"140:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:17"},"nodeType":"YulFunctionCall","src":"150:88:17"},"nodeType":"YulExpressionStatement","src":"150:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:17"},"nodeType":"YulFunctionCall","src":"247:15:17"},"nodeType":"YulExpressionStatement","src":"247:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:17"},"nodeType":"YulFunctionCall","src":"271:15:17"},"nodeType":"YulExpressionStatement","src":"271:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:17"},{"body":{"nodeType":"YulBlock","src":"326:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:17"},"nodeType":"YulFunctionCall","src":"336:88:17"},"nodeType":"YulExpressionStatement","src":"336:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:15:17"},"nodeType":"YulExpressionStatement","src":"433:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:17"},"nodeType":"YulFunctionCall","src":"457:15:17"},"nodeType":"YulExpressionStatement","src":"457:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:17"},{"body":{"nodeType":"YulBlock","src":"535:269:17","statements":[{"nodeType":"YulAssignment","src":"545:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:17"},"nodeType":"YulFunctionCall","src":"555:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:17"},"nodeType":"YulFunctionCall","src":"602:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:17","statements":[{"nodeType":"YulAssignment","src":"667:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:17"},"nodeType":"YulFunctionCall","src":"677:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:17"},"nodeType":"YulFunctionCall","src":"626:26:17"},"nodeType":"YulIf","src":"623:81:17"},{"body":{"nodeType":"YulBlock","src":"756:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:17"},"nodeType":"YulFunctionCall","src":"770:18:17"},"nodeType":"YulExpressionStatement","src":"770:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:17"},"nodeType":"YulFunctionCall","src":"740:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:17"},"nodeType":"YulFunctionCall","src":"717:38:17"},"nodeType":"YulIf","src":"714:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:17","type":""}],"src":"484:320:17"},{"body":{"nodeType":"YulBlock","src":"864:87:17","statements":[{"nodeType":"YulAssignment","src":"874:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:17"},"nodeType":"YulFunctionCall","src":"895:14:17"},"nodeType":"YulExpressionStatement","src":"895:14:17"},{"nodeType":"YulAssignment","src":"918:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:17"},"nodeType":"YulFunctionCall","src":"926:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:17","type":""}],"src":"810:141:17"},{"body":{"nodeType":"YulBlock","src":"1001:49:17","statements":[{"nodeType":"YulAssignment","src":"1011:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:17"},"nodeType":"YulFunctionCall","src":"1025:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:17"},"nodeType":"YulFunctionCall","src":"1021:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:17","type":""}],"src":"957:93:17"},{"body":{"nodeType":"YulBlock","src":"1109:54:17","statements":[{"nodeType":"YulAssignment","src":"1119:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:17"},"nodeType":"YulFunctionCall","src":"1140:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:17","type":""}],"src":"1056:107:17"},{"body":{"nodeType":"YulBlock","src":"1245:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:17"},"nodeType":"YulFunctionCall","src":"1272:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:17"},"nodeType":"YulFunctionCall","src":"1311:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:17","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:17"},"nodeType":"YulFunctionCall","src":"1429:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:17"}]},{"nodeType":"YulAssignment","src":"1477:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:17"},"nodeType":"YulFunctionCall","src":"1497:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:17"},"nodeType":"YulFunctionCall","src":"1486:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:17"}]},{"nodeType":"YulAssignment","src":"1516:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:17"},"nodeType":"YulFunctionCall","src":"1536:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:17"},"nodeType":"YulFunctionCall","src":"1526:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:17","type":""}],"src":"1169:393:17"},{"body":{"nodeType":"YulBlock","src":"1613:32:17","statements":[{"nodeType":"YulAssignment","src":"1623:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:17","type":""}],"src":"1568:77:17"},{"body":{"nodeType":"YulBlock","src":"1683:28:17","statements":[{"nodeType":"YulAssignment","src":"1693:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:17","type":""}],"src":"1651:60:17"},{"body":{"nodeType":"YulBlock","src":"1777:82:17","statements":[{"nodeType":"YulAssignment","src":"1787:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:17"},"nodeType":"YulFunctionCall","src":"1827:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:17"},"nodeType":"YulFunctionCall","src":"1818:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:17"},"nodeType":"YulFunctionCall","src":"1800:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:17","type":""}],"src":"1717:142:17"},{"body":{"nodeType":"YulBlock","src":"1912:28:17","statements":[{"nodeType":"YulAssignment","src":"1922:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:17","type":""}],"src":"1865:75:17"},{"body":{"nodeType":"YulBlock","src":"2022:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:17"},"nodeType":"YulFunctionCall","src":"2056:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:17"},"nodeType":"YulFunctionCall","src":"2145:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:17"},"nodeType":"YulFunctionCall","src":"2166:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:17"},"nodeType":"YulFunctionCall","src":"2117:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:17"},"nodeType":"YulFunctionCall","src":"2104:105:17"},"nodeType":"YulExpressionStatement","src":"2104:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:17","type":""}],"src":"1946:269:17"},{"body":{"nodeType":"YulBlock","src":"2270:24:17","statements":[{"nodeType":"YulAssignment","src":"2280:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:17","type":""}],"src":"2221:73:17"},{"body":{"nodeType":"YulBlock","src":"2353:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:17"},"nodeType":"YulFunctionCall","src":"2377:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:17"},"nodeType":"YulFunctionCall","src":"2418:65:17"},"nodeType":"YulExpressionStatement","src":"2418:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:17","type":""}],"src":"2300:189:17"},{"body":{"nodeType":"YulBlock","src":"2545:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:17"},"nodeType":"YulFunctionCall","src":"2626:39:17"},"nodeType":"YulExpressionStatement","src":"2626:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:17"},"nodeType":"YulFunctionCall","src":"2562:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:17","statements":[{"nodeType":"YulAssignment","src":"2579:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:17"},"nodeType":"YulFunctionCall","src":"2588:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:17","statements":[]},"src":"2555:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:17","type":""}],"src":"2495:186:17"},{"body":{"nodeType":"YulBlock","src":"2766:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:17"},"nodeType":"YulFunctionCall","src":"2822:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:17"},"nodeType":"YulFunctionCall","src":"2906:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:17"},"nodeType":"YulFunctionCall","src":"2892:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:17","statements":[{"nodeType":"YulAssignment","src":"3095:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:17"},"nodeType":"YulFunctionCall","src":"3074:18:17"},"nodeType":"YulIf","src":"3071:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:17"},"nodeType":"YulFunctionCall","src":"3189:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:17"},"nodeType":"YulFunctionCall","src":"3175:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:17"},"nodeType":"YulFunctionCall","src":"3133:80:17"},"nodeType":"YulExpressionStatement","src":"3133:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:17"},"nodeType":"YulFunctionCall","src":"2780:11:17"},"nodeType":"YulIf","src":"2777:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:17","type":""}],"src":"2687:543:17"},{"body":{"nodeType":"YulBlock","src":"3299:54:17","statements":[{"nodeType":"YulAssignment","src":"3309:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:17"},"nodeType":"YulFunctionCall","src":"3330:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:17","type":""}],"src":"3236:117:17"},{"body":{"nodeType":"YulBlock","src":"3410:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:17"},"nodeType":"YulFunctionCall","src":"3465:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:17"},"nodeType":"YulFunctionCall","src":"3480:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:17"},"nodeType":"YulFunctionCall","src":"3436:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:17"},"nodeType":"YulFunctionCall","src":"3432:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:17","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:17"},"nodeType":"YulFunctionCall","src":"3507:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:17","type":""}],"src":"3359:169:17"},{"body":{"nodeType":"YulBlock","src":"3614:214:17","statements":[{"nodeType":"YulAssignment","src":"3747:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:17"},"nodeType":"YulFunctionCall","src":"3755:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:17"}]},{"nodeType":"YulAssignment","src":"3793:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:17"},"nodeType":"YulFunctionCall","src":"3810:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:17"},"nodeType":"YulFunctionCall","src":"3801:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:17","type":""}],"src":"3533:295:17"},{"body":{"nodeType":"YulBlock","src":"3925:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:17"},"nodeType":"YulFunctionCall","src":"3950:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:17"},"nodeType":"YulFunctionCall","src":"4074:18:17"},"nodeType":"YulExpressionStatement","src":"4074:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:17"},"nodeType":"YulFunctionCall","src":"4041:30:17"},"nodeType":"YulIf","src":"4038:56:17"},{"nodeType":"YulVariableDeclaration","src":"4104:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:17"},"nodeType":"YulFunctionCall","src":"4144:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:17"},"nodeType":"YulFunctionCall","src":"4118:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:17"},"nodeType":"YulFunctionCall","src":"4203:67:17"},"nodeType":"YulExpressionStatement","src":"4203:67:17"},{"nodeType":"YulVariableDeclaration","src":"4280:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:17","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:17"},"nodeType":"YulFunctionCall","src":"4413:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:17"},"nodeType":"YulFunctionCall","src":"4401:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:17"},"nodeType":"YulFunctionCall","src":"4451:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:17"},"nodeType":"YulFunctionCall","src":"4608:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:17"},"nodeType":"YulFunctionCall","src":"4602:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:17"},"nodeType":"YulFunctionCall","src":"4587:42:17"},"nodeType":"YulExpressionStatement","src":"4587:42:17"},{"nodeType":"YulAssignment","src":"4646:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:17"},"nodeType":"YulFunctionCall","src":"4656:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:17"}]},{"nodeType":"YulAssignment","src":"4687:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:17"},"nodeType":"YulFunctionCall","src":"4700:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:17"},"nodeType":"YulFunctionCall","src":"4532:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:17","statements":[{"nodeType":"YulAssignment","src":"4549:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:17"},"nodeType":"YulFunctionCall","src":"4554:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:17","statements":[]},"src":"4524:208:17"},{"body":{"nodeType":"YulBlock","src":"4768:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:17"},"nodeType":"YulFunctionCall","src":"4809:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:17"},"nodeType":"YulFunctionCall","src":"4803:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:17"},"nodeType":"YulFunctionCall","src":"4891:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:17"},"nodeType":"YulFunctionCall","src":"4861:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:17"},"nodeType":"YulFunctionCall","src":"4846:64:17"},"nodeType":"YulExpressionStatement","src":"4846:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:17"},"nodeType":"YulFunctionCall","src":"4748:19:17"},"nodeType":"YulIf","src":"4745:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:17"},"nodeType":"YulFunctionCall","src":"4954:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:17"},"nodeType":"YulFunctionCall","src":"4950:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:17"},"nodeType":"YulFunctionCall","src":"4937:36:17"},"nodeType":"YulExpressionStatement","src":"4937:36:17"}]},"nodeType":"YulCase","src":"4365:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:17","statements":[{"nodeType":"YulAssignment","src":"5069:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:17"},"nodeType":"YulFunctionCall","src":"5084:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:17"},"nodeType":"YulFunctionCall","src":"5078:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:17"},"nodeType":"YulIf","src":"5041:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:17"},"nodeType":"YulFunctionCall","src":"5144:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:17"},"nodeType":"YulFunctionCall","src":"5131:81:17"},"nodeType":"YulExpressionStatement","src":"5131:81:17"}]},"nodeType":"YulCase","src":"4992:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:17"},"nodeType":"YulFunctionCall","src":"4342:14:17"},"nodeType":"YulSwitch","src":"4335:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:17","type":""}],"src":"3833:1395:17"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600d81526020017f5265636569707420546f6b656e000000000000000000000000000000000000008152506040518060400160405280600481526020017f72544b4e0000000000000000000000000000000000000000000000000000000081525081600390816200008f9190620004b1565b508060049081620000a19190620004b1565b505050620000b96000801b33620000c060201b60201c565b5062000598565b6000620000d48383620001c460201b60201c565b620001b95760016005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001556200022f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050620001be565b600090505b92915050565b60006005600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002b957607f821691505b602082108103620002cf57620002ce62000271565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003397fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002fa565b620003458683620002fa565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003926200038c62000386846200035d565b62000367565b6200035d565b9050919050565b6000819050919050565b620003ae8362000371565b620003c6620003bd8262000399565b84845462000307565b825550505050565b600090565b620003dd620003ce565b620003ea818484620003a3565b505050565b5b81811015620004125762000406600082620003d3565b600181019050620003f0565b5050565b601f82111562000461576200042b81620002d5565b6200043684620002ea565b8101602085101562000446578190505b6200045e6200045585620002ea565b830182620003ef565b50505b505050565b600082821c905092915050565b6000620004866000198460080262000466565b1980831691505092915050565b6000620004a1838362000473565b9150826002028217905092915050565b620004bc8262000237565b67ffffffffffffffff811115620004d857620004d762000242565b5b620004e48254620002a0565b620004f182828562000416565b600060209050601f83116001811462000529576000841562000514578287015190505b62000520858262000493565b86555062000590565b601f1984166200053986620002d5565b60005b8281101562000563578489015182556001820191506020850194506020810190506200053c565b868310156200058357848901516200057f601f89168262000473565b8355505b6001600288020188555050505b505050505050565b61181c80620005a86000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806340c10f19116100ad578063a217fddf11610071578063a217fddf14610357578063a9059cbb14610375578063d5391393146103a5578063d547741f146103c3578063dd62ed3e146103df5761012c565b806340c10f19146102a157806370a08231146102bd57806391d14854146102ed57806395d89b411461031d5780639dc29fac1461033b5761012c565b8063248a9ca3116100f4578063248a9ca3146101fd578063282c51f31461022d5780632f2ff15d1461024b578063313ce5671461026757806336568abe146102855761012c565b806301ffc9a71461013157806306fdde0314610161578063095ea7b31461017f57806318160ddd146101af57806323b872dd146101cd575b600080fd5b61014b600480360381019061014691906112c2565b61040f565b604051610158919061130a565b60405180910390f35b610169610489565b60405161017691906113b5565b60405180910390f35b6101996004803603810190610194919061146b565b61051b565b6040516101a6919061130a565b60405180910390f35b6101b761053e565b6040516101c491906114ba565b60405180910390f35b6101e760048036038101906101e291906114d5565b610548565b6040516101f4919061130a565b60405180910390f35b6102176004803603810190610212919061155e565b610577565b604051610224919061159a565b60405180910390f35b610235610597565b604051610242919061159a565b60405180910390f35b610265600480360381019061026091906115b5565b6105bb565b005b61026f6105dd565b60405161027c9190611611565b60405180910390f35b61029f600480360381019061029a91906115b5565b6105e6565b005b6102bb60048036038101906102b6919061146b565b610661565b005b6102d760048036038101906102d2919061162c565b61069a565b6040516102e491906114ba565b60405180910390f35b610307600480360381019061030291906115b5565b6106e2565b604051610314919061130a565b60405180910390f35b61032561074d565b60405161033291906113b5565b60405180910390f35b6103556004803603810190610350919061146b565b6107df565b005b61035f610818565b60405161036c919061159a565b60405180910390f35b61038f600480360381019061038a919061146b565b61081f565b60405161039c919061130a565b60405180910390f35b6103ad610842565b6040516103ba919061159a565b60405180910390f35b6103dd60048036038101906103d891906115b5565b610866565b005b6103f960048036038101906103f49190611659565b610888565b60405161040691906114ba565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048257506104818261090f565b5b9050919050565b606060038054610498906116c8565b80601f01602080910402602001604051908101604052809291908181526020018280546104c4906116c8565b80156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b5050505050905090565b600080610526610979565b9050610533818585610981565b600191505092915050565b6000600254905090565b600080610553610979565b9050610560858285610993565b61056b858585610a27565b60019150509392505050565b600060056000838152602001908152602001600020600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b6105c482610577565b6105cd81610b1b565b6105d78383610b2f565b50505050565b60006012905090565b6105ee610979565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610652576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61065c8282610c21565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661068b81610b1b565b6106958383610d14565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006005600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606004805461075c906116c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610788906116c8565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84861080981610b1b565b6108138383610d96565b505050565b6000801b81565b60008061082a610979565b9050610837818585610a27565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61086f82610577565b61087881610b1b565b6108828383610c21565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b61098e8383836001610e18565b505050565b600061099f8484610888565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a215781811015610a11578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a0893929190611708565b60405180910390fd5b610a2084848484036000610e18565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a995760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a90919061173f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b0b5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b02919061173f565b60405180910390fd5b610b16838383610fef565b505050565b610b2c81610b27610979565b611214565b50565b6000610b3b83836106e2565b610c165760016005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610bb3610979565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c1b565b600090505b92915050565b6000610c2d83836106e2565b15610d095760006005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610ca6610979565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d0e565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d865760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d7d919061173f565b60405180910390fd5b610d9260008383610fef565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e085760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610dff919061173f565b60405180910390fd5b610e1482600083610fef565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e8a5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e81919061173f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610efc5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ef3919061173f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610fe9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fe091906114ba565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110415780600260008282546110359190611789565b92505081905550611114565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110cd578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110c493929190611708565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361115d57806002600082825403925050819055506111aa565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161120791906114ba565b60405180910390a3505050565b61121e82826106e2565b6112615780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016112589291906117bd565b60405180910390fd5b5050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61129f8161126a565b81146112aa57600080fd5b50565b6000813590506112bc81611296565b92915050565b6000602082840312156112d8576112d7611265565b5b60006112e6848285016112ad565b91505092915050565b60008115159050919050565b611304816112ef565b82525050565b600060208201905061131f60008301846112fb565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561135f578082015181840152602081019050611344565b60008484015250505050565b6000601f19601f8301169050919050565b600061138782611325565b6113918185611330565b93506113a1818560208601611341565b6113aa8161136b565b840191505092915050565b600060208201905081810360008301526113cf818461137c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611402826113d7565b9050919050565b611412816113f7565b811461141d57600080fd5b50565b60008135905061142f81611409565b92915050565b6000819050919050565b61144881611435565b811461145357600080fd5b50565b6000813590506114658161143f565b92915050565b6000806040838503121561148257611481611265565b5b600061149085828601611420565b92505060206114a185828601611456565b9150509250929050565b6114b481611435565b82525050565b60006020820190506114cf60008301846114ab565b92915050565b6000806000606084860312156114ee576114ed611265565b5b60006114fc86828701611420565b935050602061150d86828701611420565b925050604061151e86828701611456565b9150509250925092565b6000819050919050565b61153b81611528565b811461154657600080fd5b50565b60008135905061155881611532565b92915050565b60006020828403121561157457611573611265565b5b600061158284828501611549565b91505092915050565b61159481611528565b82525050565b60006020820190506115af600083018461158b565b92915050565b600080604083850312156115cc576115cb611265565b5b60006115da85828601611549565b92505060206115eb85828601611420565b9150509250929050565b600060ff82169050919050565b61160b816115f5565b82525050565b60006020820190506116266000830184611602565b92915050565b60006020828403121561164257611641611265565b5b600061165084828501611420565b91505092915050565b600080604083850312156116705761166f611265565b5b600061167e85828601611420565b925050602061168f85828601611420565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116e057607f821691505b6020821081036116f3576116f2611699565b5b50919050565b611702816113f7565b82525050565b600060608201905061171d60008301866116f9565b61172a60208301856114ab565b61173760408301846114ab565b949350505050565b600060208201905061175460008301846116f9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061179482611435565b915061179f83611435565b92508282019050808211156117b7576117b661175a565b5b92915050565b60006040820190506117d260008301856116f9565b6117df602083018461158b565b939250505056fea2646970667358221220a139a79bee064b97786339ecebf492461ff491410d46fe60097bf645d2082c5264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265636569707420546F6B656E00000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x72544B4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x4B1 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x4B1 JUMP JUMPDEST POP POP POP PUSH3 0xB9 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0xC0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x598 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD4 DUP4 DUP4 PUSH3 0x1C4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1B9 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x155 PUSH3 0x22F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x1BE JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2CF JUMPI PUSH3 0x2CE PUSH3 0x271 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x339 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2FA JUMP JUMPDEST PUSH3 0x345 DUP7 DUP4 PUSH3 0x2FA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x392 PUSH3 0x38C PUSH3 0x386 DUP5 PUSH3 0x35D JUMP JUMPDEST PUSH3 0x367 JUMP JUMPDEST PUSH3 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3AE DUP4 PUSH3 0x371 JUMP JUMPDEST PUSH3 0x3C6 PUSH3 0x3BD DUP3 PUSH3 0x399 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x307 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3DD PUSH3 0x3CE JUMP JUMPDEST PUSH3 0x3EA DUP2 DUP5 DUP5 PUSH3 0x3A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x412 JUMPI PUSH3 0x406 PUSH1 0x0 DUP3 PUSH3 0x3D3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x461 JUMPI PUSH3 0x42B DUP2 PUSH3 0x2D5 JUMP JUMPDEST PUSH3 0x436 DUP5 PUSH3 0x2EA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x446 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x45E PUSH3 0x455 DUP6 PUSH3 0x2EA JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3EF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x486 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x466 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A1 DUP4 DUP4 PUSH3 0x473 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4BC DUP3 PUSH3 0x237 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4D8 JUMPI PUSH3 0x4D7 PUSH3 0x242 JUMP JUMPDEST JUMPDEST PUSH3 0x4E4 DUP3 SLOAD PUSH3 0x2A0 JUMP JUMPDEST PUSH3 0x4F1 DUP3 DUP3 DUP6 PUSH3 0x416 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x529 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x514 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x520 DUP6 DUP3 PUSH3 0x493 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x590 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x539 DUP7 PUSH3 0x2D5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x563 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x53C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x583 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x57F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x473 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x181C DUP1 PUSH3 0x5A8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x33B JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x285 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x12C2 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x5E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x162C JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35F PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x482 JUMPI POP PUSH2 0x481 DUP3 PUSH2 0x90F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C4 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x511 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x511 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x526 PUSH2 0x979 JUMP JUMPDEST SWAP1 POP PUSH2 0x533 DUP2 DUP6 DUP6 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x553 PUSH2 0x979 JUMP JUMPDEST SWAP1 POP PUSH2 0x560 DUP6 DUP3 DUP6 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x56B DUP6 DUP6 DUP6 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x5C4 DUP3 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x5CD DUP2 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x5D7 DUP4 DUP4 PUSH2 0xB2F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5EE PUSH2 0x979 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65C DUP3 DUP3 PUSH2 0xC21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x68B DUP2 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x695 DUP4 DUP4 PUSH2 0xD14 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x16C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x809 DUP2 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x813 DUP4 DUP4 PUSH2 0xD96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x82A PUSH2 0x979 JUMP JUMPDEST SWAP1 POP PUSH2 0x837 DUP2 DUP6 DUP6 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x86F DUP3 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x878 DUP2 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x882 DUP4 DUP4 PUSH2 0xC21 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x98E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE18 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99F DUP5 DUP5 PUSH2 0x888 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA21 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA11 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA20 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xE18 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA99 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA90 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB16 DUP4 DUP4 DUP4 PUSH2 0xFEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB2C DUP2 PUSH2 0xB27 PUSH2 0x979 JUMP JUMPDEST PUSH2 0x1214 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3B DUP4 DUP4 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0xC16 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBB3 PUSH2 0x979 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2D DUP4 DUP4 PUSH2 0x6E2 JUMP JUMPDEST ISZERO PUSH2 0xD09 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCA6 PUSH2 0x979 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD86 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7D SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD92 PUSH1 0x0 DUP4 DUP4 PUSH2 0xFEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE08 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFF SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE14 DUP3 PUSH1 0x0 DUP4 PUSH2 0xFEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFE9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFE0 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1041 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1789 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10CD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x115D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11AA JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1207 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x121E DUP3 DUP3 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x1261 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1258 SWAP3 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129F DUP2 PUSH2 0x126A JUMP JUMPDEST DUP2 EQ PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12BC DUP2 PUSH2 0x1296 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D8 JUMPI PUSH2 0x12D7 PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E6 DUP5 DUP3 DUP6 ADD PUSH2 0x12AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1304 DUP2 PUSH2 0x12EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x135F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1387 DUP3 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x1391 DUP2 DUP6 PUSH2 0x1330 JUMP JUMPDEST SWAP4 POP PUSH2 0x13A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x13AA DUP2 PUSH2 0x136B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13CF DUP2 DUP5 PUSH2 0x137C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1402 DUP3 PUSH2 0x13D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1412 DUP2 PUSH2 0x13F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x141D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142F DUP2 PUSH2 0x1409 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1448 DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP2 EQ PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1465 DUP2 PUSH2 0x143F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1490 DUP6 DUP3 DUP7 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A1 DUP6 DUP3 DUP7 ADD PUSH2 0x1456 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14EE JUMPI PUSH2 0x14ED PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14FC DUP7 DUP3 DUP8 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x150D DUP7 DUP3 DUP8 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x151E DUP7 DUP3 DUP8 ADD PUSH2 0x1456 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153B DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP2 EQ PUSH2 0x1546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1558 DUP2 PUSH2 0x1532 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1573 PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1582 DUP5 DUP3 DUP6 ADD PUSH2 0x1549 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1594 DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x158B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15CC JUMPI PUSH2 0x15CB PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15DA DUP6 DUP3 DUP7 ADD PUSH2 0x1549 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15EB DUP6 DUP3 DUP7 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160B DUP2 PUSH2 0x15F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1626 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1642 JUMPI PUSH2 0x1641 PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1650 DUP5 DUP3 DUP6 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1670 JUMPI PUSH2 0x166F PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x167E DUP6 DUP3 DUP7 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x168F DUP6 DUP3 DUP7 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16F3 JUMPI PUSH2 0x16F2 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1702 DUP2 PUSH2 0x13F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x171D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x172A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x1737 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14AB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1754 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1794 DUP3 PUSH2 0x1435 JUMP JUMPDEST SWAP2 POP PUSH2 0x179F DUP4 PUSH2 0x1435 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B7 JUMPI PUSH2 0x17B6 PUSH2 0x175A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x17DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x158B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 CODECOPY 0xA7 SWAP12 0xEE MOD 0x4B SWAP8 PUSH25 0x6339ECEBF492461FF491410D46FE60097BF645D2082C526473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"349:794:15:-:0;;;542:162;;;;;;;;;;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;654:42:15::1;2232:4:0;665:18:15::0;::::1;685:10;654;;;:42;;:::i;:::-;;349:794:::0;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;7:99:17:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;349:794:15:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BURNER_ROLE_5275":{"entryPoint":1431,"id":5275,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":2072,"id":29,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_5270":{"entryPoint":2114,"id":5270,"parameterSlots":0,"returnSlots":0},"@_approve_921":{"entryPoint":2433,"id":921,"parameterSlots":3,"returnSlots":0},"@_approve_981":{"entryPoint":3608,"id":981,"parameterSlots":4,"returnSlots":0},"@_burn_903":{"entryPoint":3478,"id":903,"parameterSlots":2,"returnSlots":0},"@_checkRole_114":{"entryPoint":4628,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":2843,"id":93,"parameterSlots":1,"returnSlots":0},"@_grantRole_256":{"entryPoint":2863,"id":256,"parameterSlots":2,"returnSlots":1},"@_mint_870":{"entryPoint":3348,"id":870,"parameterSlots":2,"returnSlots":0},"@_msgSender_1146":{"entryPoint":2425,"id":1146,"parameterSlots":0,"returnSlots":1},"@_revokeRole_294":{"entryPoint":3105,"id":294,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1029":{"entryPoint":2451,"id":1029,"parameterSlots":3,"returnSlots":0},"@_transfer_760":{"entryPoint":2599,"id":760,"parameterSlots":3,"returnSlots":0},"@_update_837":{"entryPoint":4079,"id":837,"parameterSlots":3,"returnSlots":0},"@allowance_657":{"entryPoint":2184,"id":657,"parameterSlots":2,"returnSlots":1},"@approve_681":{"entryPoint":1307,"id":681,"parameterSlots":2,"returnSlots":1},"@balanceOf_616":{"entryPoint":1690,"id":616,"parameterSlots":1,"returnSlots":1},"@burn_5323":{"entryPoint":2015,"id":5323,"parameterSlots":2,"returnSlots":0},"@decimals_594":{"entryPoint":1501,"id":594,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":1399,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":1467,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":1762,"id":80,"parameterSlots":2,"returnSlots":1},"@mint_5306":{"entryPoint":1633,"id":5306,"parameterSlots":2,"returnSlots":0},"@name_576":{"entryPoint":1161,"id":576,"parameterSlots":0,"returnSlots":1},"@renounceRole_189":{"entryPoint":1510,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":2150,"id":166,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1239":{"entryPoint":2319,"id":1239,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":1039,"id":62,"parameterSlots":1,"returnSlots":1},"@symbol_585":{"entryPoint":1869,"id":585,"parameterSlots":0,"returnSlots":1},"@totalSupply_603":{"entryPoint":1342,"id":603,"parameterSlots":0,"returnSlots":1},"@transferFrom_713":{"entryPoint":1352,"id":713,"parameterSlots":3,"returnSlots":1},"@transfer_640":{"entryPoint":2079,"id":640,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5449,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":4781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5206,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5721,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5333,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5227,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":5470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":5557,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4802,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5881,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4859,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5515,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5291,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":5634,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":6077,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5896,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5045,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":5649,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4901,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4912,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6025,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5111,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4847,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5416,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4714,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5173,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":5621,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4929,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5832,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5978,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5785,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4709,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4971,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":5129,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5426,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":4758,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5183,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9978:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:105:17","statements":[{"nodeType":"YulAssignment","src":"388:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:149:17"},{"body":{"nodeType":"YulBlock","src":"531:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:17"},"nodeType":"YulFunctionCall","src":"589:12:17"},"nodeType":"YulExpressionStatement","src":"589:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:17"},"nodeType":"YulFunctionCall","src":"561:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:17"},"nodeType":"YulFunctionCall","src":"551:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:17"},"nodeType":"YulFunctionCall","src":"544:42:17"},"nodeType":"YulIf","src":"541:62:17"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:17","type":""}],"src":"489:120:17"},{"body":{"nodeType":"YulBlock","src":"666:86:17","statements":[{"nodeType":"YulAssignment","src":"676:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:17"},"nodeType":"YulFunctionCall","src":"685:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:17"},"nodeType":"YulFunctionCall","src":"714:32:17"},"nodeType":"YulExpressionStatement","src":"714:32:17"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:17","type":""}],"src":"615:137:17"},{"body":{"nodeType":"YulBlock","src":"823:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:17"},"nodeType":"YulFunctionCall","src":"871:79:17"},"nodeType":"YulExpressionStatement","src":"871:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:17"},"nodeType":"YulFunctionCall","src":"840:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:17"},"nodeType":"YulFunctionCall","src":"836:32:17"},"nodeType":"YulIf","src":"833:119:17"},{"nodeType":"YulBlock","src":"962:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:17"},"nodeType":"YulFunctionCall","src":"1036:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:17"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:17"},"nodeType":"YulFunctionCall","src":"1016:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:17","type":""}],"src":"758:327:17"},{"body":{"nodeType":"YulBlock","src":"1133:48:17","statements":[{"nodeType":"YulAssignment","src":"1143:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:17"},"nodeType":"YulFunctionCall","src":"1161:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:17"},"nodeType":"YulFunctionCall","src":"1154:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:17","type":""}],"src":"1091:90:17"},{"body":{"nodeType":"YulBlock","src":"1246:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:17"},"nodeType":"YulFunctionCall","src":"1268:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:17"},"nodeType":"YulFunctionCall","src":"1256:34:17"},"nodeType":"YulExpressionStatement","src":"1256:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:17","type":""}],"src":"1187:109:17"},{"body":{"nodeType":"YulBlock","src":"1394:118:17","statements":[{"nodeType":"YulAssignment","src":"1404:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:17"},"nodeType":"YulFunctionCall","src":"1412:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:17"},"nodeType":"YulFunctionCall","src":"1487:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:17"},"nodeType":"YulFunctionCall","src":"1440:65:17"},"nodeType":"YulExpressionStatement","src":"1440:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:17","type":""}],"src":"1302:210:17"},{"body":{"nodeType":"YulBlock","src":"1577:40:17","statements":[{"nodeType":"YulAssignment","src":"1588:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:17"},"nodeType":"YulFunctionCall","src":"1598:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:17","type":""}],"src":"1518:99:17"},{"body":{"nodeType":"YulBlock","src":"1719:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:17"},"nodeType":"YulFunctionCall","src":"1729:19:17"},"nodeType":"YulExpressionStatement","src":"1729:19:17"},{"nodeType":"YulAssignment","src":"1757:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:17"},"nodeType":"YulFunctionCall","src":"1772:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:17","type":""}],"src":"1623:169:17"},{"body":{"nodeType":"YulBlock","src":"1860:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:17"},"nodeType":"YulFunctionCall","src":"1960:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:17"},"nodeType":"YulFunctionCall","src":"1979:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:17"},"nodeType":"YulFunctionCall","src":"1973:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:17"},"nodeType":"YulFunctionCall","src":"1953:39:17"},"nodeType":"YulExpressionStatement","src":"1953:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:17"},"nodeType":"YulFunctionCall","src":"1897:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:17","statements":[{"nodeType":"YulAssignment","src":"1913:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:17"},"nodeType":"YulFunctionCall","src":"1918:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:17","statements":[]},"src":"1889:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:17"},"nodeType":"YulFunctionCall","src":"2018:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:17"},"nodeType":"YulFunctionCall","src":"2011:27:17"},"nodeType":"YulExpressionStatement","src":"2011:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:17","type":""}],"src":"1798:246:17"},{"body":{"nodeType":"YulBlock","src":"2098:54:17","statements":[{"nodeType":"YulAssignment","src":"2108:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:17"},"nodeType":"YulFunctionCall","src":"2122:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:17"},"nodeType":"YulFunctionCall","src":"2138:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:17"},"nodeType":"YulFunctionCall","src":"2118:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:17","type":""}],"src":"2050:102:17"},{"body":{"nodeType":"YulBlock","src":"2250:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:17"},"nodeType":"YulFunctionCall","src":"2274:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:17"},"nodeType":"YulFunctionCall","src":"2329:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:17"},"nodeType":"YulFunctionCall","src":"2444:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:17"},"nodeType":"YulFunctionCall","src":"2409:65:17"},"nodeType":"YulExpressionStatement","src":"2409:65:17"},{"nodeType":"YulAssignment","src":"2483:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:17"},"nodeType":"YulFunctionCall","src":"2499:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:17"},"nodeType":"YulFunctionCall","src":"2490:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:17","type":""}],"src":"2158:377:17"},{"body":{"nodeType":"YulBlock","src":"2659:195:17","statements":[{"nodeType":"YulAssignment","src":"2669:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:17"},"nodeType":"YulFunctionCall","src":"2677:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:17"},"nodeType":"YulFunctionCall","src":"2712:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:17"},"nodeType":"YulFunctionCall","src":"2731:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:17"},"nodeType":"YulFunctionCall","src":"2705:47:17"},"nodeType":"YulExpressionStatement","src":"2705:47:17"},{"nodeType":"YulAssignment","src":"2761:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:17"},"nodeType":"YulFunctionCall","src":"2769:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:17","type":""}],"src":"2541:313:17"},{"body":{"nodeType":"YulBlock","src":"2905:81:17","statements":[{"nodeType":"YulAssignment","src":"2915:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2930:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2937:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2926:3:17"},"nodeType":"YulFunctionCall","src":"2926:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:17","type":""}],"src":"2860:126:17"},{"body":{"nodeType":"YulBlock","src":"3037:51:17","statements":[{"nodeType":"YulAssignment","src":"3047:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3076:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3058:17:17"},"nodeType":"YulFunctionCall","src":"3058:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3047:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3019:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3029:7:17","type":""}],"src":"2992:96:17"},{"body":{"nodeType":"YulBlock","src":"3137:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"3194:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3203:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3206:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3196:6:17"},"nodeType":"YulFunctionCall","src":"3196:12:17"},"nodeType":"YulExpressionStatement","src":"3196:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3160:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3185:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3167:17:17"},"nodeType":"YulFunctionCall","src":"3167:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3157:2:17"},"nodeType":"YulFunctionCall","src":"3157:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3150:6:17"},"nodeType":"YulFunctionCall","src":"3150:43:17"},"nodeType":"YulIf","src":"3147:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3130:5:17","type":""}],"src":"3094:122:17"},{"body":{"nodeType":"YulBlock","src":"3274:87:17","statements":[{"nodeType":"YulAssignment","src":"3284:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3306:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3293:12:17"},"nodeType":"YulFunctionCall","src":"3293:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3284:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3349:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3322:26:17"},"nodeType":"YulFunctionCall","src":"3322:33:17"},"nodeType":"YulExpressionStatement","src":"3322:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3252:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3260:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3268:5:17","type":""}],"src":"3222:139:17"},{"body":{"nodeType":"YulBlock","src":"3412:32:17","statements":[{"nodeType":"YulAssignment","src":"3422:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"3433:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3422:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3394:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3404:7:17","type":""}],"src":"3367:77:17"},{"body":{"nodeType":"YulBlock","src":"3493:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"3550:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3559:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3562:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3552:6:17"},"nodeType":"YulFunctionCall","src":"3552:12:17"},"nodeType":"YulExpressionStatement","src":"3552:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3516:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3541:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3523:17:17"},"nodeType":"YulFunctionCall","src":"3523:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3513:2:17"},"nodeType":"YulFunctionCall","src":"3513:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3506:6:17"},"nodeType":"YulFunctionCall","src":"3506:43:17"},"nodeType":"YulIf","src":"3503:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3486:5:17","type":""}],"src":"3450:122:17"},{"body":{"nodeType":"YulBlock","src":"3630:87:17","statements":[{"nodeType":"YulAssignment","src":"3640:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3662:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3649:12:17"},"nodeType":"YulFunctionCall","src":"3649:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3640:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3705:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3678:26:17"},"nodeType":"YulFunctionCall","src":"3678:33:17"},"nodeType":"YulExpressionStatement","src":"3678:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3608:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3616:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3624:5:17","type":""}],"src":"3578:139:17"},{"body":{"nodeType":"YulBlock","src":"3806:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"3852:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3854:77:17"},"nodeType":"YulFunctionCall","src":"3854:79:17"},"nodeType":"YulExpressionStatement","src":"3854:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3827:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3836:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3823:3:17"},"nodeType":"YulFunctionCall","src":"3823:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3848:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3819:3:17"},"nodeType":"YulFunctionCall","src":"3819:32:17"},"nodeType":"YulIf","src":"3816:119:17"},{"nodeType":"YulBlock","src":"3945:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3960:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3974:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3964:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3989:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4024:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4035:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4020:3:17"},"nodeType":"YulFunctionCall","src":"4020:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4044:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3999:20:17"},"nodeType":"YulFunctionCall","src":"3999:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3989:6:17"}]}]},{"nodeType":"YulBlock","src":"4072:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4087:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4101:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4091:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4117:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4152:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4163:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4148:3:17"},"nodeType":"YulFunctionCall","src":"4148:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4172:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4127:20:17"},"nodeType":"YulFunctionCall","src":"4127:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4117:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3768:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3779:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3791:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3799:6:17","type":""}],"src":"3723:474:17"},{"body":{"nodeType":"YulBlock","src":"4268:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4285:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4308:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4290:17:17"},"nodeType":"YulFunctionCall","src":"4290:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4278:6:17"},"nodeType":"YulFunctionCall","src":"4278:37:17"},"nodeType":"YulExpressionStatement","src":"4278:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4256:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4263:3:17","type":""}],"src":"4203:118:17"},{"body":{"nodeType":"YulBlock","src":"4425:124:17","statements":[{"nodeType":"YulAssignment","src":"4435:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4447:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4458:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:17"},"nodeType":"YulFunctionCall","src":"4443:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4435:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4515:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4528:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4539:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:17"},"nodeType":"YulFunctionCall","src":"4524:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4471:43:17"},"nodeType":"YulFunctionCall","src":"4471:71:17"},"nodeType":"YulExpressionStatement","src":"4471:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4397:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4409:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4420:4:17","type":""}],"src":"4327:222:17"},{"body":{"nodeType":"YulBlock","src":"4655:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"4701:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4703:77:17"},"nodeType":"YulFunctionCall","src":"4703:79:17"},"nodeType":"YulExpressionStatement","src":"4703:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4676:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4685:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4672:3:17"},"nodeType":"YulFunctionCall","src":"4672:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4697:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4668:3:17"},"nodeType":"YulFunctionCall","src":"4668:32:17"},"nodeType":"YulIf","src":"4665:119:17"},{"nodeType":"YulBlock","src":"4794:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4809:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4823:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4813:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4838:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4873:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4884:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4869:3:17"},"nodeType":"YulFunctionCall","src":"4869:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4893:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4848:20:17"},"nodeType":"YulFunctionCall","src":"4848:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4838:6:17"}]}]},{"nodeType":"YulBlock","src":"4921:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4936:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4950:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4940:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4966:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5001:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5012:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4997:3:17"},"nodeType":"YulFunctionCall","src":"4997:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5021:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4976:20:17"},"nodeType":"YulFunctionCall","src":"4976:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4966:6:17"}]}]},{"nodeType":"YulBlock","src":"5049:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5064:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5078:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5068:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5094:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5129:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5140:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5125:3:17"},"nodeType":"YulFunctionCall","src":"5125:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5149:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5104:20:17"},"nodeType":"YulFunctionCall","src":"5104:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5094:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4609:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4620:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4632:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4640:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4648:6:17","type":""}],"src":"4555:619:17"},{"body":{"nodeType":"YulBlock","src":"5225:32:17","statements":[{"nodeType":"YulAssignment","src":"5235:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5246:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5235:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5207:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5217:7:17","type":""}],"src":"5180:77:17"},{"body":{"nodeType":"YulBlock","src":"5306:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"5363:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5372:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5375:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5365:6:17"},"nodeType":"YulFunctionCall","src":"5365:12:17"},"nodeType":"YulExpressionStatement","src":"5365:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5329:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5354:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5336:17:17"},"nodeType":"YulFunctionCall","src":"5336:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5326:2:17"},"nodeType":"YulFunctionCall","src":"5326:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5319:6:17"},"nodeType":"YulFunctionCall","src":"5319:43:17"},"nodeType":"YulIf","src":"5316:63:17"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5299:5:17","type":""}],"src":"5263:122:17"},{"body":{"nodeType":"YulBlock","src":"5443:87:17","statements":[{"nodeType":"YulAssignment","src":"5453:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5462:12:17"},"nodeType":"YulFunctionCall","src":"5462:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5453:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5518:5:17"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"5491:26:17"},"nodeType":"YulFunctionCall","src":"5491:33:17"},"nodeType":"YulExpressionStatement","src":"5491:33:17"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5421:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5429:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5437:5:17","type":""}],"src":"5391:139:17"},{"body":{"nodeType":"YulBlock","src":"5602:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"5648:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5650:77:17"},"nodeType":"YulFunctionCall","src":"5650:79:17"},"nodeType":"YulExpressionStatement","src":"5650:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5623:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5632:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5619:3:17"},"nodeType":"YulFunctionCall","src":"5619:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5644:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5615:3:17"},"nodeType":"YulFunctionCall","src":"5615:32:17"},"nodeType":"YulIf","src":"5612:119:17"},{"nodeType":"YulBlock","src":"5741:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5756:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5770:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5760:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5785:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5820:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5831:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5816:3:17"},"nodeType":"YulFunctionCall","src":"5816:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5840:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5795:20:17"},"nodeType":"YulFunctionCall","src":"5795:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5785:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5572:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5583:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5595:6:17","type":""}],"src":"5536:329:17"},{"body":{"nodeType":"YulBlock","src":"5936:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5953:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5976:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5958:17:17"},"nodeType":"YulFunctionCall","src":"5958:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5946:6:17"},"nodeType":"YulFunctionCall","src":"5946:37:17"},"nodeType":"YulExpressionStatement","src":"5946:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5924:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5931:3:17","type":""}],"src":"5871:118:17"},{"body":{"nodeType":"YulBlock","src":"6093:124:17","statements":[{"nodeType":"YulAssignment","src":"6103:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6115:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6126:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6111:3:17"},"nodeType":"YulFunctionCall","src":"6111:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6103:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6183:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6207:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:17"},"nodeType":"YulFunctionCall","src":"6192:17:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6139:43:17"},"nodeType":"YulFunctionCall","src":"6139:71:17"},"nodeType":"YulExpressionStatement","src":"6139:71:17"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6065:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6077:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6088:4:17","type":""}],"src":"5995:222:17"},{"body":{"nodeType":"YulBlock","src":"6306:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"6352:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6354:77:17"},"nodeType":"YulFunctionCall","src":"6354:79:17"},"nodeType":"YulExpressionStatement","src":"6354:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6327:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6336:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6323:3:17"},"nodeType":"YulFunctionCall","src":"6323:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6348:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6319:3:17"},"nodeType":"YulFunctionCall","src":"6319:32:17"},"nodeType":"YulIf","src":"6316:119:17"},{"nodeType":"YulBlock","src":"6445:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6460:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6474:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6464:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6489:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6524:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6535:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6520:3:17"},"nodeType":"YulFunctionCall","src":"6520:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6544:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6499:20:17"},"nodeType":"YulFunctionCall","src":"6499:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6489:6:17"}]}]},{"nodeType":"YulBlock","src":"6572:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6587:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6601:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6591:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6617:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6652:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6663:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6648:3:17"},"nodeType":"YulFunctionCall","src":"6648:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6672:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6627:20:17"},"nodeType":"YulFunctionCall","src":"6627:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6617:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6268:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6279:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6291:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6299:6:17","type":""}],"src":"6223:474:17"},{"body":{"nodeType":"YulBlock","src":"6746:43:17","statements":[{"nodeType":"YulAssignment","src":"6756:27:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6771:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6778:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6767:3:17"},"nodeType":"YulFunctionCall","src":"6767:16:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6756:7:17"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6728:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6738:7:17","type":""}],"src":"6703:86:17"},{"body":{"nodeType":"YulBlock","src":"6856:51:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6873:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6894:5:17"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6878:15:17"},"nodeType":"YulFunctionCall","src":"6878:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6866:6:17"},"nodeType":"YulFunctionCall","src":"6866:35:17"},"nodeType":"YulExpressionStatement","src":"6866:35:17"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6844:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6851:3:17","type":""}],"src":"6795:112:17"},{"body":{"nodeType":"YulBlock","src":"7007:120:17","statements":[{"nodeType":"YulAssignment","src":"7017:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7029:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7040:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7025:3:17"},"nodeType":"YulFunctionCall","src":"7025:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7017:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7093:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7106:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7117:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7102:3:17"},"nodeType":"YulFunctionCall","src":"7102:17:17"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"7053:39:17"},"nodeType":"YulFunctionCall","src":"7053:67:17"},"nodeType":"YulExpressionStatement","src":"7053:67:17"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6979:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6991:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7002:4:17","type":""}],"src":"6913:214:17"},{"body":{"nodeType":"YulBlock","src":"7199:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"7245:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7247:77:17"},"nodeType":"YulFunctionCall","src":"7247:79:17"},"nodeType":"YulExpressionStatement","src":"7247:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7220:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7229:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7216:3:17"},"nodeType":"YulFunctionCall","src":"7216:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7241:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7212:3:17"},"nodeType":"YulFunctionCall","src":"7212:32:17"},"nodeType":"YulIf","src":"7209:119:17"},{"nodeType":"YulBlock","src":"7338:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7353:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7367:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7357:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7382:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7417:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7428:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7413:3:17"},"nodeType":"YulFunctionCall","src":"7413:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7437:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7392:20:17"},"nodeType":"YulFunctionCall","src":"7392:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7382:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7169:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7180:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7192:6:17","type":""}],"src":"7133:329:17"},{"body":{"nodeType":"YulBlock","src":"7551:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"7597:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7599:77:17"},"nodeType":"YulFunctionCall","src":"7599:79:17"},"nodeType":"YulExpressionStatement","src":"7599:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7572:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7581:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7568:3:17"},"nodeType":"YulFunctionCall","src":"7568:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7593:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7564:3:17"},"nodeType":"YulFunctionCall","src":"7564:32:17"},"nodeType":"YulIf","src":"7561:119:17"},{"nodeType":"YulBlock","src":"7690:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7705:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7719:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7709:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7734:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7769:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7780:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7765:3:17"},"nodeType":"YulFunctionCall","src":"7765:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7789:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7744:20:17"},"nodeType":"YulFunctionCall","src":"7744:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7734:6:17"}]}]},{"nodeType":"YulBlock","src":"7817:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7832:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7846:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7836:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7862:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7897:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7908:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7893:3:17"},"nodeType":"YulFunctionCall","src":"7893:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7917:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7872:20:17"},"nodeType":"YulFunctionCall","src":"7872:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7862:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7513:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7524:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7536:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7544:6:17","type":""}],"src":"7468:474:17"},{"body":{"nodeType":"YulBlock","src":"7976:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7993:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7996:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7986:6:17"},"nodeType":"YulFunctionCall","src":"7986:88:17"},"nodeType":"YulExpressionStatement","src":"7986:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8090:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8093:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8083:6:17"},"nodeType":"YulFunctionCall","src":"8083:15:17"},"nodeType":"YulExpressionStatement","src":"8083:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8114:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8117:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8107:6:17"},"nodeType":"YulFunctionCall","src":"8107:15:17"},"nodeType":"YulExpressionStatement","src":"8107:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7948:180:17"},{"body":{"nodeType":"YulBlock","src":"8185:269:17","statements":[{"nodeType":"YulAssignment","src":"8195:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8209:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8215:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8205:3:17"},"nodeType":"YulFunctionCall","src":"8205:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8195:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"8226:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8256:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8262:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8252:3:17"},"nodeType":"YulFunctionCall","src":"8252:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8230:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8303:51:17","statements":[{"nodeType":"YulAssignment","src":"8317:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8331:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8339:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8327:3:17"},"nodeType":"YulFunctionCall","src":"8327:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8317:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8283:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8276:6:17"},"nodeType":"YulFunctionCall","src":"8276:26:17"},"nodeType":"YulIf","src":"8273:81:17"},{"body":{"nodeType":"YulBlock","src":"8406:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8420:16:17"},"nodeType":"YulFunctionCall","src":"8420:18:17"},"nodeType":"YulExpressionStatement","src":"8420:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8370:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8393:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8401:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8390:2:17"},"nodeType":"YulFunctionCall","src":"8390:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8367:2:17"},"nodeType":"YulFunctionCall","src":"8367:38:17"},"nodeType":"YulIf","src":"8364:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8169:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8178:6:17","type":""}],"src":"8134:320:17"},{"body":{"nodeType":"YulBlock","src":"8525:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8542:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8565:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8547:17:17"},"nodeType":"YulFunctionCall","src":"8547:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8535:6:17"},"nodeType":"YulFunctionCall","src":"8535:37:17"},"nodeType":"YulExpressionStatement","src":"8535:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8513:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8520:3:17","type":""}],"src":"8460:118:17"},{"body":{"nodeType":"YulBlock","src":"8738:288:17","statements":[{"nodeType":"YulAssignment","src":"8748:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8760:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8771:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8756:3:17"},"nodeType":"YulFunctionCall","src":"8756:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8748:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8828:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8841:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8852:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8837:3:17"},"nodeType":"YulFunctionCall","src":"8837:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8784:43:17"},"nodeType":"YulFunctionCall","src":"8784:71:17"},"nodeType":"YulExpressionStatement","src":"8784:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8909:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8922:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8933:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8918:3:17"},"nodeType":"YulFunctionCall","src":"8918:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8865:43:17"},"nodeType":"YulFunctionCall","src":"8865:72:17"},"nodeType":"YulExpressionStatement","src":"8865:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8991:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9004:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9015:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9000:3:17"},"nodeType":"YulFunctionCall","src":"9000:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8947:43:17"},"nodeType":"YulFunctionCall","src":"8947:72:17"},"nodeType":"YulExpressionStatement","src":"8947:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8694:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8706:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8714:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8722:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8733:4:17","type":""}],"src":"8584:442:17"},{"body":{"nodeType":"YulBlock","src":"9130:124:17","statements":[{"nodeType":"YulAssignment","src":"9140:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9152:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9163:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9148:3:17"},"nodeType":"YulFunctionCall","src":"9148:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9140:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9220:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9233:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9244:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9229:3:17"},"nodeType":"YulFunctionCall","src":"9229:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9176:43:17"},"nodeType":"YulFunctionCall","src":"9176:71:17"},"nodeType":"YulExpressionStatement","src":"9176:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9102:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9114:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9125:4:17","type":""}],"src":"9032:222:17"},{"body":{"nodeType":"YulBlock","src":"9288:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9305:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9308:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9298:6:17"},"nodeType":"YulFunctionCall","src":"9298:88:17"},"nodeType":"YulExpressionStatement","src":"9298:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9402:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9405:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9395:6:17"},"nodeType":"YulFunctionCall","src":"9395:15:17"},"nodeType":"YulExpressionStatement","src":"9395:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9426:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9429:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9419:6:17"},"nodeType":"YulFunctionCall","src":"9419:15:17"},"nodeType":"YulExpressionStatement","src":"9419:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9260:180:17"},{"body":{"nodeType":"YulBlock","src":"9490:147:17","statements":[{"nodeType":"YulAssignment","src":"9500:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9523:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9505:17:17"},"nodeType":"YulFunctionCall","src":"9505:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9500:1:17"}]},{"nodeType":"YulAssignment","src":"9534:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9557:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9539:17:17"},"nodeType":"YulFunctionCall","src":"9539:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9534:1:17"}]},{"nodeType":"YulAssignment","src":"9568:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9579:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"9582:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9575:3:17"},"nodeType":"YulFunctionCall","src":"9575:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9568:3:17"}]},{"body":{"nodeType":"YulBlock","src":"9608:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9610:16:17"},"nodeType":"YulFunctionCall","src":"9610:18:17"},"nodeType":"YulExpressionStatement","src":"9610:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9600:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"9603:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9597:2:17"},"nodeType":"YulFunctionCall","src":"9597:10:17"},"nodeType":"YulIf","src":"9594:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9477:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"9480:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9486:3:17","type":""}],"src":"9446:191:17"},{"body":{"nodeType":"YulBlock","src":"9769:206:17","statements":[{"nodeType":"YulAssignment","src":"9779:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9791:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9802:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9787:3:17"},"nodeType":"YulFunctionCall","src":"9787:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9779:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9859:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9872:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9883:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9868:3:17"},"nodeType":"YulFunctionCall","src":"9868:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9815:43:17"},"nodeType":"YulFunctionCall","src":"9815:71:17"},"nodeType":"YulExpressionStatement","src":"9815:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9940:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9953:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9964:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9949:3:17"},"nodeType":"YulFunctionCall","src":"9949:18:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9896:43:17"},"nodeType":"YulFunctionCall","src":"9896:72:17"},"nodeType":"YulExpressionStatement","src":"9896:72:17"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9733:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9745:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9753:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9764:4:17","type":""}],"src":"9643:332:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c806340c10f19116100ad578063a217fddf11610071578063a217fddf14610357578063a9059cbb14610375578063d5391393146103a5578063d547741f146103c3578063dd62ed3e146103df5761012c565b806340c10f19146102a157806370a08231146102bd57806391d14854146102ed57806395d89b411461031d5780639dc29fac1461033b5761012c565b8063248a9ca3116100f4578063248a9ca3146101fd578063282c51f31461022d5780632f2ff15d1461024b578063313ce5671461026757806336568abe146102855761012c565b806301ffc9a71461013157806306fdde0314610161578063095ea7b31461017f57806318160ddd146101af57806323b872dd146101cd575b600080fd5b61014b600480360381019061014691906112c2565b61040f565b604051610158919061130a565b60405180910390f35b610169610489565b60405161017691906113b5565b60405180910390f35b6101996004803603810190610194919061146b565b61051b565b6040516101a6919061130a565b60405180910390f35b6101b761053e565b6040516101c491906114ba565b60405180910390f35b6101e760048036038101906101e291906114d5565b610548565b6040516101f4919061130a565b60405180910390f35b6102176004803603810190610212919061155e565b610577565b604051610224919061159a565b60405180910390f35b610235610597565b604051610242919061159a565b60405180910390f35b610265600480360381019061026091906115b5565b6105bb565b005b61026f6105dd565b60405161027c9190611611565b60405180910390f35b61029f600480360381019061029a91906115b5565b6105e6565b005b6102bb60048036038101906102b6919061146b565b610661565b005b6102d760048036038101906102d2919061162c565b61069a565b6040516102e491906114ba565b60405180910390f35b610307600480360381019061030291906115b5565b6106e2565b604051610314919061130a565b60405180910390f35b61032561074d565b60405161033291906113b5565b60405180910390f35b6103556004803603810190610350919061146b565b6107df565b005b61035f610818565b60405161036c919061159a565b60405180910390f35b61038f600480360381019061038a919061146b565b61081f565b60405161039c919061130a565b60405180910390f35b6103ad610842565b6040516103ba919061159a565b60405180910390f35b6103dd60048036038101906103d891906115b5565b610866565b005b6103f960048036038101906103f49190611659565b610888565b60405161040691906114ba565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048257506104818261090f565b5b9050919050565b606060038054610498906116c8565b80601f01602080910402602001604051908101604052809291908181526020018280546104c4906116c8565b80156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b5050505050905090565b600080610526610979565b9050610533818585610981565b600191505092915050565b6000600254905090565b600080610553610979565b9050610560858285610993565b61056b858585610a27565b60019150509392505050565b600060056000838152602001908152602001600020600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b6105c482610577565b6105cd81610b1b565b6105d78383610b2f565b50505050565b60006012905090565b6105ee610979565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610652576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61065c8282610c21565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661068b81610b1b565b6106958383610d14565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006005600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606004805461075c906116c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610788906116c8565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84861080981610b1b565b6108138383610d96565b505050565b6000801b81565b60008061082a610979565b9050610837818585610a27565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61086f82610577565b61087881610b1b565b6108828383610c21565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b61098e8383836001610e18565b505050565b600061099f8484610888565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a215781811015610a11578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a0893929190611708565b60405180910390fd5b610a2084848484036000610e18565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a995760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a90919061173f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b0b5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b02919061173f565b60405180910390fd5b610b16838383610fef565b505050565b610b2c81610b27610979565b611214565b50565b6000610b3b83836106e2565b610c165760016005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610bb3610979565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c1b565b600090505b92915050565b6000610c2d83836106e2565b15610d095760006005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610ca6610979565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d0e565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d865760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d7d919061173f565b60405180910390fd5b610d9260008383610fef565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e085760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610dff919061173f565b60405180910390fd5b610e1482600083610fef565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e8a5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e81919061173f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610efc5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ef3919061173f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610fe9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fe091906114ba565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110415780600260008282546110359190611789565b92505081905550611114565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110cd578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110c493929190611708565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361115d57806002600082825403925050819055506111aa565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161120791906114ba565b60405180910390a3505050565b61121e82826106e2565b6112615780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016112589291906117bd565b60405180910390fd5b5050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61129f8161126a565b81146112aa57600080fd5b50565b6000813590506112bc81611296565b92915050565b6000602082840312156112d8576112d7611265565b5b60006112e6848285016112ad565b91505092915050565b60008115159050919050565b611304816112ef565b82525050565b600060208201905061131f60008301846112fb565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561135f578082015181840152602081019050611344565b60008484015250505050565b6000601f19601f8301169050919050565b600061138782611325565b6113918185611330565b93506113a1818560208601611341565b6113aa8161136b565b840191505092915050565b600060208201905081810360008301526113cf818461137c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611402826113d7565b9050919050565b611412816113f7565b811461141d57600080fd5b50565b60008135905061142f81611409565b92915050565b6000819050919050565b61144881611435565b811461145357600080fd5b50565b6000813590506114658161143f565b92915050565b6000806040838503121561148257611481611265565b5b600061149085828601611420565b92505060206114a185828601611456565b9150509250929050565b6114b481611435565b82525050565b60006020820190506114cf60008301846114ab565b92915050565b6000806000606084860312156114ee576114ed611265565b5b60006114fc86828701611420565b935050602061150d86828701611420565b925050604061151e86828701611456565b9150509250925092565b6000819050919050565b61153b81611528565b811461154657600080fd5b50565b60008135905061155881611532565b92915050565b60006020828403121561157457611573611265565b5b600061158284828501611549565b91505092915050565b61159481611528565b82525050565b60006020820190506115af600083018461158b565b92915050565b600080604083850312156115cc576115cb611265565b5b60006115da85828601611549565b92505060206115eb85828601611420565b9150509250929050565b600060ff82169050919050565b61160b816115f5565b82525050565b60006020820190506116266000830184611602565b92915050565b60006020828403121561164257611641611265565b5b600061165084828501611420565b91505092915050565b600080604083850312156116705761166f611265565b5b600061167e85828601611420565b925050602061168f85828601611420565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116e057607f821691505b6020821081036116f3576116f2611699565b5b50919050565b611702816113f7565b82525050565b600060608201905061171d60008301866116f9565b61172a60208301856114ab565b61173760408301846114ab565b949350505050565b600060208201905061175460008301846116f9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061179482611435565b915061179f83611435565b92508282019050808211156117b7576117b661175a565b5b92915050565b60006040820190506117d260008301856116f9565b6117df602083018461158b565b939250505056fea2646970667358221220a139a79bee064b97786339ecebf492461ff491410d46fe60097bf645d2082c5264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x33B JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x285 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x12C2 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x5E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x162C JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35F PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x482 JUMPI POP PUSH2 0x481 DUP3 PUSH2 0x90F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C4 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x511 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x511 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x526 PUSH2 0x979 JUMP JUMPDEST SWAP1 POP PUSH2 0x533 DUP2 DUP6 DUP6 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x553 PUSH2 0x979 JUMP JUMPDEST SWAP1 POP PUSH2 0x560 DUP6 DUP3 DUP6 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x56B DUP6 DUP6 DUP6 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x5C4 DUP3 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x5CD DUP2 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x5D7 DUP4 DUP4 PUSH2 0xB2F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5EE PUSH2 0x979 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65C DUP3 DUP3 PUSH2 0xC21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x68B DUP2 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x695 DUP4 DUP4 PUSH2 0xD14 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x16C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x809 DUP2 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x813 DUP4 DUP4 PUSH2 0xD96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x82A PUSH2 0x979 JUMP JUMPDEST SWAP1 POP PUSH2 0x837 DUP2 DUP6 DUP6 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x86F DUP3 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x878 DUP2 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x882 DUP4 DUP4 PUSH2 0xC21 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x98E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE18 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99F DUP5 DUP5 PUSH2 0x888 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA21 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA11 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA20 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xE18 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA99 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA90 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB16 DUP4 DUP4 DUP4 PUSH2 0xFEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB2C DUP2 PUSH2 0xB27 PUSH2 0x979 JUMP JUMPDEST PUSH2 0x1214 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3B DUP4 DUP4 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0xC16 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBB3 PUSH2 0x979 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2D DUP4 DUP4 PUSH2 0x6E2 JUMP JUMPDEST ISZERO PUSH2 0xD09 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCA6 PUSH2 0x979 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD86 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7D SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD92 PUSH1 0x0 DUP4 DUP4 PUSH2 0xFEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE08 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFF SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE14 DUP3 PUSH1 0x0 DUP4 PUSH2 0xFEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFE9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFE0 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1041 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1789 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10CD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x115D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11AA JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1207 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x121E DUP3 DUP3 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x1261 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1258 SWAP3 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129F DUP2 PUSH2 0x126A JUMP JUMPDEST DUP2 EQ PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12BC DUP2 PUSH2 0x1296 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D8 JUMPI PUSH2 0x12D7 PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E6 DUP5 DUP3 DUP6 ADD PUSH2 0x12AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1304 DUP2 PUSH2 0x12EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x135F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1387 DUP3 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x1391 DUP2 DUP6 PUSH2 0x1330 JUMP JUMPDEST SWAP4 POP PUSH2 0x13A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x13AA DUP2 PUSH2 0x136B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13CF DUP2 DUP5 PUSH2 0x137C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1402 DUP3 PUSH2 0x13D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1412 DUP2 PUSH2 0x13F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x141D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142F DUP2 PUSH2 0x1409 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1448 DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP2 EQ PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1465 DUP2 PUSH2 0x143F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1490 DUP6 DUP3 DUP7 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A1 DUP6 DUP3 DUP7 ADD PUSH2 0x1456 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14EE JUMPI PUSH2 0x14ED PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14FC DUP7 DUP3 DUP8 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x150D DUP7 DUP3 DUP8 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x151E DUP7 DUP3 DUP8 ADD PUSH2 0x1456 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153B DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP2 EQ PUSH2 0x1546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1558 DUP2 PUSH2 0x1532 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1573 PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1582 DUP5 DUP3 DUP6 ADD PUSH2 0x1549 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1594 DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x158B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15CC JUMPI PUSH2 0x15CB PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15DA DUP6 DUP3 DUP7 ADD PUSH2 0x1549 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15EB DUP6 DUP3 DUP7 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160B DUP2 PUSH2 0x15F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1626 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1642 JUMPI PUSH2 0x1641 PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1650 DUP5 DUP3 DUP6 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1670 JUMPI PUSH2 0x166F PUSH2 0x1265 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x167E DUP6 DUP3 DUP7 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x168F DUP6 DUP3 DUP7 ADD PUSH2 0x1420 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16F3 JUMPI PUSH2 0x16F2 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1702 DUP2 PUSH2 0x13F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x171D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x172A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x1737 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14AB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1754 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1794 DUP3 PUSH2 0x1435 JUMP JUMPDEST SWAP2 POP PUSH2 0x179F DUP4 PUSH2 0x1435 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B7 JUMPI PUSH2 0x17B6 PUSH2 0x175A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x17DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x158B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 CODECOPY 0xA7 SWAP12 0xEE MOD 0x4B SWAP8 PUSH25 0x6339ECEBF492461FF491410D46FE60097BF645D2082C526473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"349:794:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;471:62:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;809:109:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1027:113:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:62:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1779:89:3:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;471:62:15:-;509:24;471:62;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;809:109:15:-;440:24;2464:16:0;2475:4;2464:10;:16::i;:::-;893:17:15::1;899:2;903:6;893:5;:17::i;:::-;809:109:::0;;;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1027:113:15:-;509:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1113:19:15::1;1119:4;1125:6;1113:5;:19::i;:::-;1027:113:::0;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;402:62:15:-;440:24;402:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;763:146:8:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:17:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:474::-;7536:6;7544;7593:2;7581:9;7572:7;7568:23;7564:32;7561:119;;;7599:79;;:::i;:::-;7561:119;7719:1;7744:53;7789:7;7780:6;7769:9;7765:22;7744:53;:::i;:::-;7734:63;;7690:117;7846:2;7872:53;7917:7;7908:6;7897:9;7893:22;7872:53;:::i;:::-;7862:63;;7817:118;7468:474;;;;;:::o;7948:180::-;7996:77;7993:1;7986:88;8093:4;8090:1;8083:15;8117:4;8114:1;8107:15;8134:320;8178:6;8215:1;8209:4;8205:12;8195:22;;8262:1;8256:4;8252:12;8283:18;8273:81;;8339:4;8331:6;8327:17;8317:27;;8273:81;8401:2;8393:6;8390:14;8370:18;8367:38;8364:84;;8420:18;;:::i;:::-;8364:84;8185:269;8134:320;;;:::o;8460:118::-;8547:24;8565:5;8547:24;:::i;:::-;8542:3;8535:37;8460:118;;:::o;8584:442::-;8733:4;8771:2;8760:9;8756:18;8748:26;;8784:71;8852:1;8841:9;8837:17;8828:6;8784:71;:::i;:::-;8865:72;8933:2;8922:9;8918:18;8909:6;8865:72;:::i;:::-;8947;9015:2;9004:9;9000:18;8991:6;8947:72;:::i;:::-;8584:442;;;;;;:::o;9032:222::-;9125:4;9163:2;9152:9;9148:18;9140:26;;9176:71;9244:1;9233:9;9229:17;9220:6;9176:71;:::i;:::-;9032:222;;;;:::o;9260:180::-;9308:77;9305:1;9298:88;9405:4;9402:1;9395:15;9429:4;9426:1;9419:15;9446:191;9486:3;9505:20;9523:1;9505:20;:::i;:::-;9500:25;;9539:20;9557:1;9539:20;:::i;:::-;9534:25;;9582:1;9579;9575:9;9568:16;;9603:3;9600:1;9597:10;9594:36;;;9610:18;;:::i;:::-;9594:36;9446:191;;;;:::o;9643:332::-;9764:4;9802:2;9791:9;9787:18;9779:26;;9815:71;9883:1;9872:9;9868:17;9859:6;9815:71;:::i;:::-;9896:72;9964:2;9953:9;9949:18;9940:6;9896:72;:::i;:::-;9643:332;;;;;:::o"},"methodIdentifiers":{"BURNER_ROLE()":"282c51f3","DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"ReceiptToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Burn tokens from `from`. Only addresses with BURNER_ROLE can call.\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens to `to`. Only addresses with MINTER_ROLE can call.\"}},\"notice\":\"An ERC20 representing user deposits in a lending pool.         Uses AccessControl for role-based mint/burn permissions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReceiptToken.sol\":\"ReceiptToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ReceiptToken.sol\":{\"keccak256\":\"0x32a6cd3b7cd7a992980f916c87cff3e2281d490cf762fb3f0dd3fa05a254a8e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48d2384ff8c6ccce877db0cfd5f40e698080e90f0e88842d935f8c7c184b16d0\",\"dweb:/ipfs/QmeF1ED2xLB1JR9xX8o5Vc21eZJqaw12sCJq65VvRFbmY5\"]}},\"version\":1}"}},"contracts/TimeLockController.sol":{"TimelockController":{"abi":[{"inputs":[{"internalType":"uint256","name":"_minDelay","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"predecessor","type":"bytes32"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"minDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"predecessor","type":"bytes32"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"delay","type":"uint256"}],"name":"schedule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"timestamps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_5347":{"entryPoint":null,"id":5347,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":122,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":68,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":63,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":78,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1048:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:32:17","statements":[{"nodeType":"YulAssignment","src":"389:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:77:17"},{"body":{"nodeType":"YulBlock","src":"460:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:17"},"nodeType":"YulFunctionCall","src":"519:12:17"},"nodeType":"YulExpressionStatement","src":"519:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:17"},"nodeType":"YulFunctionCall","src":"490:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:17"},"nodeType":"YulFunctionCall","src":"480:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:17"},"nodeType":"YulFunctionCall","src":"473:43:17"},"nodeType":"YulIf","src":"470:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:17","type":""}],"src":"417:122:17"},{"body":{"nodeType":"YulBlock","src":"608:80:17","statements":[{"nodeType":"YulAssignment","src":"618:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:17"},"nodeType":"YulFunctionCall","src":"627:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:17"},"nodeType":"YulFunctionCall","src":"649:33:17"},"nodeType":"YulExpressionStatement","src":"649:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:17","type":""}],"src":"545:143:17"},{"body":{"nodeType":"YulBlock","src":"771:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"817:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"819:77:17"},"nodeType":"YulFunctionCall","src":"819:79:17"},"nodeType":"YulExpressionStatement","src":"819:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"792:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"788:3:17"},"nodeType":"YulFunctionCall","src":"788:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"813:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"784:3:17"},"nodeType":"YulFunctionCall","src":"784:32:17"},"nodeType":"YulIf","src":"781:119:17"},{"nodeType":"YulBlock","src":"910:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"925:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"939:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"929:6:17","type":""}]},{"nodeType":"YulAssignment","src":"954:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1000:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1011:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"996:3:17"},"nodeType":"YulFunctionCall","src":"996:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1020:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"964:31:17"},"nodeType":"YulFunctionCall","src":"964:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"954:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"741:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"752:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"764:6:17","type":""}],"src":"694:351:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610b97380380610b978339818101604052810190610032919061007a565b80600181905550506100a7565b600080fd5b6000819050919050565b61005781610044565b811461006257600080fd5b50565b6000815190506100748161004e565b92915050565b6000602082840312156100905761008f61003f565b5b600061009e84828501610065565b91505092915050565b610ae1806100b66000396000f3fe60806040526004361061003f5760003560e01c806301d5062a14610044578063134008d31461006d578063b587295814610089578063c63c4e9b146100c6575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906104e8565b6100f1565b005b61008760048036038101906100829190610597565b6101ec565b005b34801561009557600080fd5b506100b060048036038101906100ab9190610631565b610391565b6040516100bd919061066d565b60405180910390f35b3480156100d257600080fd5b506100db6103a9565b6040516100e8919061066d565b60405180910390f35b600154811015610136576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012d9061070b565b60405180910390fd5b6000878787878787604051602001610153969594939291906107a7565b604051602081830303815290604052805190602001209050600080600083815260200190815260200160002054146101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610875565b60405180910390fd5b81426101cc91906108c4565b600080838152602001908152602001600020819055505050505050505050565b6000868686868686604051602001610209969594939291906107a7565b60405160208183030381529060405280519060200120905060008060008381526020019081526020016000205490506000810361027b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102729061096a565b60405180910390fd5b804210156102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b5906109d6565b60405180910390fd5b60008060008481526020019081526020016000208190555060008873ffffffffffffffffffffffffffffffffffffffff16888888604051610300929190610a26565b60006040518083038185875af1925050503d806000811461033d576040519150601f19603f3d011682016040523d82523d6000602084013e610342565b606091505b5050905080610386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037d90610a8b565b60405180910390fd5b505050505050505050565b60006020528060005260406000206000915090505481565b60015481565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103e4826103b9565b9050919050565b6103f4816103d9565b81146103ff57600080fd5b50565b600081359050610411816103eb565b92915050565b6000819050919050565b61042a81610417565b811461043557600080fd5b50565b60008135905061044781610421565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126104725761047161044d565b5b8235905067ffffffffffffffff81111561048f5761048e610452565b5b6020830191508360018202830111156104ab576104aa610457565b5b9250929050565b6000819050919050565b6104c5816104b2565b81146104d057600080fd5b50565b6000813590506104e2816104bc565b92915050565b600080600080600080600060c0888a031215610507576105066103af565b5b60006105158a828b01610402565b97505060206105268a828b01610438565b965050604088013567ffffffffffffffff811115610547576105466103b4565b5b6105538a828b0161045c565b955095505060606105668a828b016104d3565b93505060806105778a828b016104d3565b92505060a06105888a828b01610438565b91505092959891949750929550565b60008060008060008060a087890312156105b4576105b36103af565b5b60006105c289828a01610402565b96505060206105d389828a01610438565b955050604087013567ffffffffffffffff8111156105f4576105f36103b4565b5b61060089828a0161045c565b9450945050606061061389828a016104d3565b925050608061062489828a016104d3565b9150509295509295509295565b600060208284031215610647576106466103af565b5b6000610655848285016104d3565b91505092915050565b61066781610417565b82525050565b6000602082019050610682600083018461065e565b92915050565b600082825260208201905092915050565b7f54696d656c6f636b436f6e74726f6c6c65723a20696e73756666696369656e7460008201527f2064656c61790000000000000000000000000000000000000000000000000000602082015250565b60006106f5602683610688565b915061070082610699565b604082019050919050565b60006020820190508181036000830152610724816106e8565b9050919050565b610734816103d9565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610777838561073a565b935061078483858461074b565b61078d8361075a565b840190509392505050565b6107a1816104b2565b82525050565b600060a0820190506107bc600083018961072b565b6107c9602083018861065e565b81810360408301526107dc81868861076b565b90506107eb6060830185610798565b6107f86080830184610798565b979650505050505050565b7f54696d656c6f636b436f6e74726f6c6c65723a20616c7265616479207363686560008201527f64756c6564000000000000000000000000000000000000000000000000000000602082015250565b600061085f602583610688565b915061086a82610803565b604082019050919050565b6000602082019050818103600083015261088e81610852565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108cf82610417565b91506108da83610417565b92508282019050808211156108f2576108f1610895565b5b92915050565b7f54696d656c6f636b436f6e74726f6c6c65723a206e6f74207363686564756c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000610954602183610688565b915061095f826108f8565b604082019050919050565b6000602082019050818103600083015261098381610947565b9050919050565b7f54696d656c6f636b436f6e74726f6c6c65723a206e6f74207265616479000000600082015250565b60006109c0601d83610688565b91506109cb8261098a565b602082019050919050565b600060208201905081810360008301526109ef816109b3565b9050919050565b600081905092915050565b6000610a0d83856109f6565b9350610a1a83858461074b565b82840190509392505050565b6000610a33828486610a01565b91508190509392505050565b7f54696d656c6f636b436f6e74726f6c6c65723a2063616c6c206661696c656400600082015250565b6000610a75601f83610688565b9150610a8082610a3f565b602082019050919050565b60006020820190508181036000830152610aa481610a68565b905091905056fea2646970667358221220db5c729431da46910e4ca193b382e9cfb716a7cc076f10a40961b6b5eb84679d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB97 CODESIZE SUB DUP1 PUSH2 0xB97 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57 DUP2 PUSH2 0x44 JUMP JUMPDEST DUP2 EQ PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x74 DUP2 PUSH2 0x4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90 JUMPI PUSH2 0x8F PUSH2 0x3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E DUP5 DUP3 DUP6 ADD PUSH2 0x65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE1 DUP1 PUSH2 0xB6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D5062A EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x134008D3 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xB5872958 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xC63C4E9B EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0xF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x153 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 TIMESTAMP PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x209 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272 SWAP1 PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 TIMESTAMP LT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B5 SWAP1 PUSH2 0x9D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x300 SWAP3 SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x342 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x386 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37D SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E4 DUP3 PUSH2 0x3B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x411 DUP2 PUSH2 0x3EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A DUP2 PUSH2 0x417 JUMP JUMPDEST DUP2 EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x447 DUP2 PUSH2 0x421 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x472 JUMPI PUSH2 0x471 PUSH2 0x44D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48F JUMPI PUSH2 0x48E PUSH2 0x452 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4AB JUMPI PUSH2 0x4AA PUSH2 0x457 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C5 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E2 DUP2 PUSH2 0x4BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x507 JUMPI PUSH2 0x506 PUSH2 0x3AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x515 DUP11 DUP3 DUP12 ADD PUSH2 0x402 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x526 DUP11 DUP3 DUP12 ADD PUSH2 0x438 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x547 JUMPI PUSH2 0x546 PUSH2 0x3B4 JUMP JUMPDEST JUMPDEST PUSH2 0x553 DUP11 DUP3 DUP12 ADD PUSH2 0x45C JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x60 PUSH2 0x566 DUP11 DUP3 DUP12 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x577 DUP11 DUP3 DUP12 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x588 DUP11 DUP3 DUP12 ADD PUSH2 0x438 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x5B4 JUMPI PUSH2 0x5B3 PUSH2 0x3AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5C2 DUP10 DUP3 DUP11 ADD PUSH2 0x402 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x5D3 DUP10 DUP3 DUP11 ADD PUSH2 0x438 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x5F3 PUSH2 0x3B4 JUMP JUMPDEST JUMPDEST PUSH2 0x600 DUP10 DUP3 DUP11 ADD PUSH2 0x45C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x613 DUP10 DUP3 DUP11 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x624 DUP10 DUP3 DUP11 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x647 JUMPI PUSH2 0x646 PUSH2 0x3AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP5 DUP3 DUP6 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x667 DUP2 PUSH2 0x417 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x682 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54696D656C6F636B436F6E74726F6C6C65723A20696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2064656C61790000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F5 PUSH1 0x26 DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP2 POP PUSH2 0x700 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x724 DUP2 PUSH2 0x6E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x734 DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP4 DUP6 PUSH2 0x73A JUMP JUMPDEST SWAP4 POP PUSH2 0x784 DUP4 DUP6 DUP5 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x78D DUP4 PUSH2 0x75A JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7BC PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x7C9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x65E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x7DC DUP2 DUP7 DUP9 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP PUSH2 0x7EB PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x7F8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x798 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x54696D656C6F636B436F6E74726F6C6C65723A20616C72656164792073636865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64756C6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85F PUSH1 0x25 DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP2 POP PUSH2 0x86A DUP3 PUSH2 0x803 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x88E DUP2 PUSH2 0x852 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8CF DUP3 PUSH2 0x417 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DA DUP4 PUSH2 0x417 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8F2 JUMPI PUSH2 0x8F1 PUSH2 0x895 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54696D656C6F636B436F6E74726F6C6C65723A206E6F74207363686564756C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x954 PUSH1 0x21 DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP2 POP PUSH2 0x95F DUP3 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x983 DUP2 PUSH2 0x947 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D656C6F636B436F6E74726F6C6C65723A206E6F74207265616479000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C0 PUSH1 0x1D DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP2 POP PUSH2 0x9CB DUP3 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9EF DUP2 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0D DUP4 DUP6 PUSH2 0x9F6 JUMP JUMPDEST SWAP4 POP PUSH2 0xA1A DUP4 DUP6 DUP5 PUSH2 0x74B JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 DUP3 DUP5 DUP7 PUSH2 0xA01 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54696D656C6F636B436F6E74726F6C6C65723A2063616C6C206661696C656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH1 0x1F DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP2 POP PUSH2 0xA80 DUP3 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAA4 DUP2 PUSH2 0xA68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0x5C PUSH19 0x9431DA46910E4CA193B382E9CFB716A7CC076F LT LOG4 MULMOD PUSH2 0xB6B5 0xEB DUP5 PUSH8 0x9D64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"327:2035:16:-:0;;;696:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;749:9;738:8;:20;;;;696:70;327:2035;;88:117:17;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;327:2035:16:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@execute_5473":{"entryPoint":492,"id":5473,"parameterSlots":6,"returnSlots":0},"@minDelay_5336":{"entryPoint":937,"id":5336,"parameterSlots":0,"returnSlots":0},"@schedule_5403":{"entryPoint":241,"id":5403,"parameterSlots":7,"returnSlots":0},"@timestamps_5334":{"entryPoint":913,"id":5334,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1026,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":1235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":1116,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":1080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptrt_bytes32t_bytes32":{"entryPoint":1431,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptrt_bytes32t_bytes32t_uint256":{"entryPoint":1256,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bytes32":{"entryPoint":1585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1835,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1944,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":1899,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2561,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_stringliteral_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e_to_t_string_memory_ptr_fromStack":{"entryPoint":2483,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a_to_t_string_memory_ptr_fromStack":{"entryPoint":2664,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60_to_t_string_memory_ptr_fromStack":{"entryPoint":2375,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca_to_t_string_memory_ptr_fromStack":{"entryPoint":1768,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b_to_t_string_memory_ptr_fromStack":{"entryPoint":2130,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1630,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2598,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr_t_bytes32_t_bytes32__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":1959,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2518,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2699,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2410,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1803,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1645,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":1850,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2550,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1672,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2244,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":985,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1202,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":953,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1047,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1867,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":2197,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":1106,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1101,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1111,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":948,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":943,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1882,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e":{"entryPoint":2442,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a":{"entryPoint":2623,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60":{"entryPoint":2296,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca":{"entryPoint":1689,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b":{"entryPoint":2051,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1003,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1212,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1057,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13761:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"748:87:17","statements":[{"nodeType":"YulAssignment","src":"758:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:17"},"nodeType":"YulFunctionCall","src":"767:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:17"},"nodeType":"YulFunctionCall","src":"796:33:17"},"nodeType":"YulExpressionStatement","src":"796:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:17","type":""}],"src":"696:139:17"},{"body":{"nodeType":"YulBlock","src":"886:32:17","statements":[{"nodeType":"YulAssignment","src":"896:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:17","type":""}],"src":"841:77:17"},{"body":{"nodeType":"YulBlock","src":"967:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:17"},"nodeType":"YulFunctionCall","src":"1026:12:17"},"nodeType":"YulExpressionStatement","src":"1026:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:17"},"nodeType":"YulFunctionCall","src":"997:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:17"},"nodeType":"YulFunctionCall","src":"987:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:17"},"nodeType":"YulFunctionCall","src":"980:43:17"},"nodeType":"YulIf","src":"977:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:17","type":""}],"src":"924:122:17"},{"body":{"nodeType":"YulBlock","src":"1104:87:17","statements":[{"nodeType":"YulAssignment","src":"1114:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:17"},"nodeType":"YulFunctionCall","src":"1123:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:17"},"nodeType":"YulFunctionCall","src":"1152:33:17"},"nodeType":"YulExpressionStatement","src":"1152:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:17","type":""}],"src":"1052:139:17"},{"body":{"nodeType":"YulBlock","src":"1286:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1303:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1306:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1296:6:17"},"nodeType":"YulFunctionCall","src":"1296:12:17"},"nodeType":"YulExpressionStatement","src":"1296:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1197:117:17"},{"body":{"nodeType":"YulBlock","src":"1409:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1426:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1429:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1419:6:17"},"nodeType":"YulFunctionCall","src":"1419:12:17"},"nodeType":"YulExpressionStatement","src":"1419:12:17"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1320:117:17"},{"body":{"nodeType":"YulBlock","src":"1532:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1549:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1552:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1542:6:17"},"nodeType":"YulFunctionCall","src":"1542:12:17"},"nodeType":"YulExpressionStatement","src":"1542:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1443:117:17"},{"body":{"nodeType":"YulBlock","src":"1653:478:17","statements":[{"body":{"nodeType":"YulBlock","src":"1702:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1704:77:17"},"nodeType":"YulFunctionCall","src":"1704:79:17"},"nodeType":"YulExpressionStatement","src":"1704:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1681:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1689:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:17"},"nodeType":"YulFunctionCall","src":"1677:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"1696:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1673:3:17"},"nodeType":"YulFunctionCall","src":"1673:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1666:6:17"},"nodeType":"YulFunctionCall","src":"1666:35:17"},"nodeType":"YulIf","src":"1663:122:17"},{"nodeType":"YulAssignment","src":"1794:30:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1817:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1804:12:17"},"nodeType":"YulFunctionCall","src":"1804:20:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1794:6:17"}]},{"body":{"nodeType":"YulBlock","src":"1867:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1869:77:17"},"nodeType":"YulFunctionCall","src":"1869:79:17"},"nodeType":"YulExpressionStatement","src":"1869:79:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1839:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1847:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1836:2:17"},"nodeType":"YulFunctionCall","src":"1836:30:17"},"nodeType":"YulIf","src":"1833:117:17"},{"nodeType":"YulAssignment","src":"1959:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1975:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1983:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1971:3:17"},"nodeType":"YulFunctionCall","src":"1971:17:17"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1959:8:17"}]},{"body":{"nodeType":"YulBlock","src":"2042:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2044:77:17"},"nodeType":"YulFunctionCall","src":"2044:79:17"},"nodeType":"YulExpressionStatement","src":"2044:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2007:8:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2021:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2029:4:17","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2017:3:17"},"nodeType":"YulFunctionCall","src":"2017:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2003:3:17"},"nodeType":"YulFunctionCall","src":"2003:32:17"},{"name":"end","nodeType":"YulIdentifier","src":"2037:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2000:2:17"},"nodeType":"YulFunctionCall","src":"2000:41:17"},"nodeType":"YulIf","src":"1997:128:17"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1620:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1628:3:17","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1636:8:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1646:6:17","type":""}],"src":"1579:552:17"},{"body":{"nodeType":"YulBlock","src":"2182:32:17","statements":[{"nodeType":"YulAssignment","src":"2192:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2203:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2192:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2164:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2174:7:17","type":""}],"src":"2137:77:17"},{"body":{"nodeType":"YulBlock","src":"2263:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2320:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2329:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2332:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2322:6:17"},"nodeType":"YulFunctionCall","src":"2322:12:17"},"nodeType":"YulExpressionStatement","src":"2322:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2286:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2311:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2293:17:17"},"nodeType":"YulFunctionCall","src":"2293:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2283:2:17"},"nodeType":"YulFunctionCall","src":"2283:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2276:6:17"},"nodeType":"YulFunctionCall","src":"2276:43:17"},"nodeType":"YulIf","src":"2273:63:17"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2256:5:17","type":""}],"src":"2220:122:17"},{"body":{"nodeType":"YulBlock","src":"2400:87:17","statements":[{"nodeType":"YulAssignment","src":"2410:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2432:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2419:12:17"},"nodeType":"YulFunctionCall","src":"2419:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2410:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2475:5:17"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"2448:26:17"},"nodeType":"YulFunctionCall","src":"2448:33:17"},"nodeType":"YulExpressionStatement","src":"2448:33:17"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2378:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2386:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2394:5:17","type":""}],"src":"2348:139:17"},{"body":{"nodeType":"YulBlock","src":"2663:1085:17","statements":[{"body":{"nodeType":"YulBlock","src":"2710:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2712:77:17"},"nodeType":"YulFunctionCall","src":"2712:79:17"},"nodeType":"YulExpressionStatement","src":"2712:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2684:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2693:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2680:3:17"},"nodeType":"YulFunctionCall","src":"2680:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2705:3:17","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2676:3:17"},"nodeType":"YulFunctionCall","src":"2676:33:17"},"nodeType":"YulIf","src":"2673:120:17"},{"nodeType":"YulBlock","src":"2803:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2818:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2832:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2822:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2847:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2882:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2893:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2878:3:17"},"nodeType":"YulFunctionCall","src":"2878:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2902:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2857:20:17"},"nodeType":"YulFunctionCall","src":"2857:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2847:6:17"}]}]},{"nodeType":"YulBlock","src":"2930:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2959:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2975:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3010:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3021:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3006:3:17"},"nodeType":"YulFunctionCall","src":"3006:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3030:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2985:20:17"},"nodeType":"YulFunctionCall","src":"2985:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2975:6:17"}]}]},{"nodeType":"YulBlock","src":"3058:297:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3073:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3104:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3115:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3100:3:17"},"nodeType":"YulFunctionCall","src":"3100:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3087:12:17"},"nodeType":"YulFunctionCall","src":"3087:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3077:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3166:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3168:77:17"},"nodeType":"YulFunctionCall","src":"3168:79:17"},"nodeType":"YulExpressionStatement","src":"3168:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3138:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3146:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3135:2:17"},"nodeType":"YulFunctionCall","src":"3135:30:17"},"nodeType":"YulIf","src":"3132:117:17"},{"nodeType":"YulAssignment","src":"3263:82:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3317:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3328:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3313:3:17"},"nodeType":"YulFunctionCall","src":"3313:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3337:7:17"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3281:31:17"},"nodeType":"YulFunctionCall","src":"3281:64:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3263:6:17"},{"name":"value3","nodeType":"YulIdentifier","src":"3271:6:17"}]}]},{"nodeType":"YulBlock","src":"3365:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3380:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3394:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3384:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3410:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3445:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3456:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3441:3:17"},"nodeType":"YulFunctionCall","src":"3441:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3465:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3420:20:17"},"nodeType":"YulFunctionCall","src":"3420:53:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3410:6:17"}]}]},{"nodeType":"YulBlock","src":"3493:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3508:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3522:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3512:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3539:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3574:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3585:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3570:3:17"},"nodeType":"YulFunctionCall","src":"3570:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3594:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3549:20:17"},"nodeType":"YulFunctionCall","src":"3549:53:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3539:6:17"}]}]},{"nodeType":"YulBlock","src":"3622:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3637:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3651:3:17","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3641:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3668:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3703:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3714:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3699:3:17"},"nodeType":"YulFunctionCall","src":"3699:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3723:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3678:20:17"},"nodeType":"YulFunctionCall","src":"3678:53:17"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3668:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptrt_bytes32t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2585:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2596:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2608:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2616:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2624:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2632:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2640:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2648:6:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2656:6:17","type":""}],"src":"2493:1255:17"},{"body":{"nodeType":"YulBlock","src":"3907:956:17","statements":[{"body":{"nodeType":"YulBlock","src":"3954:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3956:77:17"},"nodeType":"YulFunctionCall","src":"3956:79:17"},"nodeType":"YulExpressionStatement","src":"3956:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3928:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3937:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3924:3:17"},"nodeType":"YulFunctionCall","src":"3924:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3949:3:17","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3920:3:17"},"nodeType":"YulFunctionCall","src":"3920:33:17"},"nodeType":"YulIf","src":"3917:120:17"},{"nodeType":"YulBlock","src":"4047:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4062:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4076:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4066:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4091:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4126:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4137:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4122:3:17"},"nodeType":"YulFunctionCall","src":"4122:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4146:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4101:20:17"},"nodeType":"YulFunctionCall","src":"4101:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4091:6:17"}]}]},{"nodeType":"YulBlock","src":"4174:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4189:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4203:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4193:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4219:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4254:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4265:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4250:3:17"},"nodeType":"YulFunctionCall","src":"4250:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4274:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4229:20:17"},"nodeType":"YulFunctionCall","src":"4229:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4219:6:17"}]}]},{"nodeType":"YulBlock","src":"4302:297:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4317:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4348:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4359:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4344:3:17"},"nodeType":"YulFunctionCall","src":"4344:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4331:12:17"},"nodeType":"YulFunctionCall","src":"4331:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4321:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4410:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4412:77:17"},"nodeType":"YulFunctionCall","src":"4412:79:17"},"nodeType":"YulExpressionStatement","src":"4412:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4382:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4390:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4379:2:17"},"nodeType":"YulFunctionCall","src":"4379:30:17"},"nodeType":"YulIf","src":"4376:117:17"},{"nodeType":"YulAssignment","src":"4507:82:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4561:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4572:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4557:3:17"},"nodeType":"YulFunctionCall","src":"4557:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4581:7:17"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"4525:31:17"},"nodeType":"YulFunctionCall","src":"4525:64:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4507:6:17"},{"name":"value3","nodeType":"YulIdentifier","src":"4515:6:17"}]}]},{"nodeType":"YulBlock","src":"4609:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4624:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4638:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4628:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4654:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4689:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4700:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4685:3:17"},"nodeType":"YulFunctionCall","src":"4685:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4709:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4664:20:17"},"nodeType":"YulFunctionCall","src":"4664:53:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4654:6:17"}]}]},{"nodeType":"YulBlock","src":"4737:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4752:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4766:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4756:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4783:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4818:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4829:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4814:3:17"},"nodeType":"YulFunctionCall","src":"4814:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4838:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4793:20:17"},"nodeType":"YulFunctionCall","src":"4793:53:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4783:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptrt_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3837:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3848:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3860:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3868:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3876:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3884:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3892:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3900:6:17","type":""}],"src":"3754:1109:17"},{"body":{"nodeType":"YulBlock","src":"4935:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"4981:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4983:77:17"},"nodeType":"YulFunctionCall","src":"4983:79:17"},"nodeType":"YulExpressionStatement","src":"4983:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4956:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4965:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4952:3:17"},"nodeType":"YulFunctionCall","src":"4952:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4977:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4948:3:17"},"nodeType":"YulFunctionCall","src":"4948:32:17"},"nodeType":"YulIf","src":"4945:119:17"},{"nodeType":"YulBlock","src":"5074:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5089:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5103:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5093:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5118:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5153:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5164:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5149:3:17"},"nodeType":"YulFunctionCall","src":"5149:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5173:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5128:20:17"},"nodeType":"YulFunctionCall","src":"5128:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5118:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4905:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4916:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4928:6:17","type":""}],"src":"4869:329:17"},{"body":{"nodeType":"YulBlock","src":"5269:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5286:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5309:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5291:17:17"},"nodeType":"YulFunctionCall","src":"5291:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5279:6:17"},"nodeType":"YulFunctionCall","src":"5279:37:17"},"nodeType":"YulExpressionStatement","src":"5279:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5257:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5264:3:17","type":""}],"src":"5204:118:17"},{"body":{"nodeType":"YulBlock","src":"5426:124:17","statements":[{"nodeType":"YulAssignment","src":"5436:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5448:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5459:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5444:3:17"},"nodeType":"YulFunctionCall","src":"5444:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5436:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5516:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5529:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5540:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5525:3:17"},"nodeType":"YulFunctionCall","src":"5525:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5472:43:17"},"nodeType":"YulFunctionCall","src":"5472:71:17"},"nodeType":"YulExpressionStatement","src":"5472:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5398:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5410:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5421:4:17","type":""}],"src":"5328:222:17"},{"body":{"nodeType":"YulBlock","src":"5652:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5669:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5674:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5662:6:17"},"nodeType":"YulFunctionCall","src":"5662:19:17"},"nodeType":"YulExpressionStatement","src":"5662:19:17"},{"nodeType":"YulAssignment","src":"5690:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5709:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5714:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5705:3:17"},"nodeType":"YulFunctionCall","src":"5705:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5690:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5624:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5629:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5640:11:17","type":""}],"src":"5556:169:17"},{"body":{"nodeType":"YulBlock","src":"5837:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5859:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5867:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5855:3:17"},"nodeType":"YulFunctionCall","src":"5855:14:17"},{"hexValue":"54696d656c6f636b436f6e74726f6c6c65723a20696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"5871:34:17","type":"","value":"TimelockController: insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5848:6:17"},"nodeType":"YulFunctionCall","src":"5848:58:17"},"nodeType":"YulExpressionStatement","src":"5848:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5927:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5935:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:17"},"nodeType":"YulFunctionCall","src":"5923:15:17"},{"hexValue":"2064656c6179","kind":"string","nodeType":"YulLiteral","src":"5940:8:17","type":"","value":" delay"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5916:6:17"},"nodeType":"YulFunctionCall","src":"5916:33:17"},"nodeType":"YulExpressionStatement","src":"5916:33:17"}]},"name":"store_literal_in_memory_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5829:6:17","type":""}],"src":"5731:225:17"},{"body":{"nodeType":"YulBlock","src":"6108:220:17","statements":[{"nodeType":"YulAssignment","src":"6118:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6184:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6189:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6125:58:17"},"nodeType":"YulFunctionCall","src":"6125:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6118:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6290:3:17"}],"functionName":{"name":"store_literal_in_memory_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca","nodeType":"YulIdentifier","src":"6201:88:17"},"nodeType":"YulFunctionCall","src":"6201:93:17"},"nodeType":"YulExpressionStatement","src":"6201:93:17"},{"nodeType":"YulAssignment","src":"6303:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6314:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6319:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6310:3:17"},"nodeType":"YulFunctionCall","src":"6310:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6303:3:17"}]}]},"name":"abi_encode_t_stringliteral_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6096:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6104:3:17","type":""}],"src":"5962:366:17"},{"body":{"nodeType":"YulBlock","src":"6505:248:17","statements":[{"nodeType":"YulAssignment","src":"6515:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6527:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6538:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6523:3:17"},"nodeType":"YulFunctionCall","src":"6523:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6515:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6562:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6573:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6558:3:17"},"nodeType":"YulFunctionCall","src":"6558:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6581:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6587:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6577:3:17"},"nodeType":"YulFunctionCall","src":"6577:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6551:6:17"},"nodeType":"YulFunctionCall","src":"6551:47:17"},"nodeType":"YulExpressionStatement","src":"6551:47:17"},{"nodeType":"YulAssignment","src":"6607:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6741:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6615:124:17"},"nodeType":"YulFunctionCall","src":"6615:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6607:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6485:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6500:4:17","type":""}],"src":"6334:419:17"},{"body":{"nodeType":"YulBlock","src":"6824:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6841:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6864:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6846:17:17"},"nodeType":"YulFunctionCall","src":"6846:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6834:6:17"},"nodeType":"YulFunctionCall","src":"6834:37:17"},"nodeType":"YulExpressionStatement","src":"6834:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6812:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6819:3:17","type":""}],"src":"6759:118:17"},{"body":{"nodeType":"YulBlock","src":"6978:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6995:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7000:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6988:6:17"},"nodeType":"YulFunctionCall","src":"6988:19:17"},"nodeType":"YulExpressionStatement","src":"6988:19:17"},{"nodeType":"YulAssignment","src":"7016:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7035:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7040:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7031:3:17"},"nodeType":"YulFunctionCall","src":"7031:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7016:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6950:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"6955:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6966:11:17","type":""}],"src":"6883:168:17"},{"body":{"nodeType":"YulBlock","src":"7121:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7144:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"7149:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7154:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7131:12:17"},"nodeType":"YulFunctionCall","src":"7131:30:17"},"nodeType":"YulExpressionStatement","src":"7131:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7181:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7186:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7177:3:17"},"nodeType":"YulFunctionCall","src":"7177:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"7195:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7170:6:17"},"nodeType":"YulFunctionCall","src":"7170:27:17"},"nodeType":"YulExpressionStatement","src":"7170:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7103:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7108:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"7113:6:17","type":""}],"src":"7057:146:17"},{"body":{"nodeType":"YulBlock","src":"7257:54:17","statements":[{"nodeType":"YulAssignment","src":"7267:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7285:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7292:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7281:3:17"},"nodeType":"YulFunctionCall","src":"7281:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7301:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7297:3:17"},"nodeType":"YulFunctionCall","src":"7297:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7277:3:17"},"nodeType":"YulFunctionCall","src":"7277:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7267:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7240:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7250:6:17","type":""}],"src":"7209:102:17"},{"body":{"nodeType":"YulBlock","src":"7439:214:17","statements":[{"nodeType":"YulAssignment","src":"7449:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7514:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7519:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7456:57:17"},"nodeType":"YulFunctionCall","src":"7456:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7449:3:17"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7573:5:17"},{"name":"pos","nodeType":"YulIdentifier","src":"7580:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7585:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7536:36:17"},"nodeType":"YulFunctionCall","src":"7536:56:17"},"nodeType":"YulExpressionStatement","src":"7536:56:17"},{"nodeType":"YulAssignment","src":"7601:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7612:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7639:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7617:21:17"},"nodeType":"YulFunctionCall","src":"7617:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7608:3:17"},"nodeType":"YulFunctionCall","src":"7608:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7601:3:17"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"7412:5:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"7419:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7427:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7435:3:17","type":""}],"src":"7339:314:17"},{"body":{"nodeType":"YulBlock","src":"7724:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7741:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7764:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7746:17:17"},"nodeType":"YulFunctionCall","src":"7746:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7734:6:17"},"nodeType":"YulFunctionCall","src":"7734:37:17"},"nodeType":"YulExpressionStatement","src":"7734:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7712:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7719:3:17","type":""}],"src":"7659:118:17"},{"body":{"nodeType":"YulBlock","src":"8021:533:17","statements":[{"nodeType":"YulAssignment","src":"8031:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8043:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8054:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8039:3:17"},"nodeType":"YulFunctionCall","src":"8039:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8031:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8112:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8125:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8136:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8121:3:17"},"nodeType":"YulFunctionCall","src":"8121:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8068:43:17"},"nodeType":"YulFunctionCall","src":"8068:71:17"},"nodeType":"YulExpressionStatement","src":"8068:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8193:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8206:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8217:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8202:3:17"},"nodeType":"YulFunctionCall","src":"8202:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8149:43:17"},"nodeType":"YulFunctionCall","src":"8149:72:17"},"nodeType":"YulExpressionStatement","src":"8149:72:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8242:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8253:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8238:3:17"},"nodeType":"YulFunctionCall","src":"8238:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8262:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8268:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8258:3:17"},"nodeType":"YulFunctionCall","src":"8258:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8231:6:17"},"nodeType":"YulFunctionCall","src":"8231:48:17"},"nodeType":"YulExpressionStatement","src":"8231:48:17"},{"nodeType":"YulAssignment","src":"8288:94:17","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8360:6:17"},{"name":"value3","nodeType":"YulIdentifier","src":"8368:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"8377:4:17"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8296:63:17"},"nodeType":"YulFunctionCall","src":"8296:86:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8288:4:17"}]},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8436:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8449:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8460:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8445:3:17"},"nodeType":"YulFunctionCall","src":"8445:18:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"8392:43:17"},"nodeType":"YulFunctionCall","src":"8392:72:17"},"nodeType":"YulExpressionStatement","src":"8392:72:17"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"8518:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8531:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8542:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8527:3:17"},"nodeType":"YulFunctionCall","src":"8527:19:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"8474:43:17"},"nodeType":"YulFunctionCall","src":"8474:73:17"},"nodeType":"YulExpressionStatement","src":"8474:73:17"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr_t_bytes32_t_bytes32__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7953:9:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7965:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7973:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7981:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7989:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7997:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8005:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8016:4:17","type":""}],"src":"7783:771:17"},{"body":{"nodeType":"YulBlock","src":"8666:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8688:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8696:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8684:3:17"},"nodeType":"YulFunctionCall","src":"8684:14:17"},{"hexValue":"54696d656c6f636b436f6e74726f6c6c65723a20616c72656164792073636865","kind":"string","nodeType":"YulLiteral","src":"8700:34:17","type":"","value":"TimelockController: already sche"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8677:6:17"},"nodeType":"YulFunctionCall","src":"8677:58:17"},"nodeType":"YulExpressionStatement","src":"8677:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8756:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8764:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8752:3:17"},"nodeType":"YulFunctionCall","src":"8752:15:17"},{"hexValue":"64756c6564","kind":"string","nodeType":"YulLiteral","src":"8769:7:17","type":"","value":"duled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8745:6:17"},"nodeType":"YulFunctionCall","src":"8745:32:17"},"nodeType":"YulExpressionStatement","src":"8745:32:17"}]},"name":"store_literal_in_memory_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8658:6:17","type":""}],"src":"8560:224:17"},{"body":{"nodeType":"YulBlock","src":"8936:220:17","statements":[{"nodeType":"YulAssignment","src":"8946:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9012:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9017:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8953:58:17"},"nodeType":"YulFunctionCall","src":"8953:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8946:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9118:3:17"}],"functionName":{"name":"store_literal_in_memory_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b","nodeType":"YulIdentifier","src":"9029:88:17"},"nodeType":"YulFunctionCall","src":"9029:93:17"},"nodeType":"YulExpressionStatement","src":"9029:93:17"},{"nodeType":"YulAssignment","src":"9131:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9142:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9147:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9138:3:17"},"nodeType":"YulFunctionCall","src":"9138:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9131:3:17"}]}]},"name":"abi_encode_t_stringliteral_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8924:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8932:3:17","type":""}],"src":"8790:366:17"},{"body":{"nodeType":"YulBlock","src":"9333:248:17","statements":[{"nodeType":"YulAssignment","src":"9343:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9355:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9366:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9351:3:17"},"nodeType":"YulFunctionCall","src":"9351:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9343:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9390:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9401:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9386:3:17"},"nodeType":"YulFunctionCall","src":"9386:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9409:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9415:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9405:3:17"},"nodeType":"YulFunctionCall","src":"9405:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9379:6:17"},"nodeType":"YulFunctionCall","src":"9379:47:17"},"nodeType":"YulExpressionStatement","src":"9379:47:17"},{"nodeType":"YulAssignment","src":"9435:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9569:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9443:124:17"},"nodeType":"YulFunctionCall","src":"9443:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9435:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9313:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9328:4:17","type":""}],"src":"9162:419:17"},{"body":{"nodeType":"YulBlock","src":"9615:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9632:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9635:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9625:6:17"},"nodeType":"YulFunctionCall","src":"9625:88:17"},"nodeType":"YulExpressionStatement","src":"9625:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9729:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9732:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9722:6:17"},"nodeType":"YulFunctionCall","src":"9722:15:17"},"nodeType":"YulExpressionStatement","src":"9722:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9753:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9756:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9746:6:17"},"nodeType":"YulFunctionCall","src":"9746:15:17"},"nodeType":"YulExpressionStatement","src":"9746:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9587:180:17"},{"body":{"nodeType":"YulBlock","src":"9817:147:17","statements":[{"nodeType":"YulAssignment","src":"9827:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9850:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9832:17:17"},"nodeType":"YulFunctionCall","src":"9832:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9827:1:17"}]},{"nodeType":"YulAssignment","src":"9861:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9884:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9866:17:17"},"nodeType":"YulFunctionCall","src":"9866:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9861:1:17"}]},{"nodeType":"YulAssignment","src":"9895:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9906:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"9909:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9902:3:17"},"nodeType":"YulFunctionCall","src":"9902:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9895:3:17"}]},{"body":{"nodeType":"YulBlock","src":"9935:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9937:16:17"},"nodeType":"YulFunctionCall","src":"9937:18:17"},"nodeType":"YulExpressionStatement","src":"9937:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9927:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"9930:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9924:2:17"},"nodeType":"YulFunctionCall","src":"9924:10:17"},"nodeType":"YulIf","src":"9921:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9804:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"9807:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9813:3:17","type":""}],"src":"9773:191:17"},{"body":{"nodeType":"YulBlock","src":"10076:114:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10098:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10106:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10094:3:17"},"nodeType":"YulFunctionCall","src":"10094:14:17"},{"hexValue":"54696d656c6f636b436f6e74726f6c6c65723a206e6f74207363686564756c65","kind":"string","nodeType":"YulLiteral","src":"10110:34:17","type":"","value":"TimelockController: not schedule"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10087:6:17"},"nodeType":"YulFunctionCall","src":"10087:58:17"},"nodeType":"YulExpressionStatement","src":"10087:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10166:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10174:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10162:3:17"},"nodeType":"YulFunctionCall","src":"10162:15:17"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"10179:3:17","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10155:6:17"},"nodeType":"YulFunctionCall","src":"10155:28:17"},"nodeType":"YulExpressionStatement","src":"10155:28:17"}]},"name":"store_literal_in_memory_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10068:6:17","type":""}],"src":"9970:220:17"},{"body":{"nodeType":"YulBlock","src":"10342:220:17","statements":[{"nodeType":"YulAssignment","src":"10352:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10418:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10423:2:17","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10359:58:17"},"nodeType":"YulFunctionCall","src":"10359:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10352:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10524:3:17"}],"functionName":{"name":"store_literal_in_memory_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60","nodeType":"YulIdentifier","src":"10435:88:17"},"nodeType":"YulFunctionCall","src":"10435:93:17"},"nodeType":"YulExpressionStatement","src":"10435:93:17"},{"nodeType":"YulAssignment","src":"10537:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10548:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10553:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10544:3:17"},"nodeType":"YulFunctionCall","src":"10544:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10537:3:17"}]}]},"name":"abi_encode_t_stringliteral_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10330:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10338:3:17","type":""}],"src":"10196:366:17"},{"body":{"nodeType":"YulBlock","src":"10739:248:17","statements":[{"nodeType":"YulAssignment","src":"10749:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10761:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10772:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10757:3:17"},"nodeType":"YulFunctionCall","src":"10757:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10749:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10796:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10807:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10792:3:17"},"nodeType":"YulFunctionCall","src":"10792:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10815:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10821:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10811:3:17"},"nodeType":"YulFunctionCall","src":"10811:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10785:6:17"},"nodeType":"YulFunctionCall","src":"10785:47:17"},"nodeType":"YulExpressionStatement","src":"10785:47:17"},{"nodeType":"YulAssignment","src":"10841:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10975:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10849:124:17"},"nodeType":"YulFunctionCall","src":"10849:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10841:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10719:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10734:4:17","type":""}],"src":"10568:419:17"},{"body":{"nodeType":"YulBlock","src":"11099:73:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11121:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11129:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11117:3:17"},"nodeType":"YulFunctionCall","src":"11117:14:17"},{"hexValue":"54696d656c6f636b436f6e74726f6c6c65723a206e6f74207265616479","kind":"string","nodeType":"YulLiteral","src":"11133:31:17","type":"","value":"TimelockController: not ready"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11110:6:17"},"nodeType":"YulFunctionCall","src":"11110:55:17"},"nodeType":"YulExpressionStatement","src":"11110:55:17"}]},"name":"store_literal_in_memory_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11091:6:17","type":""}],"src":"10993:179:17"},{"body":{"nodeType":"YulBlock","src":"11324:220:17","statements":[{"nodeType":"YulAssignment","src":"11334:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11400:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11405:2:17","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11341:58:17"},"nodeType":"YulFunctionCall","src":"11341:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11334:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11506:3:17"}],"functionName":{"name":"store_literal_in_memory_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e","nodeType":"YulIdentifier","src":"11417:88:17"},"nodeType":"YulFunctionCall","src":"11417:93:17"},"nodeType":"YulExpressionStatement","src":"11417:93:17"},{"nodeType":"YulAssignment","src":"11519:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11530:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11535:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11526:3:17"},"nodeType":"YulFunctionCall","src":"11526:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11519:3:17"}]}]},"name":"abi_encode_t_stringliteral_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11312:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11320:3:17","type":""}],"src":"11178:366:17"},{"body":{"nodeType":"YulBlock","src":"11721:248:17","statements":[{"nodeType":"YulAssignment","src":"11731:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11743:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11754:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11739:3:17"},"nodeType":"YulFunctionCall","src":"11739:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11731:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11778:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11789:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11774:3:17"},"nodeType":"YulFunctionCall","src":"11774:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11797:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11803:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11793:3:17"},"nodeType":"YulFunctionCall","src":"11793:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11767:6:17"},"nodeType":"YulFunctionCall","src":"11767:47:17"},"nodeType":"YulExpressionStatement","src":"11767:47:17"},{"nodeType":"YulAssignment","src":"11823:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11957:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11831:124:17"},"nodeType":"YulFunctionCall","src":"11831:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11823:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11701:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11716:4:17","type":""}],"src":"11550:419:17"},{"body":{"nodeType":"YulBlock","src":"12088:34:17","statements":[{"nodeType":"YulAssignment","src":"12098:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"12113:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12098:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12060:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"12065:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12076:11:17","type":""}],"src":"11975:147:17"},{"body":{"nodeType":"YulBlock","src":"12268:209:17","statements":[{"nodeType":"YulAssignment","src":"12278:95:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12361:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"12366:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12285:75:17"},"nodeType":"YulFunctionCall","src":"12285:88:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12278:3:17"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12420:5:17"},{"name":"pos","nodeType":"YulIdentifier","src":"12427:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"12432:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12383:36:17"},"nodeType":"YulFunctionCall","src":"12383:56:17"},"nodeType":"YulExpressionStatement","src":"12383:56:17"},{"nodeType":"YulAssignment","src":"12448:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12459:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"12464:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12455:3:17"},"nodeType":"YulFunctionCall","src":"12455:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12448:3:17"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"12241:5:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"12248:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12256:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12264:3:17","type":""}],"src":"12150:327:17"},{"body":{"nodeType":"YulBlock","src":"12627:147:17","statements":[{"nodeType":"YulAssignment","src":"12638:110:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12727:6:17"},{"name":"value1","nodeType":"YulIdentifier","src":"12735:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"12744:3:17"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12645:81:17"},"nodeType":"YulFunctionCall","src":"12645:103:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12638:3:17"}]},{"nodeType":"YulAssignment","src":"12758:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"12765:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12758:3:17"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12598:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12604:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12612:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12623:3:17","type":""}],"src":"12483:291:17"},{"body":{"nodeType":"YulBlock","src":"12886:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12908:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12916:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12904:3:17"},"nodeType":"YulFunctionCall","src":"12904:14:17"},{"hexValue":"54696d656c6f636b436f6e74726f6c6c65723a2063616c6c206661696c6564","kind":"string","nodeType":"YulLiteral","src":"12920:33:17","type":"","value":"TimelockController: call failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12897:6:17"},"nodeType":"YulFunctionCall","src":"12897:57:17"},"nodeType":"YulExpressionStatement","src":"12897:57:17"}]},"name":"store_literal_in_memory_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12878:6:17","type":""}],"src":"12780:181:17"},{"body":{"nodeType":"YulBlock","src":"13113:220:17","statements":[{"nodeType":"YulAssignment","src":"13123:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13189:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13194:2:17","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13130:58:17"},"nodeType":"YulFunctionCall","src":"13130:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13123:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13295:3:17"}],"functionName":{"name":"store_literal_in_memory_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a","nodeType":"YulIdentifier","src":"13206:88:17"},"nodeType":"YulFunctionCall","src":"13206:93:17"},"nodeType":"YulExpressionStatement","src":"13206:93:17"},{"nodeType":"YulAssignment","src":"13308:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13319:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13324:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13315:3:17"},"nodeType":"YulFunctionCall","src":"13315:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13308:3:17"}]}]},"name":"abi_encode_t_stringliteral_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13101:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13109:3:17","type":""}],"src":"12967:366:17"},{"body":{"nodeType":"YulBlock","src":"13510:248:17","statements":[{"nodeType":"YulAssignment","src":"13520:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13532:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13543:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13528:3:17"},"nodeType":"YulFunctionCall","src":"13528:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13520:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13567:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13578:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13563:3:17"},"nodeType":"YulFunctionCall","src":"13563:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13586:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13592:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13582:3:17"},"nodeType":"YulFunctionCall","src":"13582:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13556:6:17"},"nodeType":"YulFunctionCall","src":"13556:47:17"},"nodeType":"YulExpressionStatement","src":"13556:47:17"},{"nodeType":"YulAssignment","src":"13612:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13746:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13620:124:17"},"nodeType":"YulFunctionCall","src":"13620:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13612:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13490:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13505:4:17","type":""}],"src":"13339:419:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptrt_bytes32t_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptrt_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca(memPtr) {\n\n        mstore(add(memPtr, 0), \"TimelockController: insufficient\")\n\n        mstore(add(memPtr, 32), \" delay\")\n\n    }\n\n    function abi_encode_t_stringliteral_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75aaed5c76f1bea21a1c6dab60898c911c430cd1eac23b8d8a559aa50cb17eca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr_t_bytes32_t_bytes32__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes32_t_bytes32__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value4,  add(headStart, 96))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b(memPtr) {\n\n        mstore(add(memPtr, 0), \"TimelockController: already sche\")\n\n        mstore(add(memPtr, 32), \"duled\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8a92960e55f6a6a6c40e5126818565f051dd6bfcd7911bfe63921a85f1fd12b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60(memPtr) {\n\n        mstore(add(memPtr, 0), \"TimelockController: not schedule\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53bc98d7631803d160e55594a91b8073fa6daa21a84423373e79e0d127504c60_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e(memPtr) {\n\n        mstore(add(memPtr, 0), \"TimelockController: not ready\")\n\n    }\n\n    function abi_encode_t_stringliteral_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2303b443b201410a290f84fb48f82709365cd45c4dfbc4e329c9dabaa312d33e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a(memPtr) {\n\n        mstore(add(memPtr, 0), \"TimelockController: call failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2956d2354f49a72dd9b488f71e723413ccfce71cd826ae678a391f351e21938a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061003f5760003560e01c806301d5062a14610044578063134008d31461006d578063b587295814610089578063c63c4e9b146100c6575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906104e8565b6100f1565b005b61008760048036038101906100829190610597565b6101ec565b005b34801561009557600080fd5b506100b060048036038101906100ab9190610631565b610391565b6040516100bd919061066d565b60405180910390f35b3480156100d257600080fd5b506100db6103a9565b6040516100e8919061066d565b60405180910390f35b600154811015610136576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012d9061070b565b60405180910390fd5b6000878787878787604051602001610153969594939291906107a7565b604051602081830303815290604052805190602001209050600080600083815260200190815260200160002054146101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610875565b60405180910390fd5b81426101cc91906108c4565b600080838152602001908152602001600020819055505050505050505050565b6000868686868686604051602001610209969594939291906107a7565b60405160208183030381529060405280519060200120905060008060008381526020019081526020016000205490506000810361027b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102729061096a565b60405180910390fd5b804210156102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b5906109d6565b60405180910390fd5b60008060008481526020019081526020016000208190555060008873ffffffffffffffffffffffffffffffffffffffff16888888604051610300929190610a26565b60006040518083038185875af1925050503d806000811461033d576040519150601f19603f3d011682016040523d82523d6000602084013e610342565b606091505b5050905080610386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037d90610a8b565b60405180910390fd5b505050505050505050565b60006020528060005260406000206000915090505481565b60015481565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103e4826103b9565b9050919050565b6103f4816103d9565b81146103ff57600080fd5b50565b600081359050610411816103eb565b92915050565b6000819050919050565b61042a81610417565b811461043557600080fd5b50565b60008135905061044781610421565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126104725761047161044d565b5b8235905067ffffffffffffffff81111561048f5761048e610452565b5b6020830191508360018202830111156104ab576104aa610457565b5b9250929050565b6000819050919050565b6104c5816104b2565b81146104d057600080fd5b50565b6000813590506104e2816104bc565b92915050565b600080600080600080600060c0888a031215610507576105066103af565b5b60006105158a828b01610402565b97505060206105268a828b01610438565b965050604088013567ffffffffffffffff811115610547576105466103b4565b5b6105538a828b0161045c565b955095505060606105668a828b016104d3565b93505060806105778a828b016104d3565b92505060a06105888a828b01610438565b91505092959891949750929550565b60008060008060008060a087890312156105b4576105b36103af565b5b60006105c289828a01610402565b96505060206105d389828a01610438565b955050604087013567ffffffffffffffff8111156105f4576105f36103b4565b5b61060089828a0161045c565b9450945050606061061389828a016104d3565b925050608061062489828a016104d3565b9150509295509295509295565b600060208284031215610647576106466103af565b5b6000610655848285016104d3565b91505092915050565b61066781610417565b82525050565b6000602082019050610682600083018461065e565b92915050565b600082825260208201905092915050565b7f54696d656c6f636b436f6e74726f6c6c65723a20696e73756666696369656e7460008201527f2064656c61790000000000000000000000000000000000000000000000000000602082015250565b60006106f5602683610688565b915061070082610699565b604082019050919050565b60006020820190508181036000830152610724816106e8565b9050919050565b610734816103d9565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610777838561073a565b935061078483858461074b565b61078d8361075a565b840190509392505050565b6107a1816104b2565b82525050565b600060a0820190506107bc600083018961072b565b6107c9602083018861065e565b81810360408301526107dc81868861076b565b90506107eb6060830185610798565b6107f86080830184610798565b979650505050505050565b7f54696d656c6f636b436f6e74726f6c6c65723a20616c7265616479207363686560008201527f64756c6564000000000000000000000000000000000000000000000000000000602082015250565b600061085f602583610688565b915061086a82610803565b604082019050919050565b6000602082019050818103600083015261088e81610852565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108cf82610417565b91506108da83610417565b92508282019050808211156108f2576108f1610895565b5b92915050565b7f54696d656c6f636b436f6e74726f6c6c65723a206e6f74207363686564756c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000610954602183610688565b915061095f826108f8565b604082019050919050565b6000602082019050818103600083015261098381610947565b9050919050565b7f54696d656c6f636b436f6e74726f6c6c65723a206e6f74207265616479000000600082015250565b60006109c0601d83610688565b91506109cb8261098a565b602082019050919050565b600060208201905081810360008301526109ef816109b3565b9050919050565b600081905092915050565b6000610a0d83856109f6565b9350610a1a83858461074b565b82840190509392505050565b6000610a33828486610a01565b91508190509392505050565b7f54696d656c6f636b436f6e74726f6c6c65723a2063616c6c206661696c656400600082015250565b6000610a75601f83610688565b9150610a8082610a3f565b602082019050919050565b60006020820190508181036000830152610aa481610a68565b905091905056fea2646970667358221220db5c729431da46910e4ca193b382e9cfb716a7cc076f10a40961b6b5eb84679d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D5062A EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x134008D3 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xB5872958 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xC63C4E9B EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0xF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x153 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 TIMESTAMP PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x209 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272 SWAP1 PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 TIMESTAMP LT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B5 SWAP1 PUSH2 0x9D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x300 SWAP3 SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x342 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x386 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37D SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E4 DUP3 PUSH2 0x3B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x411 DUP2 PUSH2 0x3EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A DUP2 PUSH2 0x417 JUMP JUMPDEST DUP2 EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x447 DUP2 PUSH2 0x421 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x472 JUMPI PUSH2 0x471 PUSH2 0x44D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48F JUMPI PUSH2 0x48E PUSH2 0x452 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4AB JUMPI PUSH2 0x4AA PUSH2 0x457 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C5 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E2 DUP2 PUSH2 0x4BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x507 JUMPI PUSH2 0x506 PUSH2 0x3AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x515 DUP11 DUP3 DUP12 ADD PUSH2 0x402 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x526 DUP11 DUP3 DUP12 ADD PUSH2 0x438 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x547 JUMPI PUSH2 0x546 PUSH2 0x3B4 JUMP JUMPDEST JUMPDEST PUSH2 0x553 DUP11 DUP3 DUP12 ADD PUSH2 0x45C JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x60 PUSH2 0x566 DUP11 DUP3 DUP12 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x577 DUP11 DUP3 DUP12 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x588 DUP11 DUP3 DUP12 ADD PUSH2 0x438 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x5B4 JUMPI PUSH2 0x5B3 PUSH2 0x3AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5C2 DUP10 DUP3 DUP11 ADD PUSH2 0x402 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x5D3 DUP10 DUP3 DUP11 ADD PUSH2 0x438 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x5F3 PUSH2 0x3B4 JUMP JUMPDEST JUMPDEST PUSH2 0x600 DUP10 DUP3 DUP11 ADD PUSH2 0x45C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x613 DUP10 DUP3 DUP11 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x624 DUP10 DUP3 DUP11 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x647 JUMPI PUSH2 0x646 PUSH2 0x3AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP5 DUP3 DUP6 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x667 DUP2 PUSH2 0x417 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x682 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54696D656C6F636B436F6E74726F6C6C65723A20696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2064656C61790000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F5 PUSH1 0x26 DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP2 POP PUSH2 0x700 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x724 DUP2 PUSH2 0x6E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x734 DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP4 DUP6 PUSH2 0x73A JUMP JUMPDEST SWAP4 POP PUSH2 0x784 DUP4 DUP6 DUP5 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x78D DUP4 PUSH2 0x75A JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7BC PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x7C9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x65E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x7DC DUP2 DUP7 DUP9 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP PUSH2 0x7EB PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x7F8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x798 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x54696D656C6F636B436F6E74726F6C6C65723A20616C72656164792073636865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64756C6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85F PUSH1 0x25 DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP2 POP PUSH2 0x86A DUP3 PUSH2 0x803 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x88E DUP2 PUSH2 0x852 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8CF DUP3 PUSH2 0x417 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DA DUP4 PUSH2 0x417 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8F2 JUMPI PUSH2 0x8F1 PUSH2 0x895 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54696D656C6F636B436F6E74726F6C6C65723A206E6F74207363686564756C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x954 PUSH1 0x21 DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP2 POP PUSH2 0x95F DUP3 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x983 DUP2 PUSH2 0x947 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D656C6F636B436F6E74726F6C6C65723A206E6F74207265616479000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C0 PUSH1 0x1D DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP2 POP PUSH2 0x9CB DUP3 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9EF DUP2 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0D DUP4 DUP6 PUSH2 0x9F6 JUMP JUMPDEST SWAP4 POP PUSH2 0xA1A DUP4 DUP6 DUP5 PUSH2 0x74B JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 DUP3 DUP5 DUP7 PUSH2 0xA01 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54696D656C6F636B436F6E74726F6C6C65723A2063616C6C206661696C656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH1 0x1F DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP2 POP PUSH2 0xA80 DUP3 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAA4 DUP2 PUSH2 0xA68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0x5C PUSH19 0x9431DA46910E4CA193B382E9CFB716A7CC076F LT LOG4 MULMOD PUSH2 0xB6B5 0xEB DUP5 PUSH8 0x9D64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"327:2035:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:648;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1611:748;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;464:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;566:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:648;1083:8;;1074:5;:17;;1066:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1228:10;1262:6;1270:5;1277:4;;1283:11;1296:4;1251:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1241:61;;;;;;1228:74;;1339:1;1321:10;:14;1332:2;1321:14;;;;;;;;;;;;:19;1313:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1491:5;1473:15;:23;;;;:::i;:::-;1456:10;:14;1467:2;1456:14;;;;;;;;;;;:40;;;;1055:449;856:648;;;;;;;:::o;1611:748::-;1848:10;1882:6;1890:5;1897:4;;1903:11;1916:4;1871:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1861:61;;;;;;1848:74;;1933:17;1953:10;:14;1964:2;1953:14;;;;;;;;;;;;1933:34;;2001:1;1988:9;:14;1980:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2078:9;2059:15;:28;;2051:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2196:1;2179:10;:14;2190:2;2179:14;;;;;;;;;;;:18;;;;2240:12;2258:6;:11;;2277:5;2284:4;;2258:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2239:50;;;2308:7;2300:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1793:566;;;1611:748;;;;;;:::o;464:45::-;;;;;;;;;;;;;;;;;:::o;566:23::-;;;;:::o;88:117:17:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:77::-;2174:7;2203:5;2192:16;;2137:77;;;:::o;2220:122::-;2293:24;2311:5;2293:24;:::i;:::-;2286:5;2283:35;2273:63;;2332:1;2329;2322:12;2273:63;2220:122;:::o;2348:139::-;2394:5;2432:6;2419:20;2410:29;;2448:33;2475:5;2448:33;:::i;:::-;2348:139;;;;:::o;2493:1255::-;2608:6;2616;2624;2632;2640;2648;2656;2705:3;2693:9;2684:7;2680:23;2676:33;2673:120;;;2712:79;;:::i;:::-;2673:120;2832:1;2857:53;2902:7;2893:6;2882:9;2878:22;2857:53;:::i;:::-;2847:63;;2803:117;2959:2;2985:53;3030:7;3021:6;3010:9;3006:22;2985:53;:::i;:::-;2975:63;;2930:118;3115:2;3104:9;3100:18;3087:32;3146:18;3138:6;3135:30;3132:117;;;3168:79;;:::i;:::-;3132:117;3281:64;3337:7;3328:6;3317:9;3313:22;3281:64;:::i;:::-;3263:82;;;;3058:297;3394:2;3420:53;3465:7;3456:6;3445:9;3441:22;3420:53;:::i;:::-;3410:63;;3365:118;3522:3;3549:53;3594:7;3585:6;3574:9;3570:22;3549:53;:::i;:::-;3539:63;;3493:119;3651:3;3678:53;3723:7;3714:6;3703:9;3699:22;3678:53;:::i;:::-;3668:63;;3622:119;2493:1255;;;;;;;;;;:::o;3754:1109::-;3860:6;3868;3876;3884;3892;3900;3949:3;3937:9;3928:7;3924:23;3920:33;3917:120;;;3956:79;;:::i;:::-;3917:120;4076:1;4101:53;4146:7;4137:6;4126:9;4122:22;4101:53;:::i;:::-;4091:63;;4047:117;4203:2;4229:53;4274:7;4265:6;4254:9;4250:22;4229:53;:::i;:::-;4219:63;;4174:118;4359:2;4348:9;4344:18;4331:32;4390:18;4382:6;4379:30;4376:117;;;4412:79;;:::i;:::-;4376:117;4525:64;4581:7;4572:6;4561:9;4557:22;4525:64;:::i;:::-;4507:82;;;;4302:297;4638:2;4664:53;4709:7;4700:6;4689:9;4685:22;4664:53;:::i;:::-;4654:63;;4609:118;4766:3;4793:53;4838:7;4829:6;4818:9;4814:22;4793:53;:::i;:::-;4783:63;;4737:119;3754:1109;;;;;;;;:::o;4869:329::-;4928:6;4977:2;4965:9;4956:7;4952:23;4948:32;4945:119;;;4983:79;;:::i;:::-;4945:119;5103:1;5128:53;5173:7;5164:6;5153:9;5149:22;5128:53;:::i;:::-;5118:63;;5074:117;4869:329;;;;:::o;5204:118::-;5291:24;5309:5;5291:24;:::i;:::-;5286:3;5279:37;5204:118;;:::o;5328:222::-;5421:4;5459:2;5448:9;5444:18;5436:26;;5472:71;5540:1;5529:9;5525:17;5516:6;5472:71;:::i;:::-;5328:222;;;;:::o;5556:169::-;5640:11;5674:6;5669:3;5662:19;5714:4;5709:3;5705:14;5690:29;;5556:169;;;;:::o;5731:225::-;5871:34;5867:1;5859:6;5855:14;5848:58;5940:8;5935:2;5927:6;5923:15;5916:33;5731:225;:::o;5962:366::-;6104:3;6125:67;6189:2;6184:3;6125:67;:::i;:::-;6118:74;;6201:93;6290:3;6201:93;:::i;:::-;6319:2;6314:3;6310:12;6303:19;;5962:366;;;:::o;6334:419::-;6500:4;6538:2;6527:9;6523:18;6515:26;;6587:9;6581:4;6577:20;6573:1;6562:9;6558:17;6551:47;6615:131;6741:4;6615:131;:::i;:::-;6607:139;;6334:419;;;:::o;6759:118::-;6846:24;6864:5;6846:24;:::i;:::-;6841:3;6834:37;6759:118;;:::o;6883:168::-;6966:11;7000:6;6995:3;6988:19;7040:4;7035:3;7031:14;7016:29;;6883:168;;;;:::o;7057:146::-;7154:6;7149:3;7144;7131:30;7195:1;7186:6;7181:3;7177:16;7170:27;7057:146;;;:::o;7209:102::-;7250:6;7301:2;7297:7;7292:2;7285:5;7281:14;7277:28;7267:38;;7209:102;;;:::o;7339:314::-;7435:3;7456:70;7519:6;7514:3;7456:70;:::i;:::-;7449:77;;7536:56;7585:6;7580:3;7573:5;7536:56;:::i;:::-;7617:29;7639:6;7617:29;:::i;:::-;7612:3;7608:39;7601:46;;7339:314;;;;;:::o;7659:118::-;7746:24;7764:5;7746:24;:::i;:::-;7741:3;7734:37;7659:118;;:::o;7783:771::-;8016:4;8054:3;8043:9;8039:19;8031:27;;8068:71;8136:1;8125:9;8121:17;8112:6;8068:71;:::i;:::-;8149:72;8217:2;8206:9;8202:18;8193:6;8149:72;:::i;:::-;8268:9;8262:4;8258:20;8253:2;8242:9;8238:18;8231:48;8296:86;8377:4;8368:6;8360;8296:86;:::i;:::-;8288:94;;8392:72;8460:2;8449:9;8445:18;8436:6;8392:72;:::i;:::-;8474:73;8542:3;8531:9;8527:19;8518:6;8474:73;:::i;:::-;7783:771;;;;;;;;;:::o;8560:224::-;8700:34;8696:1;8688:6;8684:14;8677:58;8769:7;8764:2;8756:6;8752:15;8745:32;8560:224;:::o;8790:366::-;8932:3;8953:67;9017:2;9012:3;8953:67;:::i;:::-;8946:74;;9029:93;9118:3;9029:93;:::i;:::-;9147:2;9142:3;9138:12;9131:19;;8790:366;;;:::o;9162:419::-;9328:4;9366:2;9355:9;9351:18;9343:26;;9415:9;9409:4;9405:20;9401:1;9390:9;9386:17;9379:47;9443:131;9569:4;9443:131;:::i;:::-;9435:139;;9162:419;;;:::o;9587:180::-;9635:77;9632:1;9625:88;9732:4;9729:1;9722:15;9756:4;9753:1;9746:15;9773:191;9813:3;9832:20;9850:1;9832:20;:::i;:::-;9827:25;;9866:20;9884:1;9866:20;:::i;:::-;9861:25;;9909:1;9906;9902:9;9895:16;;9930:3;9927:1;9924:10;9921:36;;;9937:18;;:::i;:::-;9921:36;9773:191;;;;:::o;9970:220::-;10110:34;10106:1;10098:6;10094:14;10087:58;10179:3;10174:2;10166:6;10162:15;10155:28;9970:220;:::o;10196:366::-;10338:3;10359:67;10423:2;10418:3;10359:67;:::i;:::-;10352:74;;10435:93;10524:3;10435:93;:::i;:::-;10553:2;10548:3;10544:12;10537:19;;10196:366;;;:::o;10568:419::-;10734:4;10772:2;10761:9;10757:18;10749:26;;10821:9;10815:4;10811:20;10807:1;10796:9;10792:17;10785:47;10849:131;10975:4;10849:131;:::i;:::-;10841:139;;10568:419;;;:::o;10993:179::-;11133:31;11129:1;11121:6;11117:14;11110:55;10993:179;:::o;11178:366::-;11320:3;11341:67;11405:2;11400:3;11341:67;:::i;:::-;11334:74;;11417:93;11506:3;11417:93;:::i;:::-;11535:2;11530:3;11526:12;11519:19;;11178:366;;;:::o;11550:419::-;11716:4;11754:2;11743:9;11739:18;11731:26;;11803:9;11797:4;11793:20;11789:1;11778:9;11774:17;11767:47;11831:131;11957:4;11831:131;:::i;:::-;11823:139;;11550:419;;;:::o;11975:147::-;12076:11;12113:3;12098:18;;11975:147;;;;:::o;12150:327::-;12264:3;12285:88;12366:6;12361:3;12285:88;:::i;:::-;12278:95;;12383:56;12432:6;12427:3;12420:5;12383:56;:::i;:::-;12464:6;12459:3;12455:16;12448:23;;12150:327;;;;;:::o;12483:291::-;12623:3;12645:103;12744:3;12735:6;12727;12645:103;:::i;:::-;12638:110;;12765:3;12758:10;;12483:291;;;;;:::o;12780:181::-;12920:33;12916:1;12908:6;12904:14;12897:57;12780:181;:::o;12967:366::-;13109:3;13130:67;13194:2;13189:3;13130:67;:::i;:::-;13123:74;;13206:93;13295:3;13206:93;:::i;:::-;13324:2;13319:3;13315:12;13308:19;;12967:366;;;:::o;13339:419::-;13505:4;13543:2;13532:9;13528:18;13520:26;;13592:9;13586:4;13582:20;13578:1;13567:9;13563:17;13556:47;13620:131;13746:4;13620:131;:::i;:::-;13612:139;;13339:419;;;:::o"},"methodIdentifiers":{"execute(address,uint256,bytes,bytes32,bytes32)":"134008d3","minDelay()":"c63c4e9b","schedule(address,uint256,bytes,bytes32,bytes32,uint256)":"01d5062a","timestamps(bytes32)":"b5872958"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minDelay\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"predecessor\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"predecessor\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"delay\",\"type\":\"uint256\"}],\"name\":\"schedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"timestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_minDelay\":\"The minimum number of seconds to wait before execution\"}}},\"title\":\"TimelockController (Minimal Example)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(address,uint256,bytes,bytes32,bytes32)\":{\"notice\":\"Execute a previously scheduled call after its delay has elapsed.\"},\"schedule(address,uint256,bytes,bytes32,bytes32,uint256)\":{\"notice\":\"Schedule a function call after the given delay.\"}},\"notice\":\"A simple timelock that schedules and executes calls after a delay.         For a real system, consider using OpenZeppelin\\u2019s TimelockController instead.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TimeLockController.sol\":\"TimelockController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ITimelockController.sol\":{\"keccak256\":\"0x377a5a039531965865d59dfbfe3288de75943876f8b0d6b5a352c2b7b25a78e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c870698b5dc856551a77a9c58b8706d5d892fd1e0c5ebf9402226e4989eadb58\",\"dweb:/ipfs/QmcXEWgbYrKPwbpPqqNBvqgjqV2zm6h8hQtrFkUc1Ey7UW\"]},\"contracts/TimeLockController.sol\":{\"keccak256\":\"0x897af710acb7d2462dd887f0b5a2dfc515baecf454e8b1beb3d3ad649aa61772\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e5df9acf05d411fc109215f4618a6a810486cbdffe8d8d47188227c68cb0bd\",\"dweb:/ipfs/QmdStW4ZuVgC9KFuwtXxTSKexV8A6uVURKJJJxwc9wWiGt\"]}},\"version\":1}"}}}}}